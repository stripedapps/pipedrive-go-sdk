/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjectPutPlanItemBodyObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectPutPlanItemBodyObject{}

// ProjectPutPlanItemBodyObject struct for ProjectPutPlanItemBodyObject
type ProjectPutPlanItemBodyObject struct {
	// The ID of a phase on a project board
	PhaseId *float32 `json:"phase_id,omitempty"`
	// The ID of a group on a project board
	GroupId *float32 `json:"group_id,omitempty"`
}

// NewProjectPutPlanItemBodyObject instantiates a new ProjectPutPlanItemBodyObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectPutPlanItemBodyObject() *ProjectPutPlanItemBodyObject {
	this := ProjectPutPlanItemBodyObject{}
	return &this
}

// NewProjectPutPlanItemBodyObjectWithDefaults instantiates a new ProjectPutPlanItemBodyObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectPutPlanItemBodyObjectWithDefaults() *ProjectPutPlanItemBodyObject {
	this := ProjectPutPlanItemBodyObject{}
	return &this
}

// GetPhaseId returns the PhaseId field value if set, zero value otherwise.
func (o *ProjectPutPlanItemBodyObject) GetPhaseId() float32 {
	if o == nil || IsNil(o.PhaseId) {
		var ret float32
		return ret
	}
	return *o.PhaseId
}

// GetPhaseIdOk returns a tuple with the PhaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectPutPlanItemBodyObject) GetPhaseIdOk() (*float32, bool) {
	if o == nil || IsNil(o.PhaseId) {
		return nil, false
	}
	return o.PhaseId, true
}

// HasPhaseId returns a boolean if a field has been set.
func (o *ProjectPutPlanItemBodyObject) HasPhaseId() bool {
	if o != nil && !IsNil(o.PhaseId) {
		return true
	}

	return false
}

// SetPhaseId gets a reference to the given float32 and assigns it to the PhaseId field.
func (o *ProjectPutPlanItemBodyObject) SetPhaseId(v float32) {
	o.PhaseId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *ProjectPutPlanItemBodyObject) GetGroupId() float32 {
	if o == nil || IsNil(o.GroupId) {
		var ret float32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectPutPlanItemBodyObject) GetGroupIdOk() (*float32, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *ProjectPutPlanItemBodyObject) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given float32 and assigns it to the GroupId field.
func (o *ProjectPutPlanItemBodyObject) SetGroupId(v float32) {
	o.GroupId = &v
}

func (o ProjectPutPlanItemBodyObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectPutPlanItemBodyObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PhaseId) {
		toSerialize["phase_id"] = o.PhaseId
	}
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	return toSerialize, nil
}

type NullableProjectPutPlanItemBodyObject struct {
	value *ProjectPutPlanItemBodyObject
	isSet bool
}

func (v NullableProjectPutPlanItemBodyObject) Get() *ProjectPutPlanItemBodyObject {
	return v.value
}

func (v *NullableProjectPutPlanItemBodyObject) Set(val *ProjectPutPlanItemBodyObject) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectPutPlanItemBodyObject) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectPutPlanItemBodyObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectPutPlanItemBodyObject(val *ProjectPutPlanItemBodyObject) *NullableProjectPutPlanItemBodyObject {
	return &NullableProjectPutPlanItemBodyObject{value: val, isSet: true}
}

func (v NullableProjectPutPlanItemBodyObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectPutPlanItemBodyObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


