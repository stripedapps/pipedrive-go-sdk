/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ActivityResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityResponseObject{}

// ActivityResponseObject struct for ActivityResponseObject
type ActivityResponseObject struct {
	// The due date of the activity. Format: YYYY-MM-DD
	DueDate *string `json:"due_date,omitempty"`
	// The due time of the activity in UTC. Format: HH:MM
	DueTime *string `json:"due_time,omitempty"`
	// The duration of the activity. Format: HH:MM
	Duration *string `json:"duration,omitempty"`
	// The ID of the deal this activity is associated with
	DealId *int32 `json:"deal_id,omitempty"`
	// The ID of the lead in the UUID format this activity is associated with
	LeadId NullableString `json:"lead_id,omitempty"`
	// The ID of the person this activity is associated with
	PersonId *int32 `json:"person_id,omitempty"`
	// The ID of the project this activity is associated with
	ProjectId NullableInt32 `json:"project_id,omitempty"`
	// The ID of the organization this activity is associated with
	OrgId *int32 `json:"org_id,omitempty"`
	// The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
	Location *string `json:"location,omitempty"`
	// Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
	PublicDescription *string `json:"public_description,omitempty"`
	// The ID of the activity, generated when the activity was created
	Id *int32 `json:"id,omitempty"`
	// The note of the activity (HTML format)
	Note *string `json:"note,omitempty"`
	// Whether the activity is done or not
	Done *bool `json:"done,omitempty"`
	// The subject of the activity
	Subject *string `json:"subject,omitempty"`
	// The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
	Type *string `json:"type,omitempty"`
	// The ID of the user whom the activity is assigned to
	UserId *int32 `json:"user_id,omitempty"`
	// List of multiple persons (participants) this activity is associated with
	Participants []map[string]interface{} `json:"participants,omitempty"`
	// Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
	BusyFlag *bool `json:"busy_flag,omitempty"`
	// The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.
	Attendees []map[string]interface{} `json:"attendees,omitempty"`
	// The user's company ID
	CompanyId *int32 `json:"company_id,omitempty"`
	// If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller.
	ReferenceType *string `json:"reference_type,omitempty"`
	// Together with the `reference_type`, gives the ID of the other object
	ReferenceId *int32 `json:"reference_id,omitempty"`
	// The ID of the Marketplace app, which is connected to this activity
	ConferenceMeetingClient *string `json:"conference_meeting_client,omitempty"`
	// The link to join the meeting which is associated with this activity
	ConferenceMeetingUrl *string `json:"conference_meeting_url,omitempty"`
	// The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity
	ConferenceMeetingId *string `json:"conference_meeting_id,omitempty"`
	// The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS.
	AddTime *string `json:"add_time,omitempty"`
	// The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS.
	MarkedAsDoneTime *string `json:"marked_as_done_time,omitempty"`
	// The date and time of latest notifications sent about this activity to the participants or the attendees of this activity
	LastNotificationTime *string `json:"last_notification_time,omitempty"`
	// The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity
	LastNotificationUserId *int32 `json:"last_notification_user_id,omitempty"`
	// The ID of the language the notifications are sent in
	NotificationLanguageId *int32 `json:"notification_language_id,omitempty"`
	// Whether the activity is active or not
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS.
	UpdateTime *string `json:"update_time,omitempty"`
	// The ID of the user who was the last to update this activity
	UpdateUserId *int32 `json:"update_user_id,omitempty"`
	// For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon.
	GcalEventId *string `json:"gcal_event_id,omitempty"`
	// The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon.
	GoogleCalendarId *string `json:"google_calendar_id,omitempty"`
	// The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon.
	GoogleCalendarEtag *string `json:"google_calendar_etag,omitempty"`
	// For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)
	CalendarSyncIncludeContext *string `json:"calendar_sync_include_context,omitempty"`
	// The timezone the activity was created in an external calendar
	SourceTimezone *string `json:"source_timezone,omitempty"`
	// The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: \"RRULE:FREQ=WEEKLY;BYDAY=WE\"
	RecRule *string `json:"rec_rule,omitempty"`
	// Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar.
	RecRuleExtension *string `json:"rec_rule_extension,omitempty"`
	// The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules
	RecMasterActivityId *int32 `json:"rec_master_activity_id,omitempty"`
	// The list of recurring activity instances. It is in a structure as follows: `[{due_date: \"2020-06-24\", due_time: \"10:00:00\"}]`
	Series []map[string]interface{} `json:"series,omitempty"`
	// The ID of the user who created the activity
	CreatedByUserId *int32 `json:"created_by_user_id,omitempty"`
	// A subfield of the location field. Indicates apartment/suite number.
	LocationSubpremise *string `json:"location_subpremise,omitempty"`
	// A subfield of the location field. Indicates house number.
	LocationStreetNumber *string `json:"location_street_number,omitempty"`
	// A subfield of the location field. Indicates street name.
	LocationRoute *string `json:"location_route,omitempty"`
	// A subfield of the location field. Indicates district/sublocality.
	LocationSublocality *string `json:"location_sublocality,omitempty"`
	// A subfield of the location field. Indicates city/town/village/locality.
	LocationLocality *string `json:"location_locality,omitempty"`
	// A subfield of the location field. Indicates state/county.
	LocationAdminAreaLevel1 *string `json:"location_admin_area_level_1,omitempty"`
	// A subfield of the location field. Indicates region.
	LocationAdminAreaLevel2 *string `json:"location_admin_area_level_2,omitempty"`
	// A subfield of the location field. Indicates country.
	LocationCountry *string `json:"location_country,omitempty"`
	// A subfield of the location field. Indicates ZIP/postal code.
	LocationPostalCode *string `json:"location_postal_code,omitempty"`
	// A subfield of the location field. Indicates full/combined address.
	LocationFormattedAddress *string `json:"location_formatted_address,omitempty"`
	// The name of the organization this activity is associated with
	OrgName *string `json:"org_name,omitempty"`
	// The name of the person this activity is associated with
	PersonName *string `json:"person_name,omitempty"`
	// The name of the deal this activity is associated with
	DealTitle *string `json:"deal_title,omitempty"`
	// The name of the user this activity is owned by
	OwnerName *string `json:"owner_name,omitempty"`
	// The BCC email address of the person
	PersonDropboxBcc *string `json:"person_dropbox_bcc,omitempty"`
	// The BCC email address of the deal
	DealDropboxBcc *string `json:"deal_dropbox_bcc,omitempty"`
	// The ID of the user to whom the activity is assigned to. Equal to `user_id`.
	AssignedToUserId *int32 `json:"assigned_to_user_id,omitempty"`
	// The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app.
	File map[string]interface{} `json:"file,omitempty"`
}

// NewActivityResponseObject instantiates a new ActivityResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityResponseObject() *ActivityResponseObject {
	this := ActivityResponseObject{}
	return &this
}

// NewActivityResponseObjectWithDefaults instantiates a new ActivityResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityResponseObjectWithDefaults() *ActivityResponseObject {
	this := ActivityResponseObject{}
	return &this
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *ActivityResponseObject) SetDueDate(v string) {
	o.DueDate = &v
}

// GetDueTime returns the DueTime field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetDueTime() string {
	if o == nil || IsNil(o.DueTime) {
		var ret string
		return ret
	}
	return *o.DueTime
}

// GetDueTimeOk returns a tuple with the DueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetDueTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DueTime) {
		return nil, false
	}
	return o.DueTime, true
}

// HasDueTime returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasDueTime() bool {
	if o != nil && !IsNil(o.DueTime) {
		return true
	}

	return false
}

// SetDueTime gets a reference to the given string and assigns it to the DueTime field.
func (o *ActivityResponseObject) SetDueTime(v string) {
	o.DueTime = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetDuration() string {
	if o == nil || IsNil(o.Duration) {
		var ret string
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetDurationOk() (*string, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given string and assigns it to the Duration field.
func (o *ActivityResponseObject) SetDuration(v string) {
	o.Duration = &v
}

// GetDealId returns the DealId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetDealId() int32 {
	if o == nil || IsNil(o.DealId) {
		var ret int32
		return ret
	}
	return *o.DealId
}

// GetDealIdOk returns a tuple with the DealId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetDealIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DealId) {
		return nil, false
	}
	return o.DealId, true
}

// HasDealId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasDealId() bool {
	if o != nil && !IsNil(o.DealId) {
		return true
	}

	return false
}

// SetDealId gets a reference to the given int32 and assigns it to the DealId field.
func (o *ActivityResponseObject) SetDealId(v int32) {
	o.DealId = &v
}

// GetLeadId returns the LeadId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityResponseObject) GetLeadId() string {
	if o == nil || IsNil(o.LeadId.Get()) {
		var ret string
		return ret
	}
	return *o.LeadId.Get()
}

// GetLeadIdOk returns a tuple with the LeadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityResponseObject) GetLeadIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LeadId.Get(), o.LeadId.IsSet()
}

// HasLeadId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLeadId() bool {
	if o != nil && o.LeadId.IsSet() {
		return true
	}

	return false
}

// SetLeadId gets a reference to the given NullableString and assigns it to the LeadId field.
func (o *ActivityResponseObject) SetLeadId(v string) {
	o.LeadId.Set(&v)
}
// SetLeadIdNil sets the value for LeadId to be an explicit nil
func (o *ActivityResponseObject) SetLeadIdNil() {
	o.LeadId.Set(nil)
}

// UnsetLeadId ensures that no value is present for LeadId, not even an explicit nil
func (o *ActivityResponseObject) UnsetLeadId() {
	o.LeadId.Unset()
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetPersonId() int32 {
	if o == nil || IsNil(o.PersonId) {
		var ret int32
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetPersonIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given int32 and assigns it to the PersonId field.
func (o *ActivityResponseObject) SetPersonId(v int32) {
	o.PersonId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityResponseObject) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityResponseObject) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableInt32 and assigns it to the ProjectId field.
func (o *ActivityResponseObject) SetProjectId(v int32) {
	o.ProjectId.Set(&v)
}
// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *ActivityResponseObject) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *ActivityResponseObject) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *ActivityResponseObject) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *ActivityResponseObject) SetLocation(v string) {
	o.Location = &v
}

// GetPublicDescription returns the PublicDescription field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetPublicDescription() string {
	if o == nil || IsNil(o.PublicDescription) {
		var ret string
		return ret
	}
	return *o.PublicDescription
}

// GetPublicDescriptionOk returns a tuple with the PublicDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetPublicDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.PublicDescription) {
		return nil, false
	}
	return o.PublicDescription, true
}

// HasPublicDescription returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasPublicDescription() bool {
	if o != nil && !IsNil(o.PublicDescription) {
		return true
	}

	return false
}

// SetPublicDescription gets a reference to the given string and assigns it to the PublicDescription field.
func (o *ActivityResponseObject) SetPublicDescription(v string) {
	o.PublicDescription = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ActivityResponseObject) SetId(v int32) {
	o.Id = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *ActivityResponseObject) SetNote(v string) {
	o.Note = &v
}

// GetDone returns the Done field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetDone() bool {
	if o == nil || IsNil(o.Done) {
		var ret bool
		return ret
	}
	return *o.Done
}

// GetDoneOk returns a tuple with the Done field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.Done) {
		return nil, false
	}
	return o.Done, true
}

// HasDone returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasDone() bool {
	if o != nil && !IsNil(o.Done) {
		return true
	}

	return false
}

// SetDone gets a reference to the given bool and assigns it to the Done field.
func (o *ActivityResponseObject) SetDone(v bool) {
	o.Done = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *ActivityResponseObject) SetSubject(v string) {
	o.Subject = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ActivityResponseObject) SetType(v string) {
	o.Type = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ActivityResponseObject) SetUserId(v int32) {
	o.UserId = &v
}

// GetParticipants returns the Participants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityResponseObject) GetParticipants() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.Participants
}

// GetParticipantsOk returns a tuple with the Participants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityResponseObject) GetParticipantsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Participants) {
		return nil, false
	}
	return o.Participants, true
}

// HasParticipants returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasParticipants() bool {
	if o != nil && IsNil(o.Participants) {
		return true
	}

	return false
}

// SetParticipants gets a reference to the given []map[string]interface{} and assigns it to the Participants field.
func (o *ActivityResponseObject) SetParticipants(v []map[string]interface{}) {
	o.Participants = v
}

// GetBusyFlag returns the BusyFlag field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetBusyFlag() bool {
	if o == nil || IsNil(o.BusyFlag) {
		var ret bool
		return ret
	}
	return *o.BusyFlag
}

// GetBusyFlagOk returns a tuple with the BusyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetBusyFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.BusyFlag) {
		return nil, false
	}
	return o.BusyFlag, true
}

// HasBusyFlag returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasBusyFlag() bool {
	if o != nil && !IsNil(o.BusyFlag) {
		return true
	}

	return false
}

// SetBusyFlag gets a reference to the given bool and assigns it to the BusyFlag field.
func (o *ActivityResponseObject) SetBusyFlag(v bool) {
	o.BusyFlag = &v
}

// GetAttendees returns the Attendees field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityResponseObject) GetAttendees() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.Attendees
}

// GetAttendeesOk returns a tuple with the Attendees field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityResponseObject) GetAttendeesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attendees) {
		return nil, false
	}
	return o.Attendees, true
}

// HasAttendees returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasAttendees() bool {
	if o != nil && IsNil(o.Attendees) {
		return true
	}

	return false
}

// SetAttendees gets a reference to the given []map[string]interface{} and assigns it to the Attendees field.
func (o *ActivityResponseObject) SetAttendees(v []map[string]interface{}) {
	o.Attendees = v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *ActivityResponseObject) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetReferenceType returns the ReferenceType field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetReferenceType() string {
	if o == nil || IsNil(o.ReferenceType) {
		var ret string
		return ret
	}
	return *o.ReferenceType
}

// GetReferenceTypeOk returns a tuple with the ReferenceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetReferenceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceType) {
		return nil, false
	}
	return o.ReferenceType, true
}

// HasReferenceType returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasReferenceType() bool {
	if o != nil && !IsNil(o.ReferenceType) {
		return true
	}

	return false
}

// SetReferenceType gets a reference to the given string and assigns it to the ReferenceType field.
func (o *ActivityResponseObject) SetReferenceType(v string) {
	o.ReferenceType = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetReferenceId() int32 {
	if o == nil || IsNil(o.ReferenceId) {
		var ret int32
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetReferenceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReferenceId) {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasReferenceId() bool {
	if o != nil && !IsNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given int32 and assigns it to the ReferenceId field.
func (o *ActivityResponseObject) SetReferenceId(v int32) {
	o.ReferenceId = &v
}

// GetConferenceMeetingClient returns the ConferenceMeetingClient field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetConferenceMeetingClient() string {
	if o == nil || IsNil(o.ConferenceMeetingClient) {
		var ret string
		return ret
	}
	return *o.ConferenceMeetingClient
}

// GetConferenceMeetingClientOk returns a tuple with the ConferenceMeetingClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetConferenceMeetingClientOk() (*string, bool) {
	if o == nil || IsNil(o.ConferenceMeetingClient) {
		return nil, false
	}
	return o.ConferenceMeetingClient, true
}

// HasConferenceMeetingClient returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasConferenceMeetingClient() bool {
	if o != nil && !IsNil(o.ConferenceMeetingClient) {
		return true
	}

	return false
}

// SetConferenceMeetingClient gets a reference to the given string and assigns it to the ConferenceMeetingClient field.
func (o *ActivityResponseObject) SetConferenceMeetingClient(v string) {
	o.ConferenceMeetingClient = &v
}

// GetConferenceMeetingUrl returns the ConferenceMeetingUrl field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetConferenceMeetingUrl() string {
	if o == nil || IsNil(o.ConferenceMeetingUrl) {
		var ret string
		return ret
	}
	return *o.ConferenceMeetingUrl
}

// GetConferenceMeetingUrlOk returns a tuple with the ConferenceMeetingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetConferenceMeetingUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ConferenceMeetingUrl) {
		return nil, false
	}
	return o.ConferenceMeetingUrl, true
}

// HasConferenceMeetingUrl returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasConferenceMeetingUrl() bool {
	if o != nil && !IsNil(o.ConferenceMeetingUrl) {
		return true
	}

	return false
}

// SetConferenceMeetingUrl gets a reference to the given string and assigns it to the ConferenceMeetingUrl field.
func (o *ActivityResponseObject) SetConferenceMeetingUrl(v string) {
	o.ConferenceMeetingUrl = &v
}

// GetConferenceMeetingId returns the ConferenceMeetingId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetConferenceMeetingId() string {
	if o == nil || IsNil(o.ConferenceMeetingId) {
		var ret string
		return ret
	}
	return *o.ConferenceMeetingId
}

// GetConferenceMeetingIdOk returns a tuple with the ConferenceMeetingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetConferenceMeetingIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConferenceMeetingId) {
		return nil, false
	}
	return o.ConferenceMeetingId, true
}

// HasConferenceMeetingId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasConferenceMeetingId() bool {
	if o != nil && !IsNil(o.ConferenceMeetingId) {
		return true
	}

	return false
}

// SetConferenceMeetingId gets a reference to the given string and assigns it to the ConferenceMeetingId field.
func (o *ActivityResponseObject) SetConferenceMeetingId(v string) {
	o.ConferenceMeetingId = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *ActivityResponseObject) SetAddTime(v string) {
	o.AddTime = &v
}

// GetMarkedAsDoneTime returns the MarkedAsDoneTime field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetMarkedAsDoneTime() string {
	if o == nil || IsNil(o.MarkedAsDoneTime) {
		var ret string
		return ret
	}
	return *o.MarkedAsDoneTime
}

// GetMarkedAsDoneTimeOk returns a tuple with the MarkedAsDoneTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetMarkedAsDoneTimeOk() (*string, bool) {
	if o == nil || IsNil(o.MarkedAsDoneTime) {
		return nil, false
	}
	return o.MarkedAsDoneTime, true
}

// HasMarkedAsDoneTime returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasMarkedAsDoneTime() bool {
	if o != nil && !IsNil(o.MarkedAsDoneTime) {
		return true
	}

	return false
}

// SetMarkedAsDoneTime gets a reference to the given string and assigns it to the MarkedAsDoneTime field.
func (o *ActivityResponseObject) SetMarkedAsDoneTime(v string) {
	o.MarkedAsDoneTime = &v
}

// GetLastNotificationTime returns the LastNotificationTime field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLastNotificationTime() string {
	if o == nil || IsNil(o.LastNotificationTime) {
		var ret string
		return ret
	}
	return *o.LastNotificationTime
}

// GetLastNotificationTimeOk returns a tuple with the LastNotificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLastNotificationTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastNotificationTime) {
		return nil, false
	}
	return o.LastNotificationTime, true
}

// HasLastNotificationTime returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLastNotificationTime() bool {
	if o != nil && !IsNil(o.LastNotificationTime) {
		return true
	}

	return false
}

// SetLastNotificationTime gets a reference to the given string and assigns it to the LastNotificationTime field.
func (o *ActivityResponseObject) SetLastNotificationTime(v string) {
	o.LastNotificationTime = &v
}

// GetLastNotificationUserId returns the LastNotificationUserId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLastNotificationUserId() int32 {
	if o == nil || IsNil(o.LastNotificationUserId) {
		var ret int32
		return ret
	}
	return *o.LastNotificationUserId
}

// GetLastNotificationUserIdOk returns a tuple with the LastNotificationUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLastNotificationUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LastNotificationUserId) {
		return nil, false
	}
	return o.LastNotificationUserId, true
}

// HasLastNotificationUserId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLastNotificationUserId() bool {
	if o != nil && !IsNil(o.LastNotificationUserId) {
		return true
	}

	return false
}

// SetLastNotificationUserId gets a reference to the given int32 and assigns it to the LastNotificationUserId field.
func (o *ActivityResponseObject) SetLastNotificationUserId(v int32) {
	o.LastNotificationUserId = &v
}

// GetNotificationLanguageId returns the NotificationLanguageId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetNotificationLanguageId() int32 {
	if o == nil || IsNil(o.NotificationLanguageId) {
		var ret int32
		return ret
	}
	return *o.NotificationLanguageId
}

// GetNotificationLanguageIdOk returns a tuple with the NotificationLanguageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetNotificationLanguageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NotificationLanguageId) {
		return nil, false
	}
	return o.NotificationLanguageId, true
}

// HasNotificationLanguageId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasNotificationLanguageId() bool {
	if o != nil && !IsNil(o.NotificationLanguageId) {
		return true
	}

	return false
}

// SetNotificationLanguageId gets a reference to the given int32 and assigns it to the NotificationLanguageId field.
func (o *ActivityResponseObject) SetNotificationLanguageId(v int32) {
	o.NotificationLanguageId = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *ActivityResponseObject) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *ActivityResponseObject) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetUpdateUserId returns the UpdateUserId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetUpdateUserId() int32 {
	if o == nil || IsNil(o.UpdateUserId) {
		var ret int32
		return ret
	}
	return *o.UpdateUserId
}

// GetUpdateUserIdOk returns a tuple with the UpdateUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetUpdateUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdateUserId) {
		return nil, false
	}
	return o.UpdateUserId, true
}

// HasUpdateUserId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasUpdateUserId() bool {
	if o != nil && !IsNil(o.UpdateUserId) {
		return true
	}

	return false
}

// SetUpdateUserId gets a reference to the given int32 and assigns it to the UpdateUserId field.
func (o *ActivityResponseObject) SetUpdateUserId(v int32) {
	o.UpdateUserId = &v
}

// GetGcalEventId returns the GcalEventId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetGcalEventId() string {
	if o == nil || IsNil(o.GcalEventId) {
		var ret string
		return ret
	}
	return *o.GcalEventId
}

// GetGcalEventIdOk returns a tuple with the GcalEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetGcalEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.GcalEventId) {
		return nil, false
	}
	return o.GcalEventId, true
}

// HasGcalEventId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasGcalEventId() bool {
	if o != nil && !IsNil(o.GcalEventId) {
		return true
	}

	return false
}

// SetGcalEventId gets a reference to the given string and assigns it to the GcalEventId field.
func (o *ActivityResponseObject) SetGcalEventId(v string) {
	o.GcalEventId = &v
}

// GetGoogleCalendarId returns the GoogleCalendarId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetGoogleCalendarId() string {
	if o == nil || IsNil(o.GoogleCalendarId) {
		var ret string
		return ret
	}
	return *o.GoogleCalendarId
}

// GetGoogleCalendarIdOk returns a tuple with the GoogleCalendarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetGoogleCalendarIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleCalendarId) {
		return nil, false
	}
	return o.GoogleCalendarId, true
}

// HasGoogleCalendarId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasGoogleCalendarId() bool {
	if o != nil && !IsNil(o.GoogleCalendarId) {
		return true
	}

	return false
}

// SetGoogleCalendarId gets a reference to the given string and assigns it to the GoogleCalendarId field.
func (o *ActivityResponseObject) SetGoogleCalendarId(v string) {
	o.GoogleCalendarId = &v
}

// GetGoogleCalendarEtag returns the GoogleCalendarEtag field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetGoogleCalendarEtag() string {
	if o == nil || IsNil(o.GoogleCalendarEtag) {
		var ret string
		return ret
	}
	return *o.GoogleCalendarEtag
}

// GetGoogleCalendarEtagOk returns a tuple with the GoogleCalendarEtag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetGoogleCalendarEtagOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleCalendarEtag) {
		return nil, false
	}
	return o.GoogleCalendarEtag, true
}

// HasGoogleCalendarEtag returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasGoogleCalendarEtag() bool {
	if o != nil && !IsNil(o.GoogleCalendarEtag) {
		return true
	}

	return false
}

// SetGoogleCalendarEtag gets a reference to the given string and assigns it to the GoogleCalendarEtag field.
func (o *ActivityResponseObject) SetGoogleCalendarEtag(v string) {
	o.GoogleCalendarEtag = &v
}

// GetCalendarSyncIncludeContext returns the CalendarSyncIncludeContext field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetCalendarSyncIncludeContext() string {
	if o == nil || IsNil(o.CalendarSyncIncludeContext) {
		var ret string
		return ret
	}
	return *o.CalendarSyncIncludeContext
}

// GetCalendarSyncIncludeContextOk returns a tuple with the CalendarSyncIncludeContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetCalendarSyncIncludeContextOk() (*string, bool) {
	if o == nil || IsNil(o.CalendarSyncIncludeContext) {
		return nil, false
	}
	return o.CalendarSyncIncludeContext, true
}

// HasCalendarSyncIncludeContext returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasCalendarSyncIncludeContext() bool {
	if o != nil && !IsNil(o.CalendarSyncIncludeContext) {
		return true
	}

	return false
}

// SetCalendarSyncIncludeContext gets a reference to the given string and assigns it to the CalendarSyncIncludeContext field.
func (o *ActivityResponseObject) SetCalendarSyncIncludeContext(v string) {
	o.CalendarSyncIncludeContext = &v
}

// GetSourceTimezone returns the SourceTimezone field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetSourceTimezone() string {
	if o == nil || IsNil(o.SourceTimezone) {
		var ret string
		return ret
	}
	return *o.SourceTimezone
}

// GetSourceTimezoneOk returns a tuple with the SourceTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetSourceTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.SourceTimezone) {
		return nil, false
	}
	return o.SourceTimezone, true
}

// HasSourceTimezone returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasSourceTimezone() bool {
	if o != nil && !IsNil(o.SourceTimezone) {
		return true
	}

	return false
}

// SetSourceTimezone gets a reference to the given string and assigns it to the SourceTimezone field.
func (o *ActivityResponseObject) SetSourceTimezone(v string) {
	o.SourceTimezone = &v
}

// GetRecRule returns the RecRule field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetRecRule() string {
	if o == nil || IsNil(o.RecRule) {
		var ret string
		return ret
	}
	return *o.RecRule
}

// GetRecRuleOk returns a tuple with the RecRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetRecRuleOk() (*string, bool) {
	if o == nil || IsNil(o.RecRule) {
		return nil, false
	}
	return o.RecRule, true
}

// HasRecRule returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasRecRule() bool {
	if o != nil && !IsNil(o.RecRule) {
		return true
	}

	return false
}

// SetRecRule gets a reference to the given string and assigns it to the RecRule field.
func (o *ActivityResponseObject) SetRecRule(v string) {
	o.RecRule = &v
}

// GetRecRuleExtension returns the RecRuleExtension field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetRecRuleExtension() string {
	if o == nil || IsNil(o.RecRuleExtension) {
		var ret string
		return ret
	}
	return *o.RecRuleExtension
}

// GetRecRuleExtensionOk returns a tuple with the RecRuleExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetRecRuleExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.RecRuleExtension) {
		return nil, false
	}
	return o.RecRuleExtension, true
}

// HasRecRuleExtension returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasRecRuleExtension() bool {
	if o != nil && !IsNil(o.RecRuleExtension) {
		return true
	}

	return false
}

// SetRecRuleExtension gets a reference to the given string and assigns it to the RecRuleExtension field.
func (o *ActivityResponseObject) SetRecRuleExtension(v string) {
	o.RecRuleExtension = &v
}

// GetRecMasterActivityId returns the RecMasterActivityId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetRecMasterActivityId() int32 {
	if o == nil || IsNil(o.RecMasterActivityId) {
		var ret int32
		return ret
	}
	return *o.RecMasterActivityId
}

// GetRecMasterActivityIdOk returns a tuple with the RecMasterActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetRecMasterActivityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RecMasterActivityId) {
		return nil, false
	}
	return o.RecMasterActivityId, true
}

// HasRecMasterActivityId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasRecMasterActivityId() bool {
	if o != nil && !IsNil(o.RecMasterActivityId) {
		return true
	}

	return false
}

// SetRecMasterActivityId gets a reference to the given int32 and assigns it to the RecMasterActivityId field.
func (o *ActivityResponseObject) SetRecMasterActivityId(v int32) {
	o.RecMasterActivityId = &v
}

// GetSeries returns the Series field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetSeries() []map[string]interface{} {
	if o == nil || IsNil(o.Series) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Series
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetSeriesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Series) {
		return nil, false
	}
	return o.Series, true
}

// HasSeries returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasSeries() bool {
	if o != nil && !IsNil(o.Series) {
		return true
	}

	return false
}

// SetSeries gets a reference to the given []map[string]interface{} and assigns it to the Series field.
func (o *ActivityResponseObject) SetSeries(v []map[string]interface{}) {
	o.Series = v
}

// GetCreatedByUserId returns the CreatedByUserId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetCreatedByUserId() int32 {
	if o == nil || IsNil(o.CreatedByUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedByUserId
}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetCreatedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedByUserId) {
		return nil, false
	}
	return o.CreatedByUserId, true
}

// HasCreatedByUserId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasCreatedByUserId() bool {
	if o != nil && !IsNil(o.CreatedByUserId) {
		return true
	}

	return false
}

// SetCreatedByUserId gets a reference to the given int32 and assigns it to the CreatedByUserId field.
func (o *ActivityResponseObject) SetCreatedByUserId(v int32) {
	o.CreatedByUserId = &v
}

// GetLocationSubpremise returns the LocationSubpremise field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationSubpremise() string {
	if o == nil || IsNil(o.LocationSubpremise) {
		var ret string
		return ret
	}
	return *o.LocationSubpremise
}

// GetLocationSubpremiseOk returns a tuple with the LocationSubpremise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationSubpremiseOk() (*string, bool) {
	if o == nil || IsNil(o.LocationSubpremise) {
		return nil, false
	}
	return o.LocationSubpremise, true
}

// HasLocationSubpremise returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationSubpremise() bool {
	if o != nil && !IsNil(o.LocationSubpremise) {
		return true
	}

	return false
}

// SetLocationSubpremise gets a reference to the given string and assigns it to the LocationSubpremise field.
func (o *ActivityResponseObject) SetLocationSubpremise(v string) {
	o.LocationSubpremise = &v
}

// GetLocationStreetNumber returns the LocationStreetNumber field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationStreetNumber() string {
	if o == nil || IsNil(o.LocationStreetNumber) {
		var ret string
		return ret
	}
	return *o.LocationStreetNumber
}

// GetLocationStreetNumberOk returns a tuple with the LocationStreetNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationStreetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.LocationStreetNumber) {
		return nil, false
	}
	return o.LocationStreetNumber, true
}

// HasLocationStreetNumber returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationStreetNumber() bool {
	if o != nil && !IsNil(o.LocationStreetNumber) {
		return true
	}

	return false
}

// SetLocationStreetNumber gets a reference to the given string and assigns it to the LocationStreetNumber field.
func (o *ActivityResponseObject) SetLocationStreetNumber(v string) {
	o.LocationStreetNumber = &v
}

// GetLocationRoute returns the LocationRoute field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationRoute() string {
	if o == nil || IsNil(o.LocationRoute) {
		var ret string
		return ret
	}
	return *o.LocationRoute
}

// GetLocationRouteOk returns a tuple with the LocationRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationRouteOk() (*string, bool) {
	if o == nil || IsNil(o.LocationRoute) {
		return nil, false
	}
	return o.LocationRoute, true
}

// HasLocationRoute returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationRoute() bool {
	if o != nil && !IsNil(o.LocationRoute) {
		return true
	}

	return false
}

// SetLocationRoute gets a reference to the given string and assigns it to the LocationRoute field.
func (o *ActivityResponseObject) SetLocationRoute(v string) {
	o.LocationRoute = &v
}

// GetLocationSublocality returns the LocationSublocality field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationSublocality() string {
	if o == nil || IsNil(o.LocationSublocality) {
		var ret string
		return ret
	}
	return *o.LocationSublocality
}

// GetLocationSublocalityOk returns a tuple with the LocationSublocality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationSublocalityOk() (*string, bool) {
	if o == nil || IsNil(o.LocationSublocality) {
		return nil, false
	}
	return o.LocationSublocality, true
}

// HasLocationSublocality returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationSublocality() bool {
	if o != nil && !IsNil(o.LocationSublocality) {
		return true
	}

	return false
}

// SetLocationSublocality gets a reference to the given string and assigns it to the LocationSublocality field.
func (o *ActivityResponseObject) SetLocationSublocality(v string) {
	o.LocationSublocality = &v
}

// GetLocationLocality returns the LocationLocality field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationLocality() string {
	if o == nil || IsNil(o.LocationLocality) {
		var ret string
		return ret
	}
	return *o.LocationLocality
}

// GetLocationLocalityOk returns a tuple with the LocationLocality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationLocalityOk() (*string, bool) {
	if o == nil || IsNil(o.LocationLocality) {
		return nil, false
	}
	return o.LocationLocality, true
}

// HasLocationLocality returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationLocality() bool {
	if o != nil && !IsNil(o.LocationLocality) {
		return true
	}

	return false
}

// SetLocationLocality gets a reference to the given string and assigns it to the LocationLocality field.
func (o *ActivityResponseObject) SetLocationLocality(v string) {
	o.LocationLocality = &v
}

// GetLocationAdminAreaLevel1 returns the LocationAdminAreaLevel1 field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationAdminAreaLevel1() string {
	if o == nil || IsNil(o.LocationAdminAreaLevel1) {
		var ret string
		return ret
	}
	return *o.LocationAdminAreaLevel1
}

// GetLocationAdminAreaLevel1Ok returns a tuple with the LocationAdminAreaLevel1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationAdminAreaLevel1Ok() (*string, bool) {
	if o == nil || IsNil(o.LocationAdminAreaLevel1) {
		return nil, false
	}
	return o.LocationAdminAreaLevel1, true
}

// HasLocationAdminAreaLevel1 returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationAdminAreaLevel1() bool {
	if o != nil && !IsNil(o.LocationAdminAreaLevel1) {
		return true
	}

	return false
}

// SetLocationAdminAreaLevel1 gets a reference to the given string and assigns it to the LocationAdminAreaLevel1 field.
func (o *ActivityResponseObject) SetLocationAdminAreaLevel1(v string) {
	o.LocationAdminAreaLevel1 = &v
}

// GetLocationAdminAreaLevel2 returns the LocationAdminAreaLevel2 field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationAdminAreaLevel2() string {
	if o == nil || IsNil(o.LocationAdminAreaLevel2) {
		var ret string
		return ret
	}
	return *o.LocationAdminAreaLevel2
}

// GetLocationAdminAreaLevel2Ok returns a tuple with the LocationAdminAreaLevel2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationAdminAreaLevel2Ok() (*string, bool) {
	if o == nil || IsNil(o.LocationAdminAreaLevel2) {
		return nil, false
	}
	return o.LocationAdminAreaLevel2, true
}

// HasLocationAdminAreaLevel2 returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationAdminAreaLevel2() bool {
	if o != nil && !IsNil(o.LocationAdminAreaLevel2) {
		return true
	}

	return false
}

// SetLocationAdminAreaLevel2 gets a reference to the given string and assigns it to the LocationAdminAreaLevel2 field.
func (o *ActivityResponseObject) SetLocationAdminAreaLevel2(v string) {
	o.LocationAdminAreaLevel2 = &v
}

// GetLocationCountry returns the LocationCountry field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationCountry() string {
	if o == nil || IsNil(o.LocationCountry) {
		var ret string
		return ret
	}
	return *o.LocationCountry
}

// GetLocationCountryOk returns a tuple with the LocationCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationCountryOk() (*string, bool) {
	if o == nil || IsNil(o.LocationCountry) {
		return nil, false
	}
	return o.LocationCountry, true
}

// HasLocationCountry returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationCountry() bool {
	if o != nil && !IsNil(o.LocationCountry) {
		return true
	}

	return false
}

// SetLocationCountry gets a reference to the given string and assigns it to the LocationCountry field.
func (o *ActivityResponseObject) SetLocationCountry(v string) {
	o.LocationCountry = &v
}

// GetLocationPostalCode returns the LocationPostalCode field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationPostalCode() string {
	if o == nil || IsNil(o.LocationPostalCode) {
		var ret string
		return ret
	}
	return *o.LocationPostalCode
}

// GetLocationPostalCodeOk returns a tuple with the LocationPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LocationPostalCode) {
		return nil, false
	}
	return o.LocationPostalCode, true
}

// HasLocationPostalCode returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationPostalCode() bool {
	if o != nil && !IsNil(o.LocationPostalCode) {
		return true
	}

	return false
}

// SetLocationPostalCode gets a reference to the given string and assigns it to the LocationPostalCode field.
func (o *ActivityResponseObject) SetLocationPostalCode(v string) {
	o.LocationPostalCode = &v
}

// GetLocationFormattedAddress returns the LocationFormattedAddress field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetLocationFormattedAddress() string {
	if o == nil || IsNil(o.LocationFormattedAddress) {
		var ret string
		return ret
	}
	return *o.LocationFormattedAddress
}

// GetLocationFormattedAddressOk returns a tuple with the LocationFormattedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetLocationFormattedAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LocationFormattedAddress) {
		return nil, false
	}
	return o.LocationFormattedAddress, true
}

// HasLocationFormattedAddress returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasLocationFormattedAddress() bool {
	if o != nil && !IsNil(o.LocationFormattedAddress) {
		return true
	}

	return false
}

// SetLocationFormattedAddress gets a reference to the given string and assigns it to the LocationFormattedAddress field.
func (o *ActivityResponseObject) SetLocationFormattedAddress(v string) {
	o.LocationFormattedAddress = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *ActivityResponseObject) SetOrgName(v string) {
	o.OrgName = &v
}

// GetPersonName returns the PersonName field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetPersonName() string {
	if o == nil || IsNil(o.PersonName) {
		var ret string
		return ret
	}
	return *o.PersonName
}

// GetPersonNameOk returns a tuple with the PersonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetPersonNameOk() (*string, bool) {
	if o == nil || IsNil(o.PersonName) {
		return nil, false
	}
	return o.PersonName, true
}

// HasPersonName returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasPersonName() bool {
	if o != nil && !IsNil(o.PersonName) {
		return true
	}

	return false
}

// SetPersonName gets a reference to the given string and assigns it to the PersonName field.
func (o *ActivityResponseObject) SetPersonName(v string) {
	o.PersonName = &v
}

// GetDealTitle returns the DealTitle field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetDealTitle() string {
	if o == nil || IsNil(o.DealTitle) {
		var ret string
		return ret
	}
	return *o.DealTitle
}

// GetDealTitleOk returns a tuple with the DealTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetDealTitleOk() (*string, bool) {
	if o == nil || IsNil(o.DealTitle) {
		return nil, false
	}
	return o.DealTitle, true
}

// HasDealTitle returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasDealTitle() bool {
	if o != nil && !IsNil(o.DealTitle) {
		return true
	}

	return false
}

// SetDealTitle gets a reference to the given string and assigns it to the DealTitle field.
func (o *ActivityResponseObject) SetDealTitle(v string) {
	o.DealTitle = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetOwnerName() string {
	if o == nil || IsNil(o.OwnerName) {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerName) {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasOwnerName() bool {
	if o != nil && !IsNil(o.OwnerName) {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *ActivityResponseObject) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetPersonDropboxBcc returns the PersonDropboxBcc field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetPersonDropboxBcc() string {
	if o == nil || IsNil(o.PersonDropboxBcc) {
		var ret string
		return ret
	}
	return *o.PersonDropboxBcc
}

// GetPersonDropboxBccOk returns a tuple with the PersonDropboxBcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetPersonDropboxBccOk() (*string, bool) {
	if o == nil || IsNil(o.PersonDropboxBcc) {
		return nil, false
	}
	return o.PersonDropboxBcc, true
}

// HasPersonDropboxBcc returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasPersonDropboxBcc() bool {
	if o != nil && !IsNil(o.PersonDropboxBcc) {
		return true
	}

	return false
}

// SetPersonDropboxBcc gets a reference to the given string and assigns it to the PersonDropboxBcc field.
func (o *ActivityResponseObject) SetPersonDropboxBcc(v string) {
	o.PersonDropboxBcc = &v
}

// GetDealDropboxBcc returns the DealDropboxBcc field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetDealDropboxBcc() string {
	if o == nil || IsNil(o.DealDropboxBcc) {
		var ret string
		return ret
	}
	return *o.DealDropboxBcc
}

// GetDealDropboxBccOk returns a tuple with the DealDropboxBcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetDealDropboxBccOk() (*string, bool) {
	if o == nil || IsNil(o.DealDropboxBcc) {
		return nil, false
	}
	return o.DealDropboxBcc, true
}

// HasDealDropboxBcc returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasDealDropboxBcc() bool {
	if o != nil && !IsNil(o.DealDropboxBcc) {
		return true
	}

	return false
}

// SetDealDropboxBcc gets a reference to the given string and assigns it to the DealDropboxBcc field.
func (o *ActivityResponseObject) SetDealDropboxBcc(v string) {
	o.DealDropboxBcc = &v
}

// GetAssignedToUserId returns the AssignedToUserId field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetAssignedToUserId() int32 {
	if o == nil || IsNil(o.AssignedToUserId) {
		var ret int32
		return ret
	}
	return *o.AssignedToUserId
}

// GetAssignedToUserIdOk returns a tuple with the AssignedToUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetAssignedToUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AssignedToUserId) {
		return nil, false
	}
	return o.AssignedToUserId, true
}

// HasAssignedToUserId returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasAssignedToUserId() bool {
	if o != nil && !IsNil(o.AssignedToUserId) {
		return true
	}

	return false
}

// SetAssignedToUserId gets a reference to the given int32 and assigns it to the AssignedToUserId field.
func (o *ActivityResponseObject) SetAssignedToUserId(v int32) {
	o.AssignedToUserId = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *ActivityResponseObject) GetFile() map[string]interface{} {
	if o == nil || IsNil(o.File) {
		var ret map[string]interface{}
		return ret
	}
	return o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResponseObject) GetFileOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.File) {
		return map[string]interface{}{}, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *ActivityResponseObject) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given map[string]interface{} and assigns it to the File field.
func (o *ActivityResponseObject) SetFile(v map[string]interface{}) {
	o.File = v
}

func (o ActivityResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DueDate) {
		toSerialize["due_date"] = o.DueDate
	}
	if !IsNil(o.DueTime) {
		toSerialize["due_time"] = o.DueTime
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.DealId) {
		toSerialize["deal_id"] = o.DealId
	}
	if o.LeadId.IsSet() {
		toSerialize["lead_id"] = o.LeadId.Get()
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	if o.ProjectId.IsSet() {
		toSerialize["project_id"] = o.ProjectId.Get()
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.PublicDescription) {
		toSerialize["public_description"] = o.PublicDescription
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.Done) {
		toSerialize["done"] = o.Done
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if o.Participants != nil {
		toSerialize["participants"] = o.Participants
	}
	if !IsNil(o.BusyFlag) {
		toSerialize["busy_flag"] = o.BusyFlag
	}
	if o.Attendees != nil {
		toSerialize["attendees"] = o.Attendees
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.ReferenceType) {
		toSerialize["reference_type"] = o.ReferenceType
	}
	if !IsNil(o.ReferenceId) {
		toSerialize["reference_id"] = o.ReferenceId
	}
	if !IsNil(o.ConferenceMeetingClient) {
		toSerialize["conference_meeting_client"] = o.ConferenceMeetingClient
	}
	if !IsNil(o.ConferenceMeetingUrl) {
		toSerialize["conference_meeting_url"] = o.ConferenceMeetingUrl
	}
	if !IsNil(o.ConferenceMeetingId) {
		toSerialize["conference_meeting_id"] = o.ConferenceMeetingId
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.MarkedAsDoneTime) {
		toSerialize["marked_as_done_time"] = o.MarkedAsDoneTime
	}
	if !IsNil(o.LastNotificationTime) {
		toSerialize["last_notification_time"] = o.LastNotificationTime
	}
	if !IsNil(o.LastNotificationUserId) {
		toSerialize["last_notification_user_id"] = o.LastNotificationUserId
	}
	if !IsNil(o.NotificationLanguageId) {
		toSerialize["notification_language_id"] = o.NotificationLanguageId
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.UpdateUserId) {
		toSerialize["update_user_id"] = o.UpdateUserId
	}
	if !IsNil(o.GcalEventId) {
		toSerialize["gcal_event_id"] = o.GcalEventId
	}
	if !IsNil(o.GoogleCalendarId) {
		toSerialize["google_calendar_id"] = o.GoogleCalendarId
	}
	if !IsNil(o.GoogleCalendarEtag) {
		toSerialize["google_calendar_etag"] = o.GoogleCalendarEtag
	}
	if !IsNil(o.CalendarSyncIncludeContext) {
		toSerialize["calendar_sync_include_context"] = o.CalendarSyncIncludeContext
	}
	if !IsNil(o.SourceTimezone) {
		toSerialize["source_timezone"] = o.SourceTimezone
	}
	if !IsNil(o.RecRule) {
		toSerialize["rec_rule"] = o.RecRule
	}
	if !IsNil(o.RecRuleExtension) {
		toSerialize["rec_rule_extension"] = o.RecRuleExtension
	}
	if !IsNil(o.RecMasterActivityId) {
		toSerialize["rec_master_activity_id"] = o.RecMasterActivityId
	}
	if !IsNil(o.Series) {
		toSerialize["series"] = o.Series
	}
	if !IsNil(o.CreatedByUserId) {
		toSerialize["created_by_user_id"] = o.CreatedByUserId
	}
	if !IsNil(o.LocationSubpremise) {
		toSerialize["location_subpremise"] = o.LocationSubpremise
	}
	if !IsNil(o.LocationStreetNumber) {
		toSerialize["location_street_number"] = o.LocationStreetNumber
	}
	if !IsNil(o.LocationRoute) {
		toSerialize["location_route"] = o.LocationRoute
	}
	if !IsNil(o.LocationSublocality) {
		toSerialize["location_sublocality"] = o.LocationSublocality
	}
	if !IsNil(o.LocationLocality) {
		toSerialize["location_locality"] = o.LocationLocality
	}
	if !IsNil(o.LocationAdminAreaLevel1) {
		toSerialize["location_admin_area_level_1"] = o.LocationAdminAreaLevel1
	}
	if !IsNil(o.LocationAdminAreaLevel2) {
		toSerialize["location_admin_area_level_2"] = o.LocationAdminAreaLevel2
	}
	if !IsNil(o.LocationCountry) {
		toSerialize["location_country"] = o.LocationCountry
	}
	if !IsNil(o.LocationPostalCode) {
		toSerialize["location_postal_code"] = o.LocationPostalCode
	}
	if !IsNil(o.LocationFormattedAddress) {
		toSerialize["location_formatted_address"] = o.LocationFormattedAddress
	}
	if !IsNil(o.OrgName) {
		toSerialize["org_name"] = o.OrgName
	}
	if !IsNil(o.PersonName) {
		toSerialize["person_name"] = o.PersonName
	}
	if !IsNil(o.DealTitle) {
		toSerialize["deal_title"] = o.DealTitle
	}
	if !IsNil(o.OwnerName) {
		toSerialize["owner_name"] = o.OwnerName
	}
	if !IsNil(o.PersonDropboxBcc) {
		toSerialize["person_dropbox_bcc"] = o.PersonDropboxBcc
	}
	if !IsNil(o.DealDropboxBcc) {
		toSerialize["deal_dropbox_bcc"] = o.DealDropboxBcc
	}
	if !IsNil(o.AssignedToUserId) {
		toSerialize["assigned_to_user_id"] = o.AssignedToUserId
	}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	return toSerialize, nil
}

type NullableActivityResponseObject struct {
	value *ActivityResponseObject
	isSet bool
}

func (v NullableActivityResponseObject) Get() *ActivityResponseObject {
	return v.value
}

func (v *NullableActivityResponseObject) Set(val *ActivityResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityResponseObject(val *ActivityResponseObject) *NullableActivityResponseObject {
	return &NullableActivityResponseObject{value: val, isSet: true}
}

func (v NullableActivityResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


