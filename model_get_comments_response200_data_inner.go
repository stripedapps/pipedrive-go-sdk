/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetCommentsResponse200DataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCommentsResponse200DataInner{}

// GetCommentsResponse200DataInner struct for GetCommentsResponse200DataInner
type GetCommentsResponse200DataInner struct {
	// The ID of the note
	Uuid *string `json:"uuid,omitempty"`
	// Whether the note is active or deleted
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// The creation date and time of the note
	AddTime *string `json:"add_time,omitempty"`
	// The creation date and time of the note
	UpdateTime *string `json:"update_time,omitempty"`
	// The content of the note in HTML format. Subject to sanitization on the back-end.
	Content *string `json:"content,omitempty"`
	// The ID of the object that the comment is attached to, will be the id of the note
	ObjectId *string `json:"object_id,omitempty"`
	// The type of object that the comment is attached to, will be \"note\"
	ObjectType *string `json:"object_type,omitempty"`
	// The ID of the user who created the comment
	UserId *int32 `json:"user_id,omitempty"`
	// The ID of the user who last updated the comment
	UpdaterId *int32 `json:"updater_id,omitempty"`
	// The ID of the company
	CompanyId *int32 `json:"company_id,omitempty"`
}

// NewGetCommentsResponse200DataInner instantiates a new GetCommentsResponse200DataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCommentsResponse200DataInner() *GetCommentsResponse200DataInner {
	this := GetCommentsResponse200DataInner{}
	return &this
}

// NewGetCommentsResponse200DataInnerWithDefaults instantiates a new GetCommentsResponse200DataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCommentsResponse200DataInnerWithDefaults() *GetCommentsResponse200DataInner {
	this := GetCommentsResponse200DataInner{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *GetCommentsResponse200DataInner) SetUuid(v string) {
	o.Uuid = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *GetCommentsResponse200DataInner) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *GetCommentsResponse200DataInner) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *GetCommentsResponse200DataInner) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *GetCommentsResponse200DataInner) SetContent(v string) {
	o.Content = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId) {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *GetCommentsResponse200DataInner) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *GetCommentsResponse200DataInner) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *GetCommentsResponse200DataInner) SetUserId(v int32) {
	o.UserId = &v
}

// GetUpdaterId returns the UpdaterId field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetUpdaterId() int32 {
	if o == nil || IsNil(o.UpdaterId) {
		var ret int32
		return ret
	}
	return *o.UpdaterId
}

// GetUpdaterIdOk returns a tuple with the UpdaterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetUpdaterIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdaterId) {
		return nil, false
	}
	return o.UpdaterId, true
}

// HasUpdaterId returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasUpdaterId() bool {
	if o != nil && !IsNil(o.UpdaterId) {
		return true
	}

	return false
}

// SetUpdaterId gets a reference to the given int32 and assigns it to the UpdaterId field.
func (o *GetCommentsResponse200DataInner) SetUpdaterId(v int32) {
	o.UpdaterId = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *GetCommentsResponse200DataInner) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommentsResponse200DataInner) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *GetCommentsResponse200DataInner) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *GetCommentsResponse200DataInner) SetCompanyId(v int32) {
	o.CompanyId = &v
}

func (o GetCommentsResponse200DataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCommentsResponse200DataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ObjectId) {
		toSerialize["object_id"] = o.ObjectId
	}
	if !IsNil(o.ObjectType) {
		toSerialize["object_type"] = o.ObjectType
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.UpdaterId) {
		toSerialize["updater_id"] = o.UpdaterId
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	return toSerialize, nil
}

type NullableGetCommentsResponse200DataInner struct {
	value *GetCommentsResponse200DataInner
	isSet bool
}

func (v NullableGetCommentsResponse200DataInner) Get() *GetCommentsResponse200DataInner {
	return v.value
}

func (v *NullableGetCommentsResponse200DataInner) Set(val *GetCommentsResponse200DataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCommentsResponse200DataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCommentsResponse200DataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCommentsResponse200DataInner(val *GetCommentsResponse200DataInner) *NullableGetCommentsResponse200DataInner {
	return &NullableGetCommentsResponse200DataInner{value: val, isSet: true}
}

func (v NullableGetCommentsResponse200DataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCommentsResponse200DataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


