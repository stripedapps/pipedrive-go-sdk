/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddOrUpdateGoalResponse200Data type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOrUpdateGoalResponse200Data{}

// AddOrUpdateGoalResponse200Data struct for AddOrUpdateGoalResponse200Data
type AddOrUpdateGoalResponse200Data struct {
	Goal *AddOrUpdateGoalResponse200DataGoal `json:"goal,omitempty"`
}

// NewAddOrUpdateGoalResponse200Data instantiates a new AddOrUpdateGoalResponse200Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOrUpdateGoalResponse200Data() *AddOrUpdateGoalResponse200Data {
	this := AddOrUpdateGoalResponse200Data{}
	return &this
}

// NewAddOrUpdateGoalResponse200DataWithDefaults instantiates a new AddOrUpdateGoalResponse200Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOrUpdateGoalResponse200DataWithDefaults() *AddOrUpdateGoalResponse200Data {
	this := AddOrUpdateGoalResponse200Data{}
	return &this
}

// GetGoal returns the Goal field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200Data) GetGoal() AddOrUpdateGoalResponse200DataGoal {
	if o == nil || IsNil(o.Goal) {
		var ret AddOrUpdateGoalResponse200DataGoal
		return ret
	}
	return *o.Goal
}

// GetGoalOk returns a tuple with the Goal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200Data) GetGoalOk() (*AddOrUpdateGoalResponse200DataGoal, bool) {
	if o == nil || IsNil(o.Goal) {
		return nil, false
	}
	return o.Goal, true
}

// HasGoal returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200Data) HasGoal() bool {
	if o != nil && !IsNil(o.Goal) {
		return true
	}

	return false
}

// SetGoal gets a reference to the given AddOrUpdateGoalResponse200DataGoal and assigns it to the Goal field.
func (o *AddOrUpdateGoalResponse200Data) SetGoal(v AddOrUpdateGoalResponse200DataGoal) {
	o.Goal = &v
}

func (o AddOrUpdateGoalResponse200Data) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOrUpdateGoalResponse200Data) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Goal) {
		toSerialize["goal"] = o.Goal
	}
	return toSerialize, nil
}

type NullableAddOrUpdateGoalResponse200Data struct {
	value *AddOrUpdateGoalResponse200Data
	isSet bool
}

func (v NullableAddOrUpdateGoalResponse200Data) Get() *AddOrUpdateGoalResponse200Data {
	return v.value
}

func (v *NullableAddOrUpdateGoalResponse200Data) Set(val *AddOrUpdateGoalResponse200Data) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOrUpdateGoalResponse200Data) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOrUpdateGoalResponse200Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOrUpdateGoalResponse200Data(val *AddOrUpdateGoalResponse200Data) *NullableAddOrUpdateGoalResponse200Data {
	return &NullableAddOrUpdateGoalResponse200Data{value: val, isSet: true}
}

func (v NullableAddOrUpdateGoalResponse200Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOrUpdateGoalResponse200Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


