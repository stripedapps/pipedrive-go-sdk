/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListProductsResponse200AllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProductsResponse200AllOfData{}

// ListProductsResponse200AllOfData struct for ListProductsResponse200AllOfData
type ListProductsResponse200AllOfData struct {
	// The array of products
	Items []ListProductsResponse200AllOfDataItemsInner `json:"items,omitempty"`
}

// NewListProductsResponse200AllOfData instantiates a new ListProductsResponse200AllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProductsResponse200AllOfData() *ListProductsResponse200AllOfData {
	this := ListProductsResponse200AllOfData{}
	return &this
}

// NewListProductsResponse200AllOfDataWithDefaults instantiates a new ListProductsResponse200AllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProductsResponse200AllOfDataWithDefaults() *ListProductsResponse200AllOfData {
	this := ListProductsResponse200AllOfData{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfData) GetItems() []ListProductsResponse200AllOfDataItemsInner {
	if o == nil || IsNil(o.Items) {
		var ret []ListProductsResponse200AllOfDataItemsInner
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfData) GetItemsOk() ([]ListProductsResponse200AllOfDataItemsInner, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfData) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ListProductsResponse200AllOfDataItemsInner and assigns it to the Items field.
func (o *ListProductsResponse200AllOfData) SetItems(v []ListProductsResponse200AllOfDataItemsInner) {
	o.Items = v
}

func (o ListProductsResponse200AllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProductsResponse200AllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableListProductsResponse200AllOfData struct {
	value *ListProductsResponse200AllOfData
	isSet bool
}

func (v NullableListProductsResponse200AllOfData) Get() *ListProductsResponse200AllOfData {
	return v.value
}

func (v *NullableListProductsResponse200AllOfData) Set(val *ListProductsResponse200AllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableListProductsResponse200AllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableListProductsResponse200AllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProductsResponse200AllOfData(val *ListProductsResponse200AllOfData) *NullableListProductsResponse200AllOfData {
	return &NullableListProductsResponse200AllOfData{value: val, isSet: true}
}

func (v NullableListProductsResponse200AllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProductsResponse200AllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


