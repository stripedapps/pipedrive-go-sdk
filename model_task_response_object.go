/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TaskResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskResponseObject{}

// TaskResponseObject struct for TaskResponseObject
type TaskResponseObject struct {
	// The ID of the task, generated when the task was created
	Id *int32 `json:"id,omitempty"`
	// The title of the task
	Title *string `json:"title,omitempty"`
	// The ID of the project this task is associated with
	ProjectId *float32 `json:"project_id,omitempty"`
	// The description of the task
	Description *string `json:"description,omitempty"`
	// The ID of a parent task. Can not be ID of a task which is already a subtask.
	ParentTaskId *float32 `json:"parent_task_id,omitempty"`
	// The ID of the user who will be the assignee of the task
	AssigneeId *float32 `json:"assignee_id,omitempty"`
	Done *float32 `json:"done,omitempty"`
	// The due date of the task. Format: YYYY-MM-DD.
	DueDate *string `json:"due_date,omitempty"`
	// The creator of a task
	CreatorId *float32 `json:"creator_id,omitempty"`
	// The creation date and time of the task in UTC. Format: YYYY-MM-DD HH:MM:SS.
	AddTime *string `json:"add_time,omitempty"`
	// The update date and time of the task in UTC. Format: YYYY-MM-DD HH:MM:SS.
	UpdateTime *string `json:"update_time,omitempty"`
	// The marked as done date and time of the task in UTC. Format: YYYY-MM-DD HH:MM:SS.
	MarkedAsDoneTime *string `json:"marked_as_done_time,omitempty"`
}

// NewTaskResponseObject instantiates a new TaskResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskResponseObject() *TaskResponseObject {
	this := TaskResponseObject{}
	return &this
}

// NewTaskResponseObjectWithDefaults instantiates a new TaskResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskResponseObjectWithDefaults() *TaskResponseObject {
	this := TaskResponseObject{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaskResponseObject) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaskResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TaskResponseObject) SetId(v int32) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TaskResponseObject) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TaskResponseObject) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TaskResponseObject) SetTitle(v string) {
	o.Title = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *TaskResponseObject) GetProjectId() float32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret float32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetProjectIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *TaskResponseObject) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given float32 and assigns it to the ProjectId field.
func (o *TaskResponseObject) SetProjectId(v float32) {
	o.ProjectId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TaskResponseObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TaskResponseObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TaskResponseObject) SetDescription(v string) {
	o.Description = &v
}

// GetParentTaskId returns the ParentTaskId field value if set, zero value otherwise.
func (o *TaskResponseObject) GetParentTaskId() float32 {
	if o == nil || IsNil(o.ParentTaskId) {
		var ret float32
		return ret
	}
	return *o.ParentTaskId
}

// GetParentTaskIdOk returns a tuple with the ParentTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetParentTaskIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ParentTaskId) {
		return nil, false
	}
	return o.ParentTaskId, true
}

// HasParentTaskId returns a boolean if a field has been set.
func (o *TaskResponseObject) HasParentTaskId() bool {
	if o != nil && !IsNil(o.ParentTaskId) {
		return true
	}

	return false
}

// SetParentTaskId gets a reference to the given float32 and assigns it to the ParentTaskId field.
func (o *TaskResponseObject) SetParentTaskId(v float32) {
	o.ParentTaskId = &v
}

// GetAssigneeId returns the AssigneeId field value if set, zero value otherwise.
func (o *TaskResponseObject) GetAssigneeId() float32 {
	if o == nil || IsNil(o.AssigneeId) {
		var ret float32
		return ret
	}
	return *o.AssigneeId
}

// GetAssigneeIdOk returns a tuple with the AssigneeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetAssigneeIdOk() (*float32, bool) {
	if o == nil || IsNil(o.AssigneeId) {
		return nil, false
	}
	return o.AssigneeId, true
}

// HasAssigneeId returns a boolean if a field has been set.
func (o *TaskResponseObject) HasAssigneeId() bool {
	if o != nil && !IsNil(o.AssigneeId) {
		return true
	}

	return false
}

// SetAssigneeId gets a reference to the given float32 and assigns it to the AssigneeId field.
func (o *TaskResponseObject) SetAssigneeId(v float32) {
	o.AssigneeId = &v
}

// GetDone returns the Done field value if set, zero value otherwise.
func (o *TaskResponseObject) GetDone() float32 {
	if o == nil || IsNil(o.Done) {
		var ret float32
		return ret
	}
	return *o.Done
}

// GetDoneOk returns a tuple with the Done field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetDoneOk() (*float32, bool) {
	if o == nil || IsNil(o.Done) {
		return nil, false
	}
	return o.Done, true
}

// HasDone returns a boolean if a field has been set.
func (o *TaskResponseObject) HasDone() bool {
	if o != nil && !IsNil(o.Done) {
		return true
	}

	return false
}

// SetDone gets a reference to the given float32 and assigns it to the Done field.
func (o *TaskResponseObject) SetDone(v float32) {
	o.Done = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *TaskResponseObject) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *TaskResponseObject) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *TaskResponseObject) SetDueDate(v string) {
	o.DueDate = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *TaskResponseObject) GetCreatorId() float32 {
	if o == nil || IsNil(o.CreatorId) {
		var ret float32
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetCreatorIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *TaskResponseObject) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given float32 and assigns it to the CreatorId field.
func (o *TaskResponseObject) SetCreatorId(v float32) {
	o.CreatorId = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *TaskResponseObject) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *TaskResponseObject) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *TaskResponseObject) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *TaskResponseObject) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *TaskResponseObject) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *TaskResponseObject) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetMarkedAsDoneTime returns the MarkedAsDoneTime field value if set, zero value otherwise.
func (o *TaskResponseObject) GetMarkedAsDoneTime() string {
	if o == nil || IsNil(o.MarkedAsDoneTime) {
		var ret string
		return ret
	}
	return *o.MarkedAsDoneTime
}

// GetMarkedAsDoneTimeOk returns a tuple with the MarkedAsDoneTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResponseObject) GetMarkedAsDoneTimeOk() (*string, bool) {
	if o == nil || IsNil(o.MarkedAsDoneTime) {
		return nil, false
	}
	return o.MarkedAsDoneTime, true
}

// HasMarkedAsDoneTime returns a boolean if a field has been set.
func (o *TaskResponseObject) HasMarkedAsDoneTime() bool {
	if o != nil && !IsNil(o.MarkedAsDoneTime) {
		return true
	}

	return false
}

// SetMarkedAsDoneTime gets a reference to the given string and assigns it to the MarkedAsDoneTime field.
func (o *TaskResponseObject) SetMarkedAsDoneTime(v string) {
	o.MarkedAsDoneTime = &v
}

func (o TaskResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ParentTaskId) {
		toSerialize["parent_task_id"] = o.ParentTaskId
	}
	if !IsNil(o.AssigneeId) {
		toSerialize["assignee_id"] = o.AssigneeId
	}
	if !IsNil(o.Done) {
		toSerialize["done"] = o.Done
	}
	if !IsNil(o.DueDate) {
		toSerialize["due_date"] = o.DueDate
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creator_id"] = o.CreatorId
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.MarkedAsDoneTime) {
		toSerialize["marked_as_done_time"] = o.MarkedAsDoneTime
	}
	return toSerialize, nil
}

type NullableTaskResponseObject struct {
	value *TaskResponseObject
	isSet bool
}

func (v NullableTaskResponseObject) Get() *TaskResponseObject {
	return v.value
}

func (v *NullableTaskResponseObject) Set(val *TaskResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskResponseObject(val *TaskResponseObject) *NullableTaskResponseObject {
	return &NullableTaskResponseObject{value: val, isSet: true}
}

func (v NullableTaskResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


