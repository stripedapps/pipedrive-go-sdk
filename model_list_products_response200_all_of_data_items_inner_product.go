/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListProductsResponse200AllOfDataItemsInnerProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProductsResponse200AllOfDataItemsInnerProduct{}

// ListProductsResponse200AllOfDataItemsInnerProduct struct for ListProductsResponse200AllOfDataItemsInnerProduct
type ListProductsResponse200AllOfDataItemsInnerProduct struct {
	// The ID of the product
	Id *float32 `json:"id,omitempty"`
	// The name of the product
	Name *string `json:"name,omitempty"`
	// The product code
	Code *string `json:"code,omitempty"`
	// The unit in which this product is sold
	Unit *string `json:"unit,omitempty"`
	// The ax percentage
	Tax *float32 `json:"tax,omitempty"`
	// Whether this product is active or not
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// Whether this product is selected in deals or not
	Selectable *bool `json:"selectable,omitempty"`
	VisibleTo *string `json:"visible_to,omitempty"`
	// Information about the Pipedrive user who owns the product
	OwnerId map[string]interface{} `json:"owner_id,omitempty"`
	// Object of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional)
	Prices []map[string]interface{} `json:"prices,omitempty"`
}

// NewListProductsResponse200AllOfDataItemsInnerProduct instantiates a new ListProductsResponse200AllOfDataItemsInnerProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProductsResponse200AllOfDataItemsInnerProduct() *ListProductsResponse200AllOfDataItemsInnerProduct {
	this := ListProductsResponse200AllOfDataItemsInnerProduct{}
	var tax float32 = 0
	this.Tax = &tax
	var activeFlag bool = true
	this.ActiveFlag = &activeFlag
	var selectable bool = true
	this.Selectable = &selectable
	return &this
}

// NewListProductsResponse200AllOfDataItemsInnerProductWithDefaults instantiates a new ListProductsResponse200AllOfDataItemsInnerProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProductsResponse200AllOfDataItemsInnerProductWithDefaults() *ListProductsResponse200AllOfDataItemsInnerProduct {
	this := ListProductsResponse200AllOfDataItemsInnerProduct{}
	var tax float32 = 0
	this.Tax = &tax
	var activeFlag bool = true
	this.ActiveFlag = &activeFlag
	var selectable bool = true
	this.Selectable = &selectable
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetId(v float32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetCode(v string) {
	o.Code = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetUnit(v string) {
	o.Unit = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetTax() float32 {
	if o == nil || IsNil(o.Tax) {
		var ret float32
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.Tax) {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasTax() bool {
	if o != nil && !IsNil(o.Tax) {
		return true
	}

	return false
}

// SetTax gets a reference to the given float32 and assigns it to the Tax field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetTax(v float32) {
	o.Tax = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetSelectable returns the Selectable field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetSelectable() bool {
	if o == nil || IsNil(o.Selectable) {
		var ret bool
		return ret
	}
	return *o.Selectable
}

// GetSelectableOk returns a tuple with the Selectable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetSelectableOk() (*bool, bool) {
	if o == nil || IsNil(o.Selectable) {
		return nil, false
	}
	return o.Selectable, true
}

// HasSelectable returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasSelectable() bool {
	if o != nil && !IsNil(o.Selectable) {
		return true
	}

	return false
}

// SetSelectable gets a reference to the given bool and assigns it to the Selectable field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetSelectable(v bool) {
	o.Selectable = &v
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetOwnerId() map[string]interface{} {
	if o == nil || IsNil(o.OwnerId) {
		var ret map[string]interface{}
		return ret
	}
	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetOwnerIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return map[string]interface{}{}, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given map[string]interface{} and assigns it to the OwnerId field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetOwnerId(v map[string]interface{}) {
	o.OwnerId = v
}

// GetPrices returns the Prices field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetPrices() []map[string]interface{} {
	if o == nil || IsNil(o.Prices) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) GetPricesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Prices) {
		return []map[string]interface{}{}, false
	}
	return o.Prices, true
}

// HasPrices returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) HasPrices() bool {
	if o != nil && !IsNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given map[string]interface{} and assigns it to the Prices field.
func (o *ListProductsResponse200AllOfDataItemsInnerProduct) SetPrices(v []map[string]interface{}) {
	o.Prices = v
}

func (o ListProductsResponse200AllOfDataItemsInnerProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProductsResponse200AllOfDataItemsInnerProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.Tax) {
		toSerialize["tax"] = o.Tax
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.Selectable) {
		toSerialize["selectable"] = o.Selectable
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	return toSerialize, nil
}

type NullableListProductsResponse200AllOfDataItemsInnerProduct struct {
	value *ListProductsResponse200AllOfDataItemsInnerProduct
	isSet bool
}

func (v NullableListProductsResponse200AllOfDataItemsInnerProduct) Get() *ListProductsResponse200AllOfDataItemsInnerProduct {
	return v.value
}

func (v *NullableListProductsResponse200AllOfDataItemsInnerProduct) Set(val *ListProductsResponse200AllOfDataItemsInnerProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableListProductsResponse200AllOfDataItemsInnerProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableListProductsResponse200AllOfDataItemsInnerProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProductsResponse200AllOfDataItemsInnerProduct(val *ListProductsResponse200AllOfDataItemsInnerProduct) *NullableListProductsResponse200AllOfDataItemsInnerProduct {
	return &NullableListProductsResponse200AllOfDataItemsInnerProduct{value: val, isSet: true}
}

func (v NullableListProductsResponse200AllOfDataItemsInnerProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProductsResponse200AllOfDataItemsInnerProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


