/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the BaseMailThread type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseMailThread{}

// BaseMailThread struct for BaseMailThread
type BaseMailThread struct {
	// ID of the mail thread
	Id *int32 `json:"id,omitempty"`
	// The connection account ID
	AccountId *string `json:"account_id,omitempty"`
	// ID of the user whom mail message will be assigned to
	UserId *int32 `json:"user_id,omitempty"`
	// The subject
	Subject *string `json:"subject,omitempty"`
	// A snippet
	Snippet *string `json:"snippet,omitempty"`
	ReadFlag *float32 `json:"read_flag,omitempty"`
	// Mail tracking status
	MailTrackingStatus NullableString `json:"mail_tracking_status,omitempty"`
	HasAttachmentsFlag *float32 `json:"has_attachments_flag,omitempty"`
	HasInlineAttachmentsFlag *float32 `json:"has_inline_attachments_flag,omitempty"`
	HasRealAttachmentsFlag *float32 `json:"has_real_attachments_flag,omitempty"`
	DeletedFlag *float32 `json:"deleted_flag,omitempty"`
	SyncedFlag *float32 `json:"synced_flag,omitempty"`
	SmartBccFlag *float32 `json:"smart_bcc_flag,omitempty"`
	MailLinkTrackingEnabledFlag *float32 `json:"mail_link_tracking_enabled_flag,omitempty"`
	Parties *BaseMailThreadAllOfParties `json:"parties,omitempty"`
	// Parties of the drafted mail thread
	DraftsParties []map[string]interface{} `json:"drafts_parties,omitempty"`
	// Folders in which messages from thread are being stored
	Folders []string `json:"folders,omitempty"`
	// Version
	Version *float32 `json:"version,omitempty"`
	// A snippet from a draft
	SnippetDraft NullableString `json:"snippet_draft,omitempty"`
	// A snippet from a message sent
	SnippetSent *string `json:"snippet_sent,omitempty"`
	// An amount of messages
	MessageCount *int32 `json:"message_count,omitempty"`
	HasDraftFlag *float32 `json:"has_draft_flag,omitempty"`
	HasSentFlag *float32 `json:"has_sent_flag,omitempty"`
	ArchivedFlag *float32 `json:"archived_flag,omitempty"`
	SharedFlag *float32 `json:"shared_flag,omitempty"`
	ExternalDeletedFlag *float32 `json:"external_deleted_flag,omitempty"`
	FirstMessageToMeFlag *float32 `json:"first_message_to_me_flag,omitempty"`
	// Last message timestamp
	LastMessageTimestamp *time.Time `json:"last_message_timestamp,omitempty"`
	// The time when the mail thread has had the first message received or created
	FirstMessageTimestamp *time.Time `json:"first_message_timestamp,omitempty"`
	// The last time when the mail thread has had a message sent
	LastMessageSentTimestamp NullableTime `json:"last_message_sent_timestamp,omitempty"`
	// The last time when the mail thread has had a message received
	LastMessageReceivedTimestamp *time.Time `json:"last_message_received_timestamp,omitempty"`
	// The time when the mail thread was inserted to database
	AddTime *time.Time `json:"add_time,omitempty"`
	// The time when the mail thread was updated in database received
	UpdateTime *time.Time `json:"update_time,omitempty"`
	// The ID of the deal
	DealId NullableInt32 `json:"deal_id,omitempty"`
	// Status of the deal
	DealStatus NullableString `json:"deal_status,omitempty"`
	// The ID of the lead
	LeadId NullableString `json:"lead_id,omitempty"`
	AllMessagesSentFlag *float32 `json:"all_messages_sent_flag,omitempty"`
}

// NewBaseMailThread instantiates a new BaseMailThread object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseMailThread() *BaseMailThread {
	this := BaseMailThread{}
	var readFlag float32 = 0
	this.ReadFlag = &readFlag
	var hasAttachmentsFlag float32 = 0
	this.HasAttachmentsFlag = &hasAttachmentsFlag
	var hasInlineAttachmentsFlag float32 = 0
	this.HasInlineAttachmentsFlag = &hasInlineAttachmentsFlag
	var hasRealAttachmentsFlag float32 = 0
	this.HasRealAttachmentsFlag = &hasRealAttachmentsFlag
	var deletedFlag float32 = 0
	this.DeletedFlag = &deletedFlag
	var syncedFlag float32 = 0
	this.SyncedFlag = &syncedFlag
	var smartBccFlag float32 = 0
	this.SmartBccFlag = &smartBccFlag
	var mailLinkTrackingEnabledFlag float32 = 0
	this.MailLinkTrackingEnabledFlag = &mailLinkTrackingEnabledFlag
	var hasDraftFlag float32 = 0
	this.HasDraftFlag = &hasDraftFlag
	var hasSentFlag float32 = 0
	this.HasSentFlag = &hasSentFlag
	var archivedFlag float32 = 0
	this.ArchivedFlag = &archivedFlag
	var sharedFlag float32 = 0
	this.SharedFlag = &sharedFlag
	var externalDeletedFlag float32 = 0
	this.ExternalDeletedFlag = &externalDeletedFlag
	var firstMessageToMeFlag float32 = 0
	this.FirstMessageToMeFlag = &firstMessageToMeFlag
	var allMessagesSentFlag float32 = 0
	this.AllMessagesSentFlag = &allMessagesSentFlag
	return &this
}

// NewBaseMailThreadWithDefaults instantiates a new BaseMailThread object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseMailThreadWithDefaults() *BaseMailThread {
	this := BaseMailThread{}
	var readFlag float32 = 0
	this.ReadFlag = &readFlag
	var hasAttachmentsFlag float32 = 0
	this.HasAttachmentsFlag = &hasAttachmentsFlag
	var hasInlineAttachmentsFlag float32 = 0
	this.HasInlineAttachmentsFlag = &hasInlineAttachmentsFlag
	var hasRealAttachmentsFlag float32 = 0
	this.HasRealAttachmentsFlag = &hasRealAttachmentsFlag
	var deletedFlag float32 = 0
	this.DeletedFlag = &deletedFlag
	var syncedFlag float32 = 0
	this.SyncedFlag = &syncedFlag
	var smartBccFlag float32 = 0
	this.SmartBccFlag = &smartBccFlag
	var mailLinkTrackingEnabledFlag float32 = 0
	this.MailLinkTrackingEnabledFlag = &mailLinkTrackingEnabledFlag
	var hasDraftFlag float32 = 0
	this.HasDraftFlag = &hasDraftFlag
	var hasSentFlag float32 = 0
	this.HasSentFlag = &hasSentFlag
	var archivedFlag float32 = 0
	this.ArchivedFlag = &archivedFlag
	var sharedFlag float32 = 0
	this.SharedFlag = &sharedFlag
	var externalDeletedFlag float32 = 0
	this.ExternalDeletedFlag = &externalDeletedFlag
	var firstMessageToMeFlag float32 = 0
	this.FirstMessageToMeFlag = &firstMessageToMeFlag
	var allMessagesSentFlag float32 = 0
	this.AllMessagesSentFlag = &allMessagesSentFlag
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BaseMailThread) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BaseMailThread) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *BaseMailThread) SetId(v int32) {
	o.Id = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *BaseMailThread) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *BaseMailThread) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *BaseMailThread) SetAccountId(v string) {
	o.AccountId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *BaseMailThread) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *BaseMailThread) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *BaseMailThread) SetUserId(v int32) {
	o.UserId = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *BaseMailThread) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *BaseMailThread) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *BaseMailThread) SetSubject(v string) {
	o.Subject = &v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *BaseMailThread) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *BaseMailThread) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *BaseMailThread) SetSnippet(v string) {
	o.Snippet = &v
}

// GetReadFlag returns the ReadFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetReadFlag() float32 {
	if o == nil || IsNil(o.ReadFlag) {
		var ret float32
		return ret
	}
	return *o.ReadFlag
}

// GetReadFlagOk returns a tuple with the ReadFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetReadFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.ReadFlag) {
		return nil, false
	}
	return o.ReadFlag, true
}

// HasReadFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasReadFlag() bool {
	if o != nil && !IsNil(o.ReadFlag) {
		return true
	}

	return false
}

// SetReadFlag gets a reference to the given float32 and assigns it to the ReadFlag field.
func (o *BaseMailThread) SetReadFlag(v float32) {
	o.ReadFlag = &v
}

// GetMailTrackingStatus returns the MailTrackingStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseMailThread) GetMailTrackingStatus() string {
	if o == nil || IsNil(o.MailTrackingStatus.Get()) {
		var ret string
		return ret
	}
	return *o.MailTrackingStatus.Get()
}

// GetMailTrackingStatusOk returns a tuple with the MailTrackingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseMailThread) GetMailTrackingStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MailTrackingStatus.Get(), o.MailTrackingStatus.IsSet()
}

// HasMailTrackingStatus returns a boolean if a field has been set.
func (o *BaseMailThread) HasMailTrackingStatus() bool {
	if o != nil && o.MailTrackingStatus.IsSet() {
		return true
	}

	return false
}

// SetMailTrackingStatus gets a reference to the given NullableString and assigns it to the MailTrackingStatus field.
func (o *BaseMailThread) SetMailTrackingStatus(v string) {
	o.MailTrackingStatus.Set(&v)
}
// SetMailTrackingStatusNil sets the value for MailTrackingStatus to be an explicit nil
func (o *BaseMailThread) SetMailTrackingStatusNil() {
	o.MailTrackingStatus.Set(nil)
}

// UnsetMailTrackingStatus ensures that no value is present for MailTrackingStatus, not even an explicit nil
func (o *BaseMailThread) UnsetMailTrackingStatus() {
	o.MailTrackingStatus.Unset()
}

// GetHasAttachmentsFlag returns the HasAttachmentsFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetHasAttachmentsFlag() float32 {
	if o == nil || IsNil(o.HasAttachmentsFlag) {
		var ret float32
		return ret
	}
	return *o.HasAttachmentsFlag
}

// GetHasAttachmentsFlagOk returns a tuple with the HasAttachmentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetHasAttachmentsFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.HasAttachmentsFlag) {
		return nil, false
	}
	return o.HasAttachmentsFlag, true
}

// HasHasAttachmentsFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasHasAttachmentsFlag() bool {
	if o != nil && !IsNil(o.HasAttachmentsFlag) {
		return true
	}

	return false
}

// SetHasAttachmentsFlag gets a reference to the given float32 and assigns it to the HasAttachmentsFlag field.
func (o *BaseMailThread) SetHasAttachmentsFlag(v float32) {
	o.HasAttachmentsFlag = &v
}

// GetHasInlineAttachmentsFlag returns the HasInlineAttachmentsFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetHasInlineAttachmentsFlag() float32 {
	if o == nil || IsNil(o.HasInlineAttachmentsFlag) {
		var ret float32
		return ret
	}
	return *o.HasInlineAttachmentsFlag
}

// GetHasInlineAttachmentsFlagOk returns a tuple with the HasInlineAttachmentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetHasInlineAttachmentsFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.HasInlineAttachmentsFlag) {
		return nil, false
	}
	return o.HasInlineAttachmentsFlag, true
}

// HasHasInlineAttachmentsFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasHasInlineAttachmentsFlag() bool {
	if o != nil && !IsNil(o.HasInlineAttachmentsFlag) {
		return true
	}

	return false
}

// SetHasInlineAttachmentsFlag gets a reference to the given float32 and assigns it to the HasInlineAttachmentsFlag field.
func (o *BaseMailThread) SetHasInlineAttachmentsFlag(v float32) {
	o.HasInlineAttachmentsFlag = &v
}

// GetHasRealAttachmentsFlag returns the HasRealAttachmentsFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetHasRealAttachmentsFlag() float32 {
	if o == nil || IsNil(o.HasRealAttachmentsFlag) {
		var ret float32
		return ret
	}
	return *o.HasRealAttachmentsFlag
}

// GetHasRealAttachmentsFlagOk returns a tuple with the HasRealAttachmentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetHasRealAttachmentsFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.HasRealAttachmentsFlag) {
		return nil, false
	}
	return o.HasRealAttachmentsFlag, true
}

// HasHasRealAttachmentsFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasHasRealAttachmentsFlag() bool {
	if o != nil && !IsNil(o.HasRealAttachmentsFlag) {
		return true
	}

	return false
}

// SetHasRealAttachmentsFlag gets a reference to the given float32 and assigns it to the HasRealAttachmentsFlag field.
func (o *BaseMailThread) SetHasRealAttachmentsFlag(v float32) {
	o.HasRealAttachmentsFlag = &v
}

// GetDeletedFlag returns the DeletedFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetDeletedFlag() float32 {
	if o == nil || IsNil(o.DeletedFlag) {
		var ret float32
		return ret
	}
	return *o.DeletedFlag
}

// GetDeletedFlagOk returns a tuple with the DeletedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetDeletedFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.DeletedFlag) {
		return nil, false
	}
	return o.DeletedFlag, true
}

// HasDeletedFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasDeletedFlag() bool {
	if o != nil && !IsNil(o.DeletedFlag) {
		return true
	}

	return false
}

// SetDeletedFlag gets a reference to the given float32 and assigns it to the DeletedFlag field.
func (o *BaseMailThread) SetDeletedFlag(v float32) {
	o.DeletedFlag = &v
}

// GetSyncedFlag returns the SyncedFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetSyncedFlag() float32 {
	if o == nil || IsNil(o.SyncedFlag) {
		var ret float32
		return ret
	}
	return *o.SyncedFlag
}

// GetSyncedFlagOk returns a tuple with the SyncedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetSyncedFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.SyncedFlag) {
		return nil, false
	}
	return o.SyncedFlag, true
}

// HasSyncedFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasSyncedFlag() bool {
	if o != nil && !IsNil(o.SyncedFlag) {
		return true
	}

	return false
}

// SetSyncedFlag gets a reference to the given float32 and assigns it to the SyncedFlag field.
func (o *BaseMailThread) SetSyncedFlag(v float32) {
	o.SyncedFlag = &v
}

// GetSmartBccFlag returns the SmartBccFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetSmartBccFlag() float32 {
	if o == nil || IsNil(o.SmartBccFlag) {
		var ret float32
		return ret
	}
	return *o.SmartBccFlag
}

// GetSmartBccFlagOk returns a tuple with the SmartBccFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetSmartBccFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.SmartBccFlag) {
		return nil, false
	}
	return o.SmartBccFlag, true
}

// HasSmartBccFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasSmartBccFlag() bool {
	if o != nil && !IsNil(o.SmartBccFlag) {
		return true
	}

	return false
}

// SetSmartBccFlag gets a reference to the given float32 and assigns it to the SmartBccFlag field.
func (o *BaseMailThread) SetSmartBccFlag(v float32) {
	o.SmartBccFlag = &v
}

// GetMailLinkTrackingEnabledFlag returns the MailLinkTrackingEnabledFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetMailLinkTrackingEnabledFlag() float32 {
	if o == nil || IsNil(o.MailLinkTrackingEnabledFlag) {
		var ret float32
		return ret
	}
	return *o.MailLinkTrackingEnabledFlag
}

// GetMailLinkTrackingEnabledFlagOk returns a tuple with the MailLinkTrackingEnabledFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetMailLinkTrackingEnabledFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.MailLinkTrackingEnabledFlag) {
		return nil, false
	}
	return o.MailLinkTrackingEnabledFlag, true
}

// HasMailLinkTrackingEnabledFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasMailLinkTrackingEnabledFlag() bool {
	if o != nil && !IsNil(o.MailLinkTrackingEnabledFlag) {
		return true
	}

	return false
}

// SetMailLinkTrackingEnabledFlag gets a reference to the given float32 and assigns it to the MailLinkTrackingEnabledFlag field.
func (o *BaseMailThread) SetMailLinkTrackingEnabledFlag(v float32) {
	o.MailLinkTrackingEnabledFlag = &v
}

// GetParties returns the Parties field value if set, zero value otherwise.
func (o *BaseMailThread) GetParties() BaseMailThreadAllOfParties {
	if o == nil || IsNil(o.Parties) {
		var ret BaseMailThreadAllOfParties
		return ret
	}
	return *o.Parties
}

// GetPartiesOk returns a tuple with the Parties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetPartiesOk() (*BaseMailThreadAllOfParties, bool) {
	if o == nil || IsNil(o.Parties) {
		return nil, false
	}
	return o.Parties, true
}

// HasParties returns a boolean if a field has been set.
func (o *BaseMailThread) HasParties() bool {
	if o != nil && !IsNil(o.Parties) {
		return true
	}

	return false
}

// SetParties gets a reference to the given BaseMailThreadAllOfParties and assigns it to the Parties field.
func (o *BaseMailThread) SetParties(v BaseMailThreadAllOfParties) {
	o.Parties = &v
}

// GetDraftsParties returns the DraftsParties field value if set, zero value otherwise.
func (o *BaseMailThread) GetDraftsParties() []map[string]interface{} {
	if o == nil || IsNil(o.DraftsParties) {
		var ret []map[string]interface{}
		return ret
	}
	return o.DraftsParties
}

// GetDraftsPartiesOk returns a tuple with the DraftsParties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetDraftsPartiesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.DraftsParties) {
		return nil, false
	}
	return o.DraftsParties, true
}

// HasDraftsParties returns a boolean if a field has been set.
func (o *BaseMailThread) HasDraftsParties() bool {
	if o != nil && !IsNil(o.DraftsParties) {
		return true
	}

	return false
}

// SetDraftsParties gets a reference to the given []map[string]interface{} and assigns it to the DraftsParties field.
func (o *BaseMailThread) SetDraftsParties(v []map[string]interface{}) {
	o.DraftsParties = v
}

// GetFolders returns the Folders field value if set, zero value otherwise.
func (o *BaseMailThread) GetFolders() []string {
	if o == nil || IsNil(o.Folders) {
		var ret []string
		return ret
	}
	return o.Folders
}

// GetFoldersOk returns a tuple with the Folders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetFoldersOk() ([]string, bool) {
	if o == nil || IsNil(o.Folders) {
		return nil, false
	}
	return o.Folders, true
}

// HasFolders returns a boolean if a field has been set.
func (o *BaseMailThread) HasFolders() bool {
	if o != nil && !IsNil(o.Folders) {
		return true
	}

	return false
}

// SetFolders gets a reference to the given []string and assigns it to the Folders field.
func (o *BaseMailThread) SetFolders(v []string) {
	o.Folders = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *BaseMailThread) GetVersion() float32 {
	if o == nil || IsNil(o.Version) {
		var ret float32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetVersionOk() (*float32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *BaseMailThread) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given float32 and assigns it to the Version field.
func (o *BaseMailThread) SetVersion(v float32) {
	o.Version = &v
}

// GetSnippetDraft returns the SnippetDraft field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseMailThread) GetSnippetDraft() string {
	if o == nil || IsNil(o.SnippetDraft.Get()) {
		var ret string
		return ret
	}
	return *o.SnippetDraft.Get()
}

// GetSnippetDraftOk returns a tuple with the SnippetDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseMailThread) GetSnippetDraftOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnippetDraft.Get(), o.SnippetDraft.IsSet()
}

// HasSnippetDraft returns a boolean if a field has been set.
func (o *BaseMailThread) HasSnippetDraft() bool {
	if o != nil && o.SnippetDraft.IsSet() {
		return true
	}

	return false
}

// SetSnippetDraft gets a reference to the given NullableString and assigns it to the SnippetDraft field.
func (o *BaseMailThread) SetSnippetDraft(v string) {
	o.SnippetDraft.Set(&v)
}
// SetSnippetDraftNil sets the value for SnippetDraft to be an explicit nil
func (o *BaseMailThread) SetSnippetDraftNil() {
	o.SnippetDraft.Set(nil)
}

// UnsetSnippetDraft ensures that no value is present for SnippetDraft, not even an explicit nil
func (o *BaseMailThread) UnsetSnippetDraft() {
	o.SnippetDraft.Unset()
}

// GetSnippetSent returns the SnippetSent field value if set, zero value otherwise.
func (o *BaseMailThread) GetSnippetSent() string {
	if o == nil || IsNil(o.SnippetSent) {
		var ret string
		return ret
	}
	return *o.SnippetSent
}

// GetSnippetSentOk returns a tuple with the SnippetSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetSnippetSentOk() (*string, bool) {
	if o == nil || IsNil(o.SnippetSent) {
		return nil, false
	}
	return o.SnippetSent, true
}

// HasSnippetSent returns a boolean if a field has been set.
func (o *BaseMailThread) HasSnippetSent() bool {
	if o != nil && !IsNil(o.SnippetSent) {
		return true
	}

	return false
}

// SetSnippetSent gets a reference to the given string and assigns it to the SnippetSent field.
func (o *BaseMailThread) SetSnippetSent(v string) {
	o.SnippetSent = &v
}

// GetMessageCount returns the MessageCount field value if set, zero value otherwise.
func (o *BaseMailThread) GetMessageCount() int32 {
	if o == nil || IsNil(o.MessageCount) {
		var ret int32
		return ret
	}
	return *o.MessageCount
}

// GetMessageCountOk returns a tuple with the MessageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetMessageCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MessageCount) {
		return nil, false
	}
	return o.MessageCount, true
}

// HasMessageCount returns a boolean if a field has been set.
func (o *BaseMailThread) HasMessageCount() bool {
	if o != nil && !IsNil(o.MessageCount) {
		return true
	}

	return false
}

// SetMessageCount gets a reference to the given int32 and assigns it to the MessageCount field.
func (o *BaseMailThread) SetMessageCount(v int32) {
	o.MessageCount = &v
}

// GetHasDraftFlag returns the HasDraftFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetHasDraftFlag() float32 {
	if o == nil || IsNil(o.HasDraftFlag) {
		var ret float32
		return ret
	}
	return *o.HasDraftFlag
}

// GetHasDraftFlagOk returns a tuple with the HasDraftFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetHasDraftFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.HasDraftFlag) {
		return nil, false
	}
	return o.HasDraftFlag, true
}

// HasHasDraftFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasHasDraftFlag() bool {
	if o != nil && !IsNil(o.HasDraftFlag) {
		return true
	}

	return false
}

// SetHasDraftFlag gets a reference to the given float32 and assigns it to the HasDraftFlag field.
func (o *BaseMailThread) SetHasDraftFlag(v float32) {
	o.HasDraftFlag = &v
}

// GetHasSentFlag returns the HasSentFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetHasSentFlag() float32 {
	if o == nil || IsNil(o.HasSentFlag) {
		var ret float32
		return ret
	}
	return *o.HasSentFlag
}

// GetHasSentFlagOk returns a tuple with the HasSentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetHasSentFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.HasSentFlag) {
		return nil, false
	}
	return o.HasSentFlag, true
}

// HasHasSentFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasHasSentFlag() bool {
	if o != nil && !IsNil(o.HasSentFlag) {
		return true
	}

	return false
}

// SetHasSentFlag gets a reference to the given float32 and assigns it to the HasSentFlag field.
func (o *BaseMailThread) SetHasSentFlag(v float32) {
	o.HasSentFlag = &v
}

// GetArchivedFlag returns the ArchivedFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetArchivedFlag() float32 {
	if o == nil || IsNil(o.ArchivedFlag) {
		var ret float32
		return ret
	}
	return *o.ArchivedFlag
}

// GetArchivedFlagOk returns a tuple with the ArchivedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetArchivedFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.ArchivedFlag) {
		return nil, false
	}
	return o.ArchivedFlag, true
}

// HasArchivedFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasArchivedFlag() bool {
	if o != nil && !IsNil(o.ArchivedFlag) {
		return true
	}

	return false
}

// SetArchivedFlag gets a reference to the given float32 and assigns it to the ArchivedFlag field.
func (o *BaseMailThread) SetArchivedFlag(v float32) {
	o.ArchivedFlag = &v
}

// GetSharedFlag returns the SharedFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetSharedFlag() float32 {
	if o == nil || IsNil(o.SharedFlag) {
		var ret float32
		return ret
	}
	return *o.SharedFlag
}

// GetSharedFlagOk returns a tuple with the SharedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetSharedFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.SharedFlag) {
		return nil, false
	}
	return o.SharedFlag, true
}

// HasSharedFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasSharedFlag() bool {
	if o != nil && !IsNil(o.SharedFlag) {
		return true
	}

	return false
}

// SetSharedFlag gets a reference to the given float32 and assigns it to the SharedFlag field.
func (o *BaseMailThread) SetSharedFlag(v float32) {
	o.SharedFlag = &v
}

// GetExternalDeletedFlag returns the ExternalDeletedFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetExternalDeletedFlag() float32 {
	if o == nil || IsNil(o.ExternalDeletedFlag) {
		var ret float32
		return ret
	}
	return *o.ExternalDeletedFlag
}

// GetExternalDeletedFlagOk returns a tuple with the ExternalDeletedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetExternalDeletedFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.ExternalDeletedFlag) {
		return nil, false
	}
	return o.ExternalDeletedFlag, true
}

// HasExternalDeletedFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasExternalDeletedFlag() bool {
	if o != nil && !IsNil(o.ExternalDeletedFlag) {
		return true
	}

	return false
}

// SetExternalDeletedFlag gets a reference to the given float32 and assigns it to the ExternalDeletedFlag field.
func (o *BaseMailThread) SetExternalDeletedFlag(v float32) {
	o.ExternalDeletedFlag = &v
}

// GetFirstMessageToMeFlag returns the FirstMessageToMeFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetFirstMessageToMeFlag() float32 {
	if o == nil || IsNil(o.FirstMessageToMeFlag) {
		var ret float32
		return ret
	}
	return *o.FirstMessageToMeFlag
}

// GetFirstMessageToMeFlagOk returns a tuple with the FirstMessageToMeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetFirstMessageToMeFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.FirstMessageToMeFlag) {
		return nil, false
	}
	return o.FirstMessageToMeFlag, true
}

// HasFirstMessageToMeFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasFirstMessageToMeFlag() bool {
	if o != nil && !IsNil(o.FirstMessageToMeFlag) {
		return true
	}

	return false
}

// SetFirstMessageToMeFlag gets a reference to the given float32 and assigns it to the FirstMessageToMeFlag field.
func (o *BaseMailThread) SetFirstMessageToMeFlag(v float32) {
	o.FirstMessageToMeFlag = &v
}

// GetLastMessageTimestamp returns the LastMessageTimestamp field value if set, zero value otherwise.
func (o *BaseMailThread) GetLastMessageTimestamp() time.Time {
	if o == nil || IsNil(o.LastMessageTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LastMessageTimestamp
}

// GetLastMessageTimestampOk returns a tuple with the LastMessageTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetLastMessageTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMessageTimestamp) {
		return nil, false
	}
	return o.LastMessageTimestamp, true
}

// HasLastMessageTimestamp returns a boolean if a field has been set.
func (o *BaseMailThread) HasLastMessageTimestamp() bool {
	if o != nil && !IsNil(o.LastMessageTimestamp) {
		return true
	}

	return false
}

// SetLastMessageTimestamp gets a reference to the given time.Time and assigns it to the LastMessageTimestamp field.
func (o *BaseMailThread) SetLastMessageTimestamp(v time.Time) {
	o.LastMessageTimestamp = &v
}

// GetFirstMessageTimestamp returns the FirstMessageTimestamp field value if set, zero value otherwise.
func (o *BaseMailThread) GetFirstMessageTimestamp() time.Time {
	if o == nil || IsNil(o.FirstMessageTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.FirstMessageTimestamp
}

// GetFirstMessageTimestampOk returns a tuple with the FirstMessageTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetFirstMessageTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FirstMessageTimestamp) {
		return nil, false
	}
	return o.FirstMessageTimestamp, true
}

// HasFirstMessageTimestamp returns a boolean if a field has been set.
func (o *BaseMailThread) HasFirstMessageTimestamp() bool {
	if o != nil && !IsNil(o.FirstMessageTimestamp) {
		return true
	}

	return false
}

// SetFirstMessageTimestamp gets a reference to the given time.Time and assigns it to the FirstMessageTimestamp field.
func (o *BaseMailThread) SetFirstMessageTimestamp(v time.Time) {
	o.FirstMessageTimestamp = &v
}

// GetLastMessageSentTimestamp returns the LastMessageSentTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseMailThread) GetLastMessageSentTimestamp() time.Time {
	if o == nil || IsNil(o.LastMessageSentTimestamp.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastMessageSentTimestamp.Get()
}

// GetLastMessageSentTimestampOk returns a tuple with the LastMessageSentTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseMailThread) GetLastMessageSentTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastMessageSentTimestamp.Get(), o.LastMessageSentTimestamp.IsSet()
}

// HasLastMessageSentTimestamp returns a boolean if a field has been set.
func (o *BaseMailThread) HasLastMessageSentTimestamp() bool {
	if o != nil && o.LastMessageSentTimestamp.IsSet() {
		return true
	}

	return false
}

// SetLastMessageSentTimestamp gets a reference to the given NullableTime and assigns it to the LastMessageSentTimestamp field.
func (o *BaseMailThread) SetLastMessageSentTimestamp(v time.Time) {
	o.LastMessageSentTimestamp.Set(&v)
}
// SetLastMessageSentTimestampNil sets the value for LastMessageSentTimestamp to be an explicit nil
func (o *BaseMailThread) SetLastMessageSentTimestampNil() {
	o.LastMessageSentTimestamp.Set(nil)
}

// UnsetLastMessageSentTimestamp ensures that no value is present for LastMessageSentTimestamp, not even an explicit nil
func (o *BaseMailThread) UnsetLastMessageSentTimestamp() {
	o.LastMessageSentTimestamp.Unset()
}

// GetLastMessageReceivedTimestamp returns the LastMessageReceivedTimestamp field value if set, zero value otherwise.
func (o *BaseMailThread) GetLastMessageReceivedTimestamp() time.Time {
	if o == nil || IsNil(o.LastMessageReceivedTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LastMessageReceivedTimestamp
}

// GetLastMessageReceivedTimestampOk returns a tuple with the LastMessageReceivedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetLastMessageReceivedTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMessageReceivedTimestamp) {
		return nil, false
	}
	return o.LastMessageReceivedTimestamp, true
}

// HasLastMessageReceivedTimestamp returns a boolean if a field has been set.
func (o *BaseMailThread) HasLastMessageReceivedTimestamp() bool {
	if o != nil && !IsNil(o.LastMessageReceivedTimestamp) {
		return true
	}

	return false
}

// SetLastMessageReceivedTimestamp gets a reference to the given time.Time and assigns it to the LastMessageReceivedTimestamp field.
func (o *BaseMailThread) SetLastMessageReceivedTimestamp(v time.Time) {
	o.LastMessageReceivedTimestamp = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *BaseMailThread) GetAddTime() time.Time {
	if o == nil || IsNil(o.AddTime) {
		var ret time.Time
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetAddTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *BaseMailThread) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given time.Time and assigns it to the AddTime field.
func (o *BaseMailThread) SetAddTime(v time.Time) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *BaseMailThread) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *BaseMailThread) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *BaseMailThread) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetDealId returns the DealId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseMailThread) GetDealId() int32 {
	if o == nil || IsNil(o.DealId.Get()) {
		var ret int32
		return ret
	}
	return *o.DealId.Get()
}

// GetDealIdOk returns a tuple with the DealId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseMailThread) GetDealIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealId.Get(), o.DealId.IsSet()
}

// HasDealId returns a boolean if a field has been set.
func (o *BaseMailThread) HasDealId() bool {
	if o != nil && o.DealId.IsSet() {
		return true
	}

	return false
}

// SetDealId gets a reference to the given NullableInt32 and assigns it to the DealId field.
func (o *BaseMailThread) SetDealId(v int32) {
	o.DealId.Set(&v)
}
// SetDealIdNil sets the value for DealId to be an explicit nil
func (o *BaseMailThread) SetDealIdNil() {
	o.DealId.Set(nil)
}

// UnsetDealId ensures that no value is present for DealId, not even an explicit nil
func (o *BaseMailThread) UnsetDealId() {
	o.DealId.Unset()
}

// GetDealStatus returns the DealStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseMailThread) GetDealStatus() string {
	if o == nil || IsNil(o.DealStatus.Get()) {
		var ret string
		return ret
	}
	return *o.DealStatus.Get()
}

// GetDealStatusOk returns a tuple with the DealStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseMailThread) GetDealStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealStatus.Get(), o.DealStatus.IsSet()
}

// HasDealStatus returns a boolean if a field has been set.
func (o *BaseMailThread) HasDealStatus() bool {
	if o != nil && o.DealStatus.IsSet() {
		return true
	}

	return false
}

// SetDealStatus gets a reference to the given NullableString and assigns it to the DealStatus field.
func (o *BaseMailThread) SetDealStatus(v string) {
	o.DealStatus.Set(&v)
}
// SetDealStatusNil sets the value for DealStatus to be an explicit nil
func (o *BaseMailThread) SetDealStatusNil() {
	o.DealStatus.Set(nil)
}

// UnsetDealStatus ensures that no value is present for DealStatus, not even an explicit nil
func (o *BaseMailThread) UnsetDealStatus() {
	o.DealStatus.Unset()
}

// GetLeadId returns the LeadId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseMailThread) GetLeadId() string {
	if o == nil || IsNil(o.LeadId.Get()) {
		var ret string
		return ret
	}
	return *o.LeadId.Get()
}

// GetLeadIdOk returns a tuple with the LeadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseMailThread) GetLeadIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LeadId.Get(), o.LeadId.IsSet()
}

// HasLeadId returns a boolean if a field has been set.
func (o *BaseMailThread) HasLeadId() bool {
	if o != nil && o.LeadId.IsSet() {
		return true
	}

	return false
}

// SetLeadId gets a reference to the given NullableString and assigns it to the LeadId field.
func (o *BaseMailThread) SetLeadId(v string) {
	o.LeadId.Set(&v)
}
// SetLeadIdNil sets the value for LeadId to be an explicit nil
func (o *BaseMailThread) SetLeadIdNil() {
	o.LeadId.Set(nil)
}

// UnsetLeadId ensures that no value is present for LeadId, not even an explicit nil
func (o *BaseMailThread) UnsetLeadId() {
	o.LeadId.Unset()
}

// GetAllMessagesSentFlag returns the AllMessagesSentFlag field value if set, zero value otherwise.
func (o *BaseMailThread) GetAllMessagesSentFlag() float32 {
	if o == nil || IsNil(o.AllMessagesSentFlag) {
		var ret float32
		return ret
	}
	return *o.AllMessagesSentFlag
}

// GetAllMessagesSentFlagOk returns a tuple with the AllMessagesSentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThread) GetAllMessagesSentFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.AllMessagesSentFlag) {
		return nil, false
	}
	return o.AllMessagesSentFlag, true
}

// HasAllMessagesSentFlag returns a boolean if a field has been set.
func (o *BaseMailThread) HasAllMessagesSentFlag() bool {
	if o != nil && !IsNil(o.AllMessagesSentFlag) {
		return true
	}

	return false
}

// SetAllMessagesSentFlag gets a reference to the given float32 and assigns it to the AllMessagesSentFlag field.
func (o *BaseMailThread) SetAllMessagesSentFlag(v float32) {
	o.AllMessagesSentFlag = &v
}

func (o BaseMailThread) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseMailThread) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if !IsNil(o.ReadFlag) {
		toSerialize["read_flag"] = o.ReadFlag
	}
	if o.MailTrackingStatus.IsSet() {
		toSerialize["mail_tracking_status"] = o.MailTrackingStatus.Get()
	}
	if !IsNil(o.HasAttachmentsFlag) {
		toSerialize["has_attachments_flag"] = o.HasAttachmentsFlag
	}
	if !IsNil(o.HasInlineAttachmentsFlag) {
		toSerialize["has_inline_attachments_flag"] = o.HasInlineAttachmentsFlag
	}
	if !IsNil(o.HasRealAttachmentsFlag) {
		toSerialize["has_real_attachments_flag"] = o.HasRealAttachmentsFlag
	}
	if !IsNil(o.DeletedFlag) {
		toSerialize["deleted_flag"] = o.DeletedFlag
	}
	if !IsNil(o.SyncedFlag) {
		toSerialize["synced_flag"] = o.SyncedFlag
	}
	if !IsNil(o.SmartBccFlag) {
		toSerialize["smart_bcc_flag"] = o.SmartBccFlag
	}
	if !IsNil(o.MailLinkTrackingEnabledFlag) {
		toSerialize["mail_link_tracking_enabled_flag"] = o.MailLinkTrackingEnabledFlag
	}
	if !IsNil(o.Parties) {
		toSerialize["parties"] = o.Parties
	}
	if !IsNil(o.DraftsParties) {
		toSerialize["drafts_parties"] = o.DraftsParties
	}
	if !IsNil(o.Folders) {
		toSerialize["folders"] = o.Folders
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if o.SnippetDraft.IsSet() {
		toSerialize["snippet_draft"] = o.SnippetDraft.Get()
	}
	if !IsNil(o.SnippetSent) {
		toSerialize["snippet_sent"] = o.SnippetSent
	}
	if !IsNil(o.MessageCount) {
		toSerialize["message_count"] = o.MessageCount
	}
	if !IsNil(o.HasDraftFlag) {
		toSerialize["has_draft_flag"] = o.HasDraftFlag
	}
	if !IsNil(o.HasSentFlag) {
		toSerialize["has_sent_flag"] = o.HasSentFlag
	}
	if !IsNil(o.ArchivedFlag) {
		toSerialize["archived_flag"] = o.ArchivedFlag
	}
	if !IsNil(o.SharedFlag) {
		toSerialize["shared_flag"] = o.SharedFlag
	}
	if !IsNil(o.ExternalDeletedFlag) {
		toSerialize["external_deleted_flag"] = o.ExternalDeletedFlag
	}
	if !IsNil(o.FirstMessageToMeFlag) {
		toSerialize["first_message_to_me_flag"] = o.FirstMessageToMeFlag
	}
	if !IsNil(o.LastMessageTimestamp) {
		toSerialize["last_message_timestamp"] = o.LastMessageTimestamp
	}
	if !IsNil(o.FirstMessageTimestamp) {
		toSerialize["first_message_timestamp"] = o.FirstMessageTimestamp
	}
	if o.LastMessageSentTimestamp.IsSet() {
		toSerialize["last_message_sent_timestamp"] = o.LastMessageSentTimestamp.Get()
	}
	if !IsNil(o.LastMessageReceivedTimestamp) {
		toSerialize["last_message_received_timestamp"] = o.LastMessageReceivedTimestamp
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if o.DealId.IsSet() {
		toSerialize["deal_id"] = o.DealId.Get()
	}
	if o.DealStatus.IsSet() {
		toSerialize["deal_status"] = o.DealStatus.Get()
	}
	if o.LeadId.IsSet() {
		toSerialize["lead_id"] = o.LeadId.Get()
	}
	if !IsNil(o.AllMessagesSentFlag) {
		toSerialize["all_messages_sent_flag"] = o.AllMessagesSentFlag
	}
	return toSerialize, nil
}

type NullableBaseMailThread struct {
	value *BaseMailThread
	isSet bool
}

func (v NullableBaseMailThread) Get() *BaseMailThread {
	return v.value
}

func (v *NullableBaseMailThread) Set(val *BaseMailThread) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseMailThread) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseMailThread) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseMailThread(val *BaseMailThread) *NullableBaseMailThread {
	return &NullableBaseMailThread{value: val, isSet: true}
}

func (v NullableBaseMailThread) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseMailThread) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


