/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DealStrict type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DealStrict{}

// DealStrict struct for DealStrict
type DealStrict struct {
	// The ID of the deal
	Id *int32 `json:"id,omitempty"`
	// The ID of the deal creator
	CreatorUserId *int32 `json:"creator_user_id,omitempty"`
	// The ID of the user
	UserId *int32 `json:"user_id,omitempty"`
	// The ID of the person associated with the deal
	PersonId *int32 `json:"person_id,omitempty"`
	// The ID of the organization associated with the deal
	OrgId *int32 `json:"org_id,omitempty"`
	// The ID of the deal stage
	StageId *int32 `json:"stage_id,omitempty"`
	// The title of the deal
	Title *string `json:"title,omitempty"`
	// The value of the deal
	Value *float32 `json:"value,omitempty"`
	// The currency associated with the deal
	Currency *string `json:"currency,omitempty"`
	// The creation date and time of the deal
	AddTime *string `json:"add_time,omitempty"`
	// The last updated date and time of the deal
	UpdateTime *string `json:"update_time,omitempty"`
	// The last updated date and time of the deal stage
	StageChangeTime *string `json:"stage_change_time,omitempty"`
	// Whether the deal is active or not
	Active *bool `json:"active,omitempty"`
	// Whether the deal is deleted or not
	Deleted *bool `json:"deleted,omitempty"`
	// The status of the deal
	Status *string `json:"status,omitempty"`
	// The success probability percentage of the deal
	Probability NullableFloat32 `json:"probability,omitempty"`
	// The date of the next activity associated with the deal
	NextActivityDate *string `json:"next_activity_date,omitempty"`
	// The time of the next activity associated with the deal
	NextActivityTime *string `json:"next_activity_time,omitempty"`
	// The ID of the next activity associated with the deal
	NextActivityId NullableInt32 `json:"next_activity_id,omitempty"`
	// The ID of the last activity associated with the deal
	LastActivityId NullableInt32 `json:"last_activity_id,omitempty"`
	// The date of the last activity associated with the deal
	LastActivityDate NullableString `json:"last_activity_date,omitempty"`
	// The reason for losing the deal
	LostReason NullableString `json:"lost_reason,omitempty"`
	// The visibility of the deal
	VisibleTo *string `json:"visible_to,omitempty"`
	// The date and time of closing the deal
	CloseTime NullableString `json:"close_time,omitempty"`
	// The ID of the pipeline associated with the deal
	PipelineId *int32 `json:"pipeline_id,omitempty"`
	// The date and time of changing the deal status as won
	WonTime *string `json:"won_time,omitempty"`
	// The date and time of the first time changing the deal status as won
	FirstWonTime *string `json:"first_won_time,omitempty"`
	// The date and time of changing the deal status as lost
	LostTime *string `json:"lost_time,omitempty"`
	// The number of products associated with the deal
	ProductsCount *int32 `json:"products_count,omitempty"`
	// The number of files associated with the deal
	FilesCount *int32 `json:"files_count,omitempty"`
	// The number of notes associated with the deal
	NotesCount *int32 `json:"notes_count,omitempty"`
	// The number of followers associated with the deal
	FollowersCount *int32 `json:"followers_count,omitempty"`
	// The number of emails associated with the deal
	EmailMessagesCount *int32 `json:"email_messages_count,omitempty"`
	// The number of activities associated with the deal
	ActivitiesCount *int32 `json:"activities_count,omitempty"`
	// The number of completed activities associated with the deal
	DoneActivitiesCount *int32 `json:"done_activities_count,omitempty"`
	// The number of incomplete activities associated with the deal
	UndoneActivitiesCount *int32 `json:"undone_activities_count,omitempty"`
	// The number of participants associated with the deal
	ParticipantsCount *int32 `json:"participants_count,omitempty"`
	// The expected close date of the deal
	ExpectedCloseDate *string `json:"expected_close_date,omitempty"`
	// The date and time of the last incoming email associated with the deal
	LastIncomingMailTime *string `json:"last_incoming_mail_time,omitempty"`
	// The date and time of the last outgoing email associated with the deal
	LastOutgoingMailTime *string `json:"last_outgoing_mail_time,omitempty"`
	// The label or multiple labels assigned to the deal
	Label *string `json:"label,omitempty"`
	// The order number of the deal stage associated with the deal
	StageOrderNr *int32 `json:"stage_order_nr,omitempty"`
	// The name of the person associated with the deal
	PersonName *string `json:"person_name,omitempty"`
	// The name of the organization associated with the deal
	OrgName *string `json:"org_name,omitempty"`
	// The subject of the next activity associated with the deal
	NextActivitySubject *string `json:"next_activity_subject,omitempty"`
	// The type of the next activity associated with the deal
	NextActivityType *string `json:"next_activity_type,omitempty"`
	// The duration of the next activity associated with the deal
	NextActivityDuration *string `json:"next_activity_duration,omitempty"`
	// The note of the next activity associated with the deal
	NextActivityNote *string `json:"next_activity_note,omitempty"`
	// The deal value formatted with selected currency. E.g. US$500
	FormattedValue *string `json:"formatted_value,omitempty"`
	// Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
	WeightedValue *float32 `json:"weighted_value,omitempty"`
	// The weighted_value formatted with selected currency. E.g. US$500
	FormattedWeightedValue *string `json:"formatted_weighted_value,omitempty"`
	// The currency associated with the deal
	WeightedValueCurrency *string `json:"weighted_value_currency,omitempty"`
	// The date and time of changing the deal status as rotten
	RottenTime NullableString `json:"rotten_time,omitempty"`
	// The name of the deal owner
	OwnerName *string `json:"owner_name,omitempty"`
	// The BCC email of the deal
	CcEmail *string `json:"cc_email,omitempty"`
	// If the organization that is associated with the deal is hidden or not
	OrgHidden *bool `json:"org_hidden,omitempty"`
	// If the person that is associated with the deal is hidden or not
	PersonHidden *bool `json:"person_hidden,omitempty"`
	// The way this Deal was created. `origin` field is set by Pipedrive when Deal is created and cannot be changed.
	Origin *string `json:"origin,omitempty"`
	// The optional ID to further distinguish the origin of the deal - e.g. Which API integration created this Deal.
	OriginId NullableString `json:"origin_id,omitempty"`
	// The ID of your Marketing channel this Deal was created from. Recognized Marketing channels can be configured in your <a href=\"https://app.pipedrive.com/settings/fields\" target=\"_blank\" rel=\"noopener noreferrer\">Company settings</a>.
	Channel NullableInt32 `json:"channel,omitempty"`
	// The optional ID to further distinguish the Marketing channel.
	ChannelId NullableString `json:"channel_id,omitempty"`
	// Only available in Advanced and above plans  The Annual Recurring Revenue of the deal  Null if there are no products attached to the deal 
	Arr NullableFloat32 `json:"arr,omitempty"`
	// Only available in Advanced and above plans  The Monthly Recurring Revenue of the deal  Null if there are no products attached to the deal 
	Mrr NullableFloat32 `json:"mrr,omitempty"`
	// Only available in Advanced and above plans  The Annual Contract Value of the deal  Null if there are no products attached to the deal 
	Acv NullableFloat32 `json:"acv,omitempty"`
	// Only available in Advanced and above plans  The Currency for Annual Recurring Revenue of the deal  If the `arr` is null, this will also be null 
	ArrCurrency NullableString `json:"arr_currency,omitempty"`
	// Only available in Advanced and above plans  The Currency for Monthly Recurring Revenue of the deal  If the `mrr` is null, this will also be null 
	MrrCurrency NullableString `json:"mrr_currency,omitempty"`
	// Only available in Advanced and above plans  The Currency for Annual Contract Value of the deal  If the `acv` is null, this will also be null 
	AcvCurrency NullableString `json:"acv_currency,omitempty"`
}

// NewDealStrict instantiates a new DealStrict object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDealStrict() *DealStrict {
	this := DealStrict{}
	return &this
}

// NewDealStrictWithDefaults instantiates a new DealStrict object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDealStrictWithDefaults() *DealStrict {
	this := DealStrict{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DealStrict) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DealStrict) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DealStrict) SetId(v int32) {
	o.Id = &v
}

// GetCreatorUserId returns the CreatorUserId field value if set, zero value otherwise.
func (o *DealStrict) GetCreatorUserId() int32 {
	if o == nil || IsNil(o.CreatorUserId) {
		var ret int32
		return ret
	}
	return *o.CreatorUserId
}

// GetCreatorUserIdOk returns a tuple with the CreatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetCreatorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatorUserId) {
		return nil, false
	}
	return o.CreatorUserId, true
}

// HasCreatorUserId returns a boolean if a field has been set.
func (o *DealStrict) HasCreatorUserId() bool {
	if o != nil && !IsNil(o.CreatorUserId) {
		return true
	}

	return false
}

// SetCreatorUserId gets a reference to the given int32 and assigns it to the CreatorUserId field.
func (o *DealStrict) SetCreatorUserId(v int32) {
	o.CreatorUserId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *DealStrict) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *DealStrict) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *DealStrict) SetUserId(v int32) {
	o.UserId = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *DealStrict) GetPersonId() int32 {
	if o == nil || IsNil(o.PersonId) {
		var ret int32
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetPersonIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *DealStrict) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given int32 and assigns it to the PersonId field.
func (o *DealStrict) SetPersonId(v int32) {
	o.PersonId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *DealStrict) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *DealStrict) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *DealStrict) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *DealStrict) GetStageId() int32 {
	if o == nil || IsNil(o.StageId) {
		var ret int32
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetStageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *DealStrict) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given int32 and assigns it to the StageId field.
func (o *DealStrict) SetStageId(v int32) {
	o.StageId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *DealStrict) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *DealStrict) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *DealStrict) SetTitle(v string) {
	o.Title = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DealStrict) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DealStrict) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *DealStrict) SetValue(v float32) {
	o.Value = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *DealStrict) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *DealStrict) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *DealStrict) SetCurrency(v string) {
	o.Currency = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *DealStrict) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *DealStrict) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *DealStrict) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *DealStrict) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *DealStrict) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *DealStrict) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetStageChangeTime returns the StageChangeTime field value if set, zero value otherwise.
func (o *DealStrict) GetStageChangeTime() string {
	if o == nil || IsNil(o.StageChangeTime) {
		var ret string
		return ret
	}
	return *o.StageChangeTime
}

// GetStageChangeTimeOk returns a tuple with the StageChangeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetStageChangeTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StageChangeTime) {
		return nil, false
	}
	return o.StageChangeTime, true
}

// HasStageChangeTime returns a boolean if a field has been set.
func (o *DealStrict) HasStageChangeTime() bool {
	if o != nil && !IsNil(o.StageChangeTime) {
		return true
	}

	return false
}

// SetStageChangeTime gets a reference to the given string and assigns it to the StageChangeTime field.
func (o *DealStrict) SetStageChangeTime(v string) {
	o.StageChangeTime = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *DealStrict) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *DealStrict) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *DealStrict) SetActive(v bool) {
	o.Active = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *DealStrict) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *DealStrict) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *DealStrict) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DealStrict) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DealStrict) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DealStrict) SetStatus(v string) {
	o.Status = &v
}

// GetProbability returns the Probability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetProbability() float32 {
	if o == nil || IsNil(o.Probability.Get()) {
		var ret float32
		return ret
	}
	return *o.Probability.Get()
}

// GetProbabilityOk returns a tuple with the Probability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetProbabilityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Probability.Get(), o.Probability.IsSet()
}

// HasProbability returns a boolean if a field has been set.
func (o *DealStrict) HasProbability() bool {
	if o != nil && o.Probability.IsSet() {
		return true
	}

	return false
}

// SetProbability gets a reference to the given NullableFloat32 and assigns it to the Probability field.
func (o *DealStrict) SetProbability(v float32) {
	o.Probability.Set(&v)
}
// SetProbabilityNil sets the value for Probability to be an explicit nil
func (o *DealStrict) SetProbabilityNil() {
	o.Probability.Set(nil)
}

// UnsetProbability ensures that no value is present for Probability, not even an explicit nil
func (o *DealStrict) UnsetProbability() {
	o.Probability.Unset()
}

// GetNextActivityDate returns the NextActivityDate field value if set, zero value otherwise.
func (o *DealStrict) GetNextActivityDate() string {
	if o == nil || IsNil(o.NextActivityDate) {
		var ret string
		return ret
	}
	return *o.NextActivityDate
}

// GetNextActivityDateOk returns a tuple with the NextActivityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetNextActivityDateOk() (*string, bool) {
	if o == nil || IsNil(o.NextActivityDate) {
		return nil, false
	}
	return o.NextActivityDate, true
}

// HasNextActivityDate returns a boolean if a field has been set.
func (o *DealStrict) HasNextActivityDate() bool {
	if o != nil && !IsNil(o.NextActivityDate) {
		return true
	}

	return false
}

// SetNextActivityDate gets a reference to the given string and assigns it to the NextActivityDate field.
func (o *DealStrict) SetNextActivityDate(v string) {
	o.NextActivityDate = &v
}

// GetNextActivityTime returns the NextActivityTime field value if set, zero value otherwise.
func (o *DealStrict) GetNextActivityTime() string {
	if o == nil || IsNil(o.NextActivityTime) {
		var ret string
		return ret
	}
	return *o.NextActivityTime
}

// GetNextActivityTimeOk returns a tuple with the NextActivityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetNextActivityTimeOk() (*string, bool) {
	if o == nil || IsNil(o.NextActivityTime) {
		return nil, false
	}
	return o.NextActivityTime, true
}

// HasNextActivityTime returns a boolean if a field has been set.
func (o *DealStrict) HasNextActivityTime() bool {
	if o != nil && !IsNil(o.NextActivityTime) {
		return true
	}

	return false
}

// SetNextActivityTime gets a reference to the given string and assigns it to the NextActivityTime field.
func (o *DealStrict) SetNextActivityTime(v string) {
	o.NextActivityTime = &v
}

// GetNextActivityId returns the NextActivityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetNextActivityId() int32 {
	if o == nil || IsNil(o.NextActivityId.Get()) {
		var ret int32
		return ret
	}
	return *o.NextActivityId.Get()
}

// GetNextActivityIdOk returns a tuple with the NextActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetNextActivityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextActivityId.Get(), o.NextActivityId.IsSet()
}

// HasNextActivityId returns a boolean if a field has been set.
func (o *DealStrict) HasNextActivityId() bool {
	if o != nil && o.NextActivityId.IsSet() {
		return true
	}

	return false
}

// SetNextActivityId gets a reference to the given NullableInt32 and assigns it to the NextActivityId field.
func (o *DealStrict) SetNextActivityId(v int32) {
	o.NextActivityId.Set(&v)
}
// SetNextActivityIdNil sets the value for NextActivityId to be an explicit nil
func (o *DealStrict) SetNextActivityIdNil() {
	o.NextActivityId.Set(nil)
}

// UnsetNextActivityId ensures that no value is present for NextActivityId, not even an explicit nil
func (o *DealStrict) UnsetNextActivityId() {
	o.NextActivityId.Unset()
}

// GetLastActivityId returns the LastActivityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetLastActivityId() int32 {
	if o == nil || IsNil(o.LastActivityId.Get()) {
		var ret int32
		return ret
	}
	return *o.LastActivityId.Get()
}

// GetLastActivityIdOk returns a tuple with the LastActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetLastActivityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastActivityId.Get(), o.LastActivityId.IsSet()
}

// HasLastActivityId returns a boolean if a field has been set.
func (o *DealStrict) HasLastActivityId() bool {
	if o != nil && o.LastActivityId.IsSet() {
		return true
	}

	return false
}

// SetLastActivityId gets a reference to the given NullableInt32 and assigns it to the LastActivityId field.
func (o *DealStrict) SetLastActivityId(v int32) {
	o.LastActivityId.Set(&v)
}
// SetLastActivityIdNil sets the value for LastActivityId to be an explicit nil
func (o *DealStrict) SetLastActivityIdNil() {
	o.LastActivityId.Set(nil)
}

// UnsetLastActivityId ensures that no value is present for LastActivityId, not even an explicit nil
func (o *DealStrict) UnsetLastActivityId() {
	o.LastActivityId.Unset()
}

// GetLastActivityDate returns the LastActivityDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetLastActivityDate() string {
	if o == nil || IsNil(o.LastActivityDate.Get()) {
		var ret string
		return ret
	}
	return *o.LastActivityDate.Get()
}

// GetLastActivityDateOk returns a tuple with the LastActivityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetLastActivityDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastActivityDate.Get(), o.LastActivityDate.IsSet()
}

// HasLastActivityDate returns a boolean if a field has been set.
func (o *DealStrict) HasLastActivityDate() bool {
	if o != nil && o.LastActivityDate.IsSet() {
		return true
	}

	return false
}

// SetLastActivityDate gets a reference to the given NullableString and assigns it to the LastActivityDate field.
func (o *DealStrict) SetLastActivityDate(v string) {
	o.LastActivityDate.Set(&v)
}
// SetLastActivityDateNil sets the value for LastActivityDate to be an explicit nil
func (o *DealStrict) SetLastActivityDateNil() {
	o.LastActivityDate.Set(nil)
}

// UnsetLastActivityDate ensures that no value is present for LastActivityDate, not even an explicit nil
func (o *DealStrict) UnsetLastActivityDate() {
	o.LastActivityDate.Unset()
}

// GetLostReason returns the LostReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetLostReason() string {
	if o == nil || IsNil(o.LostReason.Get()) {
		var ret string
		return ret
	}
	return *o.LostReason.Get()
}

// GetLostReasonOk returns a tuple with the LostReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetLostReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LostReason.Get(), o.LostReason.IsSet()
}

// HasLostReason returns a boolean if a field has been set.
func (o *DealStrict) HasLostReason() bool {
	if o != nil && o.LostReason.IsSet() {
		return true
	}

	return false
}

// SetLostReason gets a reference to the given NullableString and assigns it to the LostReason field.
func (o *DealStrict) SetLostReason(v string) {
	o.LostReason.Set(&v)
}
// SetLostReasonNil sets the value for LostReason to be an explicit nil
func (o *DealStrict) SetLostReasonNil() {
	o.LostReason.Set(nil)
}

// UnsetLostReason ensures that no value is present for LostReason, not even an explicit nil
func (o *DealStrict) UnsetLostReason() {
	o.LostReason.Unset()
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *DealStrict) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *DealStrict) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *DealStrict) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

// GetCloseTime returns the CloseTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetCloseTime() string {
	if o == nil || IsNil(o.CloseTime.Get()) {
		var ret string
		return ret
	}
	return *o.CloseTime.Get()
}

// GetCloseTimeOk returns a tuple with the CloseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetCloseTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloseTime.Get(), o.CloseTime.IsSet()
}

// HasCloseTime returns a boolean if a field has been set.
func (o *DealStrict) HasCloseTime() bool {
	if o != nil && o.CloseTime.IsSet() {
		return true
	}

	return false
}

// SetCloseTime gets a reference to the given NullableString and assigns it to the CloseTime field.
func (o *DealStrict) SetCloseTime(v string) {
	o.CloseTime.Set(&v)
}
// SetCloseTimeNil sets the value for CloseTime to be an explicit nil
func (o *DealStrict) SetCloseTimeNil() {
	o.CloseTime.Set(nil)
}

// UnsetCloseTime ensures that no value is present for CloseTime, not even an explicit nil
func (o *DealStrict) UnsetCloseTime() {
	o.CloseTime.Unset()
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *DealStrict) GetPipelineId() int32 {
	if o == nil || IsNil(o.PipelineId) {
		var ret int32
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetPipelineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *DealStrict) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given int32 and assigns it to the PipelineId field.
func (o *DealStrict) SetPipelineId(v int32) {
	o.PipelineId = &v
}

// GetWonTime returns the WonTime field value if set, zero value otherwise.
func (o *DealStrict) GetWonTime() string {
	if o == nil || IsNil(o.WonTime) {
		var ret string
		return ret
	}
	return *o.WonTime
}

// GetWonTimeOk returns a tuple with the WonTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetWonTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WonTime) {
		return nil, false
	}
	return o.WonTime, true
}

// HasWonTime returns a boolean if a field has been set.
func (o *DealStrict) HasWonTime() bool {
	if o != nil && !IsNil(o.WonTime) {
		return true
	}

	return false
}

// SetWonTime gets a reference to the given string and assigns it to the WonTime field.
func (o *DealStrict) SetWonTime(v string) {
	o.WonTime = &v
}

// GetFirstWonTime returns the FirstWonTime field value if set, zero value otherwise.
func (o *DealStrict) GetFirstWonTime() string {
	if o == nil || IsNil(o.FirstWonTime) {
		var ret string
		return ret
	}
	return *o.FirstWonTime
}

// GetFirstWonTimeOk returns a tuple with the FirstWonTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetFirstWonTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FirstWonTime) {
		return nil, false
	}
	return o.FirstWonTime, true
}

// HasFirstWonTime returns a boolean if a field has been set.
func (o *DealStrict) HasFirstWonTime() bool {
	if o != nil && !IsNil(o.FirstWonTime) {
		return true
	}

	return false
}

// SetFirstWonTime gets a reference to the given string and assigns it to the FirstWonTime field.
func (o *DealStrict) SetFirstWonTime(v string) {
	o.FirstWonTime = &v
}

// GetLostTime returns the LostTime field value if set, zero value otherwise.
func (o *DealStrict) GetLostTime() string {
	if o == nil || IsNil(o.LostTime) {
		var ret string
		return ret
	}
	return *o.LostTime
}

// GetLostTimeOk returns a tuple with the LostTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetLostTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LostTime) {
		return nil, false
	}
	return o.LostTime, true
}

// HasLostTime returns a boolean if a field has been set.
func (o *DealStrict) HasLostTime() bool {
	if o != nil && !IsNil(o.LostTime) {
		return true
	}

	return false
}

// SetLostTime gets a reference to the given string and assigns it to the LostTime field.
func (o *DealStrict) SetLostTime(v string) {
	o.LostTime = &v
}

// GetProductsCount returns the ProductsCount field value if set, zero value otherwise.
func (o *DealStrict) GetProductsCount() int32 {
	if o == nil || IsNil(o.ProductsCount) {
		var ret int32
		return ret
	}
	return *o.ProductsCount
}

// GetProductsCountOk returns a tuple with the ProductsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetProductsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductsCount) {
		return nil, false
	}
	return o.ProductsCount, true
}

// HasProductsCount returns a boolean if a field has been set.
func (o *DealStrict) HasProductsCount() bool {
	if o != nil && !IsNil(o.ProductsCount) {
		return true
	}

	return false
}

// SetProductsCount gets a reference to the given int32 and assigns it to the ProductsCount field.
func (o *DealStrict) SetProductsCount(v int32) {
	o.ProductsCount = &v
}

// GetFilesCount returns the FilesCount field value if set, zero value otherwise.
func (o *DealStrict) GetFilesCount() int32 {
	if o == nil || IsNil(o.FilesCount) {
		var ret int32
		return ret
	}
	return *o.FilesCount
}

// GetFilesCountOk returns a tuple with the FilesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetFilesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FilesCount) {
		return nil, false
	}
	return o.FilesCount, true
}

// HasFilesCount returns a boolean if a field has been set.
func (o *DealStrict) HasFilesCount() bool {
	if o != nil && !IsNil(o.FilesCount) {
		return true
	}

	return false
}

// SetFilesCount gets a reference to the given int32 and assigns it to the FilesCount field.
func (o *DealStrict) SetFilesCount(v int32) {
	o.FilesCount = &v
}

// GetNotesCount returns the NotesCount field value if set, zero value otherwise.
func (o *DealStrict) GetNotesCount() int32 {
	if o == nil || IsNil(o.NotesCount) {
		var ret int32
		return ret
	}
	return *o.NotesCount
}

// GetNotesCountOk returns a tuple with the NotesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetNotesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NotesCount) {
		return nil, false
	}
	return o.NotesCount, true
}

// HasNotesCount returns a boolean if a field has been set.
func (o *DealStrict) HasNotesCount() bool {
	if o != nil && !IsNil(o.NotesCount) {
		return true
	}

	return false
}

// SetNotesCount gets a reference to the given int32 and assigns it to the NotesCount field.
func (o *DealStrict) SetNotesCount(v int32) {
	o.NotesCount = &v
}

// GetFollowersCount returns the FollowersCount field value if set, zero value otherwise.
func (o *DealStrict) GetFollowersCount() int32 {
	if o == nil || IsNil(o.FollowersCount) {
		var ret int32
		return ret
	}
	return *o.FollowersCount
}

// GetFollowersCountOk returns a tuple with the FollowersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetFollowersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FollowersCount) {
		return nil, false
	}
	return o.FollowersCount, true
}

// HasFollowersCount returns a boolean if a field has been set.
func (o *DealStrict) HasFollowersCount() bool {
	if o != nil && !IsNil(o.FollowersCount) {
		return true
	}

	return false
}

// SetFollowersCount gets a reference to the given int32 and assigns it to the FollowersCount field.
func (o *DealStrict) SetFollowersCount(v int32) {
	o.FollowersCount = &v
}

// GetEmailMessagesCount returns the EmailMessagesCount field value if set, zero value otherwise.
func (o *DealStrict) GetEmailMessagesCount() int32 {
	if o == nil || IsNil(o.EmailMessagesCount) {
		var ret int32
		return ret
	}
	return *o.EmailMessagesCount
}

// GetEmailMessagesCountOk returns a tuple with the EmailMessagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetEmailMessagesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailMessagesCount) {
		return nil, false
	}
	return o.EmailMessagesCount, true
}

// HasEmailMessagesCount returns a boolean if a field has been set.
func (o *DealStrict) HasEmailMessagesCount() bool {
	if o != nil && !IsNil(o.EmailMessagesCount) {
		return true
	}

	return false
}

// SetEmailMessagesCount gets a reference to the given int32 and assigns it to the EmailMessagesCount field.
func (o *DealStrict) SetEmailMessagesCount(v int32) {
	o.EmailMessagesCount = &v
}

// GetActivitiesCount returns the ActivitiesCount field value if set, zero value otherwise.
func (o *DealStrict) GetActivitiesCount() int32 {
	if o == nil || IsNil(o.ActivitiesCount) {
		var ret int32
		return ret
	}
	return *o.ActivitiesCount
}

// GetActivitiesCountOk returns a tuple with the ActivitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetActivitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ActivitiesCount) {
		return nil, false
	}
	return o.ActivitiesCount, true
}

// HasActivitiesCount returns a boolean if a field has been set.
func (o *DealStrict) HasActivitiesCount() bool {
	if o != nil && !IsNil(o.ActivitiesCount) {
		return true
	}

	return false
}

// SetActivitiesCount gets a reference to the given int32 and assigns it to the ActivitiesCount field.
func (o *DealStrict) SetActivitiesCount(v int32) {
	o.ActivitiesCount = &v
}

// GetDoneActivitiesCount returns the DoneActivitiesCount field value if set, zero value otherwise.
func (o *DealStrict) GetDoneActivitiesCount() int32 {
	if o == nil || IsNil(o.DoneActivitiesCount) {
		var ret int32
		return ret
	}
	return *o.DoneActivitiesCount
}

// GetDoneActivitiesCountOk returns a tuple with the DoneActivitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetDoneActivitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DoneActivitiesCount) {
		return nil, false
	}
	return o.DoneActivitiesCount, true
}

// HasDoneActivitiesCount returns a boolean if a field has been set.
func (o *DealStrict) HasDoneActivitiesCount() bool {
	if o != nil && !IsNil(o.DoneActivitiesCount) {
		return true
	}

	return false
}

// SetDoneActivitiesCount gets a reference to the given int32 and assigns it to the DoneActivitiesCount field.
func (o *DealStrict) SetDoneActivitiesCount(v int32) {
	o.DoneActivitiesCount = &v
}

// GetUndoneActivitiesCount returns the UndoneActivitiesCount field value if set, zero value otherwise.
func (o *DealStrict) GetUndoneActivitiesCount() int32 {
	if o == nil || IsNil(o.UndoneActivitiesCount) {
		var ret int32
		return ret
	}
	return *o.UndoneActivitiesCount
}

// GetUndoneActivitiesCountOk returns a tuple with the UndoneActivitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetUndoneActivitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UndoneActivitiesCount) {
		return nil, false
	}
	return o.UndoneActivitiesCount, true
}

// HasUndoneActivitiesCount returns a boolean if a field has been set.
func (o *DealStrict) HasUndoneActivitiesCount() bool {
	if o != nil && !IsNil(o.UndoneActivitiesCount) {
		return true
	}

	return false
}

// SetUndoneActivitiesCount gets a reference to the given int32 and assigns it to the UndoneActivitiesCount field.
func (o *DealStrict) SetUndoneActivitiesCount(v int32) {
	o.UndoneActivitiesCount = &v
}

// GetParticipantsCount returns the ParticipantsCount field value if set, zero value otherwise.
func (o *DealStrict) GetParticipantsCount() int32 {
	if o == nil || IsNil(o.ParticipantsCount) {
		var ret int32
		return ret
	}
	return *o.ParticipantsCount
}

// GetParticipantsCountOk returns a tuple with the ParticipantsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetParticipantsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ParticipantsCount) {
		return nil, false
	}
	return o.ParticipantsCount, true
}

// HasParticipantsCount returns a boolean if a field has been set.
func (o *DealStrict) HasParticipantsCount() bool {
	if o != nil && !IsNil(o.ParticipantsCount) {
		return true
	}

	return false
}

// SetParticipantsCount gets a reference to the given int32 and assigns it to the ParticipantsCount field.
func (o *DealStrict) SetParticipantsCount(v int32) {
	o.ParticipantsCount = &v
}

// GetExpectedCloseDate returns the ExpectedCloseDate field value if set, zero value otherwise.
func (o *DealStrict) GetExpectedCloseDate() string {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		var ret string
		return ret
	}
	return *o.ExpectedCloseDate
}

// GetExpectedCloseDateOk returns a tuple with the ExpectedCloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetExpectedCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		return nil, false
	}
	return o.ExpectedCloseDate, true
}

// HasExpectedCloseDate returns a boolean if a field has been set.
func (o *DealStrict) HasExpectedCloseDate() bool {
	if o != nil && !IsNil(o.ExpectedCloseDate) {
		return true
	}

	return false
}

// SetExpectedCloseDate gets a reference to the given string and assigns it to the ExpectedCloseDate field.
func (o *DealStrict) SetExpectedCloseDate(v string) {
	o.ExpectedCloseDate = &v
}

// GetLastIncomingMailTime returns the LastIncomingMailTime field value if set, zero value otherwise.
func (o *DealStrict) GetLastIncomingMailTime() string {
	if o == nil || IsNil(o.LastIncomingMailTime) {
		var ret string
		return ret
	}
	return *o.LastIncomingMailTime
}

// GetLastIncomingMailTimeOk returns a tuple with the LastIncomingMailTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetLastIncomingMailTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastIncomingMailTime) {
		return nil, false
	}
	return o.LastIncomingMailTime, true
}

// HasLastIncomingMailTime returns a boolean if a field has been set.
func (o *DealStrict) HasLastIncomingMailTime() bool {
	if o != nil && !IsNil(o.LastIncomingMailTime) {
		return true
	}

	return false
}

// SetLastIncomingMailTime gets a reference to the given string and assigns it to the LastIncomingMailTime field.
func (o *DealStrict) SetLastIncomingMailTime(v string) {
	o.LastIncomingMailTime = &v
}

// GetLastOutgoingMailTime returns the LastOutgoingMailTime field value if set, zero value otherwise.
func (o *DealStrict) GetLastOutgoingMailTime() string {
	if o == nil || IsNil(o.LastOutgoingMailTime) {
		var ret string
		return ret
	}
	return *o.LastOutgoingMailTime
}

// GetLastOutgoingMailTimeOk returns a tuple with the LastOutgoingMailTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetLastOutgoingMailTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastOutgoingMailTime) {
		return nil, false
	}
	return o.LastOutgoingMailTime, true
}

// HasLastOutgoingMailTime returns a boolean if a field has been set.
func (o *DealStrict) HasLastOutgoingMailTime() bool {
	if o != nil && !IsNil(o.LastOutgoingMailTime) {
		return true
	}

	return false
}

// SetLastOutgoingMailTime gets a reference to the given string and assigns it to the LastOutgoingMailTime field.
func (o *DealStrict) SetLastOutgoingMailTime(v string) {
	o.LastOutgoingMailTime = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *DealStrict) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *DealStrict) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *DealStrict) SetLabel(v string) {
	o.Label = &v
}

// GetStageOrderNr returns the StageOrderNr field value if set, zero value otherwise.
func (o *DealStrict) GetStageOrderNr() int32 {
	if o == nil || IsNil(o.StageOrderNr) {
		var ret int32
		return ret
	}
	return *o.StageOrderNr
}

// GetStageOrderNrOk returns a tuple with the StageOrderNr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetStageOrderNrOk() (*int32, bool) {
	if o == nil || IsNil(o.StageOrderNr) {
		return nil, false
	}
	return o.StageOrderNr, true
}

// HasStageOrderNr returns a boolean if a field has been set.
func (o *DealStrict) HasStageOrderNr() bool {
	if o != nil && !IsNil(o.StageOrderNr) {
		return true
	}

	return false
}

// SetStageOrderNr gets a reference to the given int32 and assigns it to the StageOrderNr field.
func (o *DealStrict) SetStageOrderNr(v int32) {
	o.StageOrderNr = &v
}

// GetPersonName returns the PersonName field value if set, zero value otherwise.
func (o *DealStrict) GetPersonName() string {
	if o == nil || IsNil(o.PersonName) {
		var ret string
		return ret
	}
	return *o.PersonName
}

// GetPersonNameOk returns a tuple with the PersonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetPersonNameOk() (*string, bool) {
	if o == nil || IsNil(o.PersonName) {
		return nil, false
	}
	return o.PersonName, true
}

// HasPersonName returns a boolean if a field has been set.
func (o *DealStrict) HasPersonName() bool {
	if o != nil && !IsNil(o.PersonName) {
		return true
	}

	return false
}

// SetPersonName gets a reference to the given string and assigns it to the PersonName field.
func (o *DealStrict) SetPersonName(v string) {
	o.PersonName = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *DealStrict) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *DealStrict) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *DealStrict) SetOrgName(v string) {
	o.OrgName = &v
}

// GetNextActivitySubject returns the NextActivitySubject field value if set, zero value otherwise.
func (o *DealStrict) GetNextActivitySubject() string {
	if o == nil || IsNil(o.NextActivitySubject) {
		var ret string
		return ret
	}
	return *o.NextActivitySubject
}

// GetNextActivitySubjectOk returns a tuple with the NextActivitySubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetNextActivitySubjectOk() (*string, bool) {
	if o == nil || IsNil(o.NextActivitySubject) {
		return nil, false
	}
	return o.NextActivitySubject, true
}

// HasNextActivitySubject returns a boolean if a field has been set.
func (o *DealStrict) HasNextActivitySubject() bool {
	if o != nil && !IsNil(o.NextActivitySubject) {
		return true
	}

	return false
}

// SetNextActivitySubject gets a reference to the given string and assigns it to the NextActivitySubject field.
func (o *DealStrict) SetNextActivitySubject(v string) {
	o.NextActivitySubject = &v
}

// GetNextActivityType returns the NextActivityType field value if set, zero value otherwise.
func (o *DealStrict) GetNextActivityType() string {
	if o == nil || IsNil(o.NextActivityType) {
		var ret string
		return ret
	}
	return *o.NextActivityType
}

// GetNextActivityTypeOk returns a tuple with the NextActivityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetNextActivityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NextActivityType) {
		return nil, false
	}
	return o.NextActivityType, true
}

// HasNextActivityType returns a boolean if a field has been set.
func (o *DealStrict) HasNextActivityType() bool {
	if o != nil && !IsNil(o.NextActivityType) {
		return true
	}

	return false
}

// SetNextActivityType gets a reference to the given string and assigns it to the NextActivityType field.
func (o *DealStrict) SetNextActivityType(v string) {
	o.NextActivityType = &v
}

// GetNextActivityDuration returns the NextActivityDuration field value if set, zero value otherwise.
func (o *DealStrict) GetNextActivityDuration() string {
	if o == nil || IsNil(o.NextActivityDuration) {
		var ret string
		return ret
	}
	return *o.NextActivityDuration
}

// GetNextActivityDurationOk returns a tuple with the NextActivityDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetNextActivityDurationOk() (*string, bool) {
	if o == nil || IsNil(o.NextActivityDuration) {
		return nil, false
	}
	return o.NextActivityDuration, true
}

// HasNextActivityDuration returns a boolean if a field has been set.
func (o *DealStrict) HasNextActivityDuration() bool {
	if o != nil && !IsNil(o.NextActivityDuration) {
		return true
	}

	return false
}

// SetNextActivityDuration gets a reference to the given string and assigns it to the NextActivityDuration field.
func (o *DealStrict) SetNextActivityDuration(v string) {
	o.NextActivityDuration = &v
}

// GetNextActivityNote returns the NextActivityNote field value if set, zero value otherwise.
func (o *DealStrict) GetNextActivityNote() string {
	if o == nil || IsNil(o.NextActivityNote) {
		var ret string
		return ret
	}
	return *o.NextActivityNote
}

// GetNextActivityNoteOk returns a tuple with the NextActivityNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetNextActivityNoteOk() (*string, bool) {
	if o == nil || IsNil(o.NextActivityNote) {
		return nil, false
	}
	return o.NextActivityNote, true
}

// HasNextActivityNote returns a boolean if a field has been set.
func (o *DealStrict) HasNextActivityNote() bool {
	if o != nil && !IsNil(o.NextActivityNote) {
		return true
	}

	return false
}

// SetNextActivityNote gets a reference to the given string and assigns it to the NextActivityNote field.
func (o *DealStrict) SetNextActivityNote(v string) {
	o.NextActivityNote = &v
}

// GetFormattedValue returns the FormattedValue field value if set, zero value otherwise.
func (o *DealStrict) GetFormattedValue() string {
	if o == nil || IsNil(o.FormattedValue) {
		var ret string
		return ret
	}
	return *o.FormattedValue
}

// GetFormattedValueOk returns a tuple with the FormattedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetFormattedValueOk() (*string, bool) {
	if o == nil || IsNil(o.FormattedValue) {
		return nil, false
	}
	return o.FormattedValue, true
}

// HasFormattedValue returns a boolean if a field has been set.
func (o *DealStrict) HasFormattedValue() bool {
	if o != nil && !IsNil(o.FormattedValue) {
		return true
	}

	return false
}

// SetFormattedValue gets a reference to the given string and assigns it to the FormattedValue field.
func (o *DealStrict) SetFormattedValue(v string) {
	o.FormattedValue = &v
}

// GetWeightedValue returns the WeightedValue field value if set, zero value otherwise.
func (o *DealStrict) GetWeightedValue() float32 {
	if o == nil || IsNil(o.WeightedValue) {
		var ret float32
		return ret
	}
	return *o.WeightedValue
}

// GetWeightedValueOk returns a tuple with the WeightedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetWeightedValueOk() (*float32, bool) {
	if o == nil || IsNil(o.WeightedValue) {
		return nil, false
	}
	return o.WeightedValue, true
}

// HasWeightedValue returns a boolean if a field has been set.
func (o *DealStrict) HasWeightedValue() bool {
	if o != nil && !IsNil(o.WeightedValue) {
		return true
	}

	return false
}

// SetWeightedValue gets a reference to the given float32 and assigns it to the WeightedValue field.
func (o *DealStrict) SetWeightedValue(v float32) {
	o.WeightedValue = &v
}

// GetFormattedWeightedValue returns the FormattedWeightedValue field value if set, zero value otherwise.
func (o *DealStrict) GetFormattedWeightedValue() string {
	if o == nil || IsNil(o.FormattedWeightedValue) {
		var ret string
		return ret
	}
	return *o.FormattedWeightedValue
}

// GetFormattedWeightedValueOk returns a tuple with the FormattedWeightedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetFormattedWeightedValueOk() (*string, bool) {
	if o == nil || IsNil(o.FormattedWeightedValue) {
		return nil, false
	}
	return o.FormattedWeightedValue, true
}

// HasFormattedWeightedValue returns a boolean if a field has been set.
func (o *DealStrict) HasFormattedWeightedValue() bool {
	if o != nil && !IsNil(o.FormattedWeightedValue) {
		return true
	}

	return false
}

// SetFormattedWeightedValue gets a reference to the given string and assigns it to the FormattedWeightedValue field.
func (o *DealStrict) SetFormattedWeightedValue(v string) {
	o.FormattedWeightedValue = &v
}

// GetWeightedValueCurrency returns the WeightedValueCurrency field value if set, zero value otherwise.
func (o *DealStrict) GetWeightedValueCurrency() string {
	if o == nil || IsNil(o.WeightedValueCurrency) {
		var ret string
		return ret
	}
	return *o.WeightedValueCurrency
}

// GetWeightedValueCurrencyOk returns a tuple with the WeightedValueCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetWeightedValueCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.WeightedValueCurrency) {
		return nil, false
	}
	return o.WeightedValueCurrency, true
}

// HasWeightedValueCurrency returns a boolean if a field has been set.
func (o *DealStrict) HasWeightedValueCurrency() bool {
	if o != nil && !IsNil(o.WeightedValueCurrency) {
		return true
	}

	return false
}

// SetWeightedValueCurrency gets a reference to the given string and assigns it to the WeightedValueCurrency field.
func (o *DealStrict) SetWeightedValueCurrency(v string) {
	o.WeightedValueCurrency = &v
}

// GetRottenTime returns the RottenTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetRottenTime() string {
	if o == nil || IsNil(o.RottenTime.Get()) {
		var ret string
		return ret
	}
	return *o.RottenTime.Get()
}

// GetRottenTimeOk returns a tuple with the RottenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetRottenTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RottenTime.Get(), o.RottenTime.IsSet()
}

// HasRottenTime returns a boolean if a field has been set.
func (o *DealStrict) HasRottenTime() bool {
	if o != nil && o.RottenTime.IsSet() {
		return true
	}

	return false
}

// SetRottenTime gets a reference to the given NullableString and assigns it to the RottenTime field.
func (o *DealStrict) SetRottenTime(v string) {
	o.RottenTime.Set(&v)
}
// SetRottenTimeNil sets the value for RottenTime to be an explicit nil
func (o *DealStrict) SetRottenTimeNil() {
	o.RottenTime.Set(nil)
}

// UnsetRottenTime ensures that no value is present for RottenTime, not even an explicit nil
func (o *DealStrict) UnsetRottenTime() {
	o.RottenTime.Unset()
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *DealStrict) GetOwnerName() string {
	if o == nil || IsNil(o.OwnerName) {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerName) {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *DealStrict) HasOwnerName() bool {
	if o != nil && !IsNil(o.OwnerName) {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *DealStrict) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetCcEmail returns the CcEmail field value if set, zero value otherwise.
func (o *DealStrict) GetCcEmail() string {
	if o == nil || IsNil(o.CcEmail) {
		var ret string
		return ret
	}
	return *o.CcEmail
}

// GetCcEmailOk returns a tuple with the CcEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetCcEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CcEmail) {
		return nil, false
	}
	return o.CcEmail, true
}

// HasCcEmail returns a boolean if a field has been set.
func (o *DealStrict) HasCcEmail() bool {
	if o != nil && !IsNil(o.CcEmail) {
		return true
	}

	return false
}

// SetCcEmail gets a reference to the given string and assigns it to the CcEmail field.
func (o *DealStrict) SetCcEmail(v string) {
	o.CcEmail = &v
}

// GetOrgHidden returns the OrgHidden field value if set, zero value otherwise.
func (o *DealStrict) GetOrgHidden() bool {
	if o == nil || IsNil(o.OrgHidden) {
		var ret bool
		return ret
	}
	return *o.OrgHidden
}

// GetOrgHiddenOk returns a tuple with the OrgHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetOrgHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.OrgHidden) {
		return nil, false
	}
	return o.OrgHidden, true
}

// HasOrgHidden returns a boolean if a field has been set.
func (o *DealStrict) HasOrgHidden() bool {
	if o != nil && !IsNil(o.OrgHidden) {
		return true
	}

	return false
}

// SetOrgHidden gets a reference to the given bool and assigns it to the OrgHidden field.
func (o *DealStrict) SetOrgHidden(v bool) {
	o.OrgHidden = &v
}

// GetPersonHidden returns the PersonHidden field value if set, zero value otherwise.
func (o *DealStrict) GetPersonHidden() bool {
	if o == nil || IsNil(o.PersonHidden) {
		var ret bool
		return ret
	}
	return *o.PersonHidden
}

// GetPersonHiddenOk returns a tuple with the PersonHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetPersonHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.PersonHidden) {
		return nil, false
	}
	return o.PersonHidden, true
}

// HasPersonHidden returns a boolean if a field has been set.
func (o *DealStrict) HasPersonHidden() bool {
	if o != nil && !IsNil(o.PersonHidden) {
		return true
	}

	return false
}

// SetPersonHidden gets a reference to the given bool and assigns it to the PersonHidden field.
func (o *DealStrict) SetPersonHidden(v bool) {
	o.PersonHidden = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *DealStrict) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealStrict) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *DealStrict) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *DealStrict) SetOrigin(v string) {
	o.Origin = &v
}

// GetOriginId returns the OriginId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetOriginId() string {
	if o == nil || IsNil(o.OriginId.Get()) {
		var ret string
		return ret
	}
	return *o.OriginId.Get()
}

// GetOriginIdOk returns a tuple with the OriginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetOriginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginId.Get(), o.OriginId.IsSet()
}

// HasOriginId returns a boolean if a field has been set.
func (o *DealStrict) HasOriginId() bool {
	if o != nil && o.OriginId.IsSet() {
		return true
	}

	return false
}

// SetOriginId gets a reference to the given NullableString and assigns it to the OriginId field.
func (o *DealStrict) SetOriginId(v string) {
	o.OriginId.Set(&v)
}
// SetOriginIdNil sets the value for OriginId to be an explicit nil
func (o *DealStrict) SetOriginIdNil() {
	o.OriginId.Set(nil)
}

// UnsetOriginId ensures that no value is present for OriginId, not even an explicit nil
func (o *DealStrict) UnsetOriginId() {
	o.OriginId.Unset()
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetChannel() int32 {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret int32
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetChannelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *DealStrict) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableInt32 and assigns it to the Channel field.
func (o *DealStrict) SetChannel(v int32) {
	o.Channel.Set(&v)
}
// SetChannelNil sets the value for Channel to be an explicit nil
func (o *DealStrict) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *DealStrict) UnsetChannel() {
	o.Channel.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *DealStrict) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *DealStrict) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *DealStrict) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *DealStrict) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetArr returns the Arr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetArr() float32 {
	if o == nil || IsNil(o.Arr.Get()) {
		var ret float32
		return ret
	}
	return *o.Arr.Get()
}

// GetArrOk returns a tuple with the Arr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetArrOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Arr.Get(), o.Arr.IsSet()
}

// HasArr returns a boolean if a field has been set.
func (o *DealStrict) HasArr() bool {
	if o != nil && o.Arr.IsSet() {
		return true
	}

	return false
}

// SetArr gets a reference to the given NullableFloat32 and assigns it to the Arr field.
func (o *DealStrict) SetArr(v float32) {
	o.Arr.Set(&v)
}
// SetArrNil sets the value for Arr to be an explicit nil
func (o *DealStrict) SetArrNil() {
	o.Arr.Set(nil)
}

// UnsetArr ensures that no value is present for Arr, not even an explicit nil
func (o *DealStrict) UnsetArr() {
	o.Arr.Unset()
}

// GetMrr returns the Mrr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetMrr() float32 {
	if o == nil || IsNil(o.Mrr.Get()) {
		var ret float32
		return ret
	}
	return *o.Mrr.Get()
}

// GetMrrOk returns a tuple with the Mrr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetMrrOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mrr.Get(), o.Mrr.IsSet()
}

// HasMrr returns a boolean if a field has been set.
func (o *DealStrict) HasMrr() bool {
	if o != nil && o.Mrr.IsSet() {
		return true
	}

	return false
}

// SetMrr gets a reference to the given NullableFloat32 and assigns it to the Mrr field.
func (o *DealStrict) SetMrr(v float32) {
	o.Mrr.Set(&v)
}
// SetMrrNil sets the value for Mrr to be an explicit nil
func (o *DealStrict) SetMrrNil() {
	o.Mrr.Set(nil)
}

// UnsetMrr ensures that no value is present for Mrr, not even an explicit nil
func (o *DealStrict) UnsetMrr() {
	o.Mrr.Unset()
}

// GetAcv returns the Acv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetAcv() float32 {
	if o == nil || IsNil(o.Acv.Get()) {
		var ret float32
		return ret
	}
	return *o.Acv.Get()
}

// GetAcvOk returns a tuple with the Acv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetAcvOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Acv.Get(), o.Acv.IsSet()
}

// HasAcv returns a boolean if a field has been set.
func (o *DealStrict) HasAcv() bool {
	if o != nil && o.Acv.IsSet() {
		return true
	}

	return false
}

// SetAcv gets a reference to the given NullableFloat32 and assigns it to the Acv field.
func (o *DealStrict) SetAcv(v float32) {
	o.Acv.Set(&v)
}
// SetAcvNil sets the value for Acv to be an explicit nil
func (o *DealStrict) SetAcvNil() {
	o.Acv.Set(nil)
}

// UnsetAcv ensures that no value is present for Acv, not even an explicit nil
func (o *DealStrict) UnsetAcv() {
	o.Acv.Unset()
}

// GetArrCurrency returns the ArrCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetArrCurrency() string {
	if o == nil || IsNil(o.ArrCurrency.Get()) {
		var ret string
		return ret
	}
	return *o.ArrCurrency.Get()
}

// GetArrCurrencyOk returns a tuple with the ArrCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetArrCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ArrCurrency.Get(), o.ArrCurrency.IsSet()
}

// HasArrCurrency returns a boolean if a field has been set.
func (o *DealStrict) HasArrCurrency() bool {
	if o != nil && o.ArrCurrency.IsSet() {
		return true
	}

	return false
}

// SetArrCurrency gets a reference to the given NullableString and assigns it to the ArrCurrency field.
func (o *DealStrict) SetArrCurrency(v string) {
	o.ArrCurrency.Set(&v)
}
// SetArrCurrencyNil sets the value for ArrCurrency to be an explicit nil
func (o *DealStrict) SetArrCurrencyNil() {
	o.ArrCurrency.Set(nil)
}

// UnsetArrCurrency ensures that no value is present for ArrCurrency, not even an explicit nil
func (o *DealStrict) UnsetArrCurrency() {
	o.ArrCurrency.Unset()
}

// GetMrrCurrency returns the MrrCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetMrrCurrency() string {
	if o == nil || IsNil(o.MrrCurrency.Get()) {
		var ret string
		return ret
	}
	return *o.MrrCurrency.Get()
}

// GetMrrCurrencyOk returns a tuple with the MrrCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetMrrCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MrrCurrency.Get(), o.MrrCurrency.IsSet()
}

// HasMrrCurrency returns a boolean if a field has been set.
func (o *DealStrict) HasMrrCurrency() bool {
	if o != nil && o.MrrCurrency.IsSet() {
		return true
	}

	return false
}

// SetMrrCurrency gets a reference to the given NullableString and assigns it to the MrrCurrency field.
func (o *DealStrict) SetMrrCurrency(v string) {
	o.MrrCurrency.Set(&v)
}
// SetMrrCurrencyNil sets the value for MrrCurrency to be an explicit nil
func (o *DealStrict) SetMrrCurrencyNil() {
	o.MrrCurrency.Set(nil)
}

// UnsetMrrCurrency ensures that no value is present for MrrCurrency, not even an explicit nil
func (o *DealStrict) UnsetMrrCurrency() {
	o.MrrCurrency.Unset()
}

// GetAcvCurrency returns the AcvCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealStrict) GetAcvCurrency() string {
	if o == nil || IsNil(o.AcvCurrency.Get()) {
		var ret string
		return ret
	}
	return *o.AcvCurrency.Get()
}

// GetAcvCurrencyOk returns a tuple with the AcvCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealStrict) GetAcvCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcvCurrency.Get(), o.AcvCurrency.IsSet()
}

// HasAcvCurrency returns a boolean if a field has been set.
func (o *DealStrict) HasAcvCurrency() bool {
	if o != nil && o.AcvCurrency.IsSet() {
		return true
	}

	return false
}

// SetAcvCurrency gets a reference to the given NullableString and assigns it to the AcvCurrency field.
func (o *DealStrict) SetAcvCurrency(v string) {
	o.AcvCurrency.Set(&v)
}
// SetAcvCurrencyNil sets the value for AcvCurrency to be an explicit nil
func (o *DealStrict) SetAcvCurrencyNil() {
	o.AcvCurrency.Set(nil)
}

// UnsetAcvCurrency ensures that no value is present for AcvCurrency, not even an explicit nil
func (o *DealStrict) UnsetAcvCurrency() {
	o.AcvCurrency.Unset()
}

func (o DealStrict) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DealStrict) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatorUserId) {
		toSerialize["creator_user_id"] = o.CreatorUserId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.StageId) {
		toSerialize["stage_id"] = o.StageId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.StageChangeTime) {
		toSerialize["stage_change_time"] = o.StageChangeTime
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Probability.IsSet() {
		toSerialize["probability"] = o.Probability.Get()
	}
	if !IsNil(o.NextActivityDate) {
		toSerialize["next_activity_date"] = o.NextActivityDate
	}
	if !IsNil(o.NextActivityTime) {
		toSerialize["next_activity_time"] = o.NextActivityTime
	}
	if o.NextActivityId.IsSet() {
		toSerialize["next_activity_id"] = o.NextActivityId.Get()
	}
	if o.LastActivityId.IsSet() {
		toSerialize["last_activity_id"] = o.LastActivityId.Get()
	}
	if o.LastActivityDate.IsSet() {
		toSerialize["last_activity_date"] = o.LastActivityDate.Get()
	}
	if o.LostReason.IsSet() {
		toSerialize["lost_reason"] = o.LostReason.Get()
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	if o.CloseTime.IsSet() {
		toSerialize["close_time"] = o.CloseTime.Get()
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipeline_id"] = o.PipelineId
	}
	if !IsNil(o.WonTime) {
		toSerialize["won_time"] = o.WonTime
	}
	if !IsNil(o.FirstWonTime) {
		toSerialize["first_won_time"] = o.FirstWonTime
	}
	if !IsNil(o.LostTime) {
		toSerialize["lost_time"] = o.LostTime
	}
	if !IsNil(o.ProductsCount) {
		toSerialize["products_count"] = o.ProductsCount
	}
	if !IsNil(o.FilesCount) {
		toSerialize["files_count"] = o.FilesCount
	}
	if !IsNil(o.NotesCount) {
		toSerialize["notes_count"] = o.NotesCount
	}
	if !IsNil(o.FollowersCount) {
		toSerialize["followers_count"] = o.FollowersCount
	}
	if !IsNil(o.EmailMessagesCount) {
		toSerialize["email_messages_count"] = o.EmailMessagesCount
	}
	if !IsNil(o.ActivitiesCount) {
		toSerialize["activities_count"] = o.ActivitiesCount
	}
	if !IsNil(o.DoneActivitiesCount) {
		toSerialize["done_activities_count"] = o.DoneActivitiesCount
	}
	if !IsNil(o.UndoneActivitiesCount) {
		toSerialize["undone_activities_count"] = o.UndoneActivitiesCount
	}
	if !IsNil(o.ParticipantsCount) {
		toSerialize["participants_count"] = o.ParticipantsCount
	}
	if !IsNil(o.ExpectedCloseDate) {
		toSerialize["expected_close_date"] = o.ExpectedCloseDate
	}
	if !IsNil(o.LastIncomingMailTime) {
		toSerialize["last_incoming_mail_time"] = o.LastIncomingMailTime
	}
	if !IsNil(o.LastOutgoingMailTime) {
		toSerialize["last_outgoing_mail_time"] = o.LastOutgoingMailTime
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.StageOrderNr) {
		toSerialize["stage_order_nr"] = o.StageOrderNr
	}
	if !IsNil(o.PersonName) {
		toSerialize["person_name"] = o.PersonName
	}
	if !IsNil(o.OrgName) {
		toSerialize["org_name"] = o.OrgName
	}
	if !IsNil(o.NextActivitySubject) {
		toSerialize["next_activity_subject"] = o.NextActivitySubject
	}
	if !IsNil(o.NextActivityType) {
		toSerialize["next_activity_type"] = o.NextActivityType
	}
	if !IsNil(o.NextActivityDuration) {
		toSerialize["next_activity_duration"] = o.NextActivityDuration
	}
	if !IsNil(o.NextActivityNote) {
		toSerialize["next_activity_note"] = o.NextActivityNote
	}
	if !IsNil(o.FormattedValue) {
		toSerialize["formatted_value"] = o.FormattedValue
	}
	if !IsNil(o.WeightedValue) {
		toSerialize["weighted_value"] = o.WeightedValue
	}
	if !IsNil(o.FormattedWeightedValue) {
		toSerialize["formatted_weighted_value"] = o.FormattedWeightedValue
	}
	if !IsNil(o.WeightedValueCurrency) {
		toSerialize["weighted_value_currency"] = o.WeightedValueCurrency
	}
	if o.RottenTime.IsSet() {
		toSerialize["rotten_time"] = o.RottenTime.Get()
	}
	if !IsNil(o.OwnerName) {
		toSerialize["owner_name"] = o.OwnerName
	}
	if !IsNil(o.CcEmail) {
		toSerialize["cc_email"] = o.CcEmail
	}
	if !IsNil(o.OrgHidden) {
		toSerialize["org_hidden"] = o.OrgHidden
	}
	if !IsNil(o.PersonHidden) {
		toSerialize["person_hidden"] = o.PersonHidden
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if o.OriginId.IsSet() {
		toSerialize["origin_id"] = o.OriginId.Get()
	}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["channel_id"] = o.ChannelId.Get()
	}
	if o.Arr.IsSet() {
		toSerialize["arr"] = o.Arr.Get()
	}
	if o.Mrr.IsSet() {
		toSerialize["mrr"] = o.Mrr.Get()
	}
	if o.Acv.IsSet() {
		toSerialize["acv"] = o.Acv.Get()
	}
	if o.ArrCurrency.IsSet() {
		toSerialize["arr_currency"] = o.ArrCurrency.Get()
	}
	if o.MrrCurrency.IsSet() {
		toSerialize["mrr_currency"] = o.MrrCurrency.Get()
	}
	if o.AcvCurrency.IsSet() {
		toSerialize["acv_currency"] = o.AcvCurrency.Get()
	}
	return toSerialize, nil
}

type NullableDealStrict struct {
	value *DealStrict
	isSet bool
}

func (v NullableDealStrict) Get() *DealStrict {
	return v.value
}

func (v *NullableDealStrict) Set(val *DealStrict) {
	v.value = val
	v.isSet = true
}

func (v NullableDealStrict) IsSet() bool {
	return v.isSet
}

func (v *NullableDealStrict) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDealStrict(val *DealStrict) *NullableDealStrict {
	return &NullableDealStrict{value: val, isSet: true}
}

func (v NullableDealStrict) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDealStrict) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


