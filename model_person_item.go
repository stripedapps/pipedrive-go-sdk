/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PersonItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersonItem{}

// PersonItem struct for PersonItem
type PersonItem struct {
	// The ID of the person
	Id *int32 `json:"id,omitempty"`
	// The ID of the company related to the person
	CompanyId *int32 `json:"company_id,omitempty"`
	// Whether the person is active or not
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.
	Phone []PersonItemAllOfPhoneInner `json:"phone,omitempty"`
	// An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" } ]`. Please note that only `value` is required.
	Email []PersonItemAllOfEmailInner `json:"email,omitempty"`
	// The first letter of the name of the person
	FirstChar *string `json:"first_char,omitempty"`
	// The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
	AddTime *string `json:"add_time,omitempty"`
	// The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
	UpdateTime *string `json:"update_time,omitempty"`
	// The visibility group ID of who can see the person
	VisibleTo *string `json:"visible_to,omitempty"`
	PictureId *PersonItemAllOfPictureId `json:"picture_id,omitempty"`
	// The label assigned to the person
	Label *int32 `json:"label,omitempty"`
	// The name of the organization associated with the person
	OrgName *string `json:"org_name,omitempty"`
	// The name of the owner associated with the person
	OwnerName *string `json:"owner_name,omitempty"`
	// The BCC email associated with the person
	CcEmail *string `json:"cc_email,omitempty"`
	OwnerId *Owner `json:"owner_id,omitempty"`
	OrgId *RelationshipOrganizationInfoItemWithActiveFlag `json:"org_id,omitempty"`
	// The name of the person
	Name *string `json:"name,omitempty"`
	// The first name of the person
	FirstName *string `json:"first_name,omitempty"`
	// The last name of the person
	LastName *string `json:"last_name,omitempty"`
	// The count of email messages related to the person
	EmailMessagesCount *int32 `json:"email_messages_count,omitempty"`
	// The count of activities related to the person
	ActivitiesCount *int32 `json:"activities_count,omitempty"`
	// The count of done activities related to the person
	DoneActivitiesCount *int32 `json:"done_activities_count,omitempty"`
	// The count of undone activities related to the person
	UndoneActivitiesCount *int32 `json:"undone_activities_count,omitempty"`
	// The count of files related to the person
	FilesCount *int32 `json:"files_count,omitempty"`
	// The count of notes related to the person
	NotesCount *int32 `json:"notes_count,omitempty"`
	// The count of followers related to the person
	FollowersCount *int32 `json:"followers_count,omitempty"`
	// The date and time of the last incoming email associated with the person
	LastIncomingMailTime *string `json:"last_incoming_mail_time,omitempty"`
	// The date and time of the last outgoing email associated with the person
	LastOutgoingMailTime *string `json:"last_outgoing_mail_time,omitempty"`
	// The count of open deals related with the item
	OpenDealsCount *int32 `json:"open_deals_count,omitempty"`
	// The count of related open deals related with the item
	RelatedOpenDealsCount *int32 `json:"related_open_deals_count,omitempty"`
	// The count of closed deals related with the item
	ClosedDealsCount *int32 `json:"closed_deals_count,omitempty"`
	// The count of related closed deals related with the item
	RelatedClosedDealsCount *int32 `json:"related_closed_deals_count,omitempty"`
	// The count of won deals related with the item
	WonDealsCount *int32 `json:"won_deals_count,omitempty"`
	// The count of related won deals related with the item
	RelatedWonDealsCount *int32 `json:"related_won_deals_count,omitempty"`
	// The count of lost deals related with the item
	LostDealsCount *int32 `json:"lost_deals_count,omitempty"`
	// The count of related lost deals related with the item
	RelatedLostDealsCount *int32 `json:"related_lost_deals_count,omitempty"`
	// The date of the next activity associated with the deal
	NextActivityDate NullableString `json:"next_activity_date,omitempty"`
	// The time of the next activity associated with the deal
	NextActivityTime NullableString `json:"next_activity_time,omitempty"`
	// The ID of the next activity associated with the deal
	NextActivityId NullableInt32 `json:"next_activity_id,omitempty"`
	// The ID of the last activity associated with the deal
	LastActivityId NullableInt32 `json:"last_activity_id,omitempty"`
	// The date of the last activity associated with the deal
	LastActivityDate NullableString `json:"last_activity_date,omitempty"`
}

// NewPersonItem instantiates a new PersonItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonItem() *PersonItem {
	this := PersonItem{}
	return &this
}

// NewPersonItemWithDefaults instantiates a new PersonItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonItemWithDefaults() *PersonItem {
	this := PersonItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PersonItem) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PersonItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PersonItem) SetId(v int32) {
	o.Id = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *PersonItem) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *PersonItem) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *PersonItem) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *PersonItem) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *PersonItem) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *PersonItem) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *PersonItem) GetPhone() []PersonItemAllOfPhoneInner {
	if o == nil || IsNil(o.Phone) {
		var ret []PersonItemAllOfPhoneInner
		return ret
	}
	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetPhoneOk() ([]PersonItemAllOfPhoneInner, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *PersonItem) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given []PersonItemAllOfPhoneInner and assigns it to the Phone field.
func (o *PersonItem) SetPhone(v []PersonItemAllOfPhoneInner) {
	o.Phone = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PersonItem) GetEmail() []PersonItemAllOfEmailInner {
	if o == nil || IsNil(o.Email) {
		var ret []PersonItemAllOfEmailInner
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetEmailOk() ([]PersonItemAllOfEmailInner, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PersonItem) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given []PersonItemAllOfEmailInner and assigns it to the Email field.
func (o *PersonItem) SetEmail(v []PersonItemAllOfEmailInner) {
	o.Email = v
}

// GetFirstChar returns the FirstChar field value if set, zero value otherwise.
func (o *PersonItem) GetFirstChar() string {
	if o == nil || IsNil(o.FirstChar) {
		var ret string
		return ret
	}
	return *o.FirstChar
}

// GetFirstCharOk returns a tuple with the FirstChar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetFirstCharOk() (*string, bool) {
	if o == nil || IsNil(o.FirstChar) {
		return nil, false
	}
	return o.FirstChar, true
}

// HasFirstChar returns a boolean if a field has been set.
func (o *PersonItem) HasFirstChar() bool {
	if o != nil && !IsNil(o.FirstChar) {
		return true
	}

	return false
}

// SetFirstChar gets a reference to the given string and assigns it to the FirstChar field.
func (o *PersonItem) SetFirstChar(v string) {
	o.FirstChar = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *PersonItem) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *PersonItem) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *PersonItem) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *PersonItem) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *PersonItem) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *PersonItem) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *PersonItem) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *PersonItem) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *PersonItem) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

// GetPictureId returns the PictureId field value if set, zero value otherwise.
func (o *PersonItem) GetPictureId() PersonItemAllOfPictureId {
	if o == nil || IsNil(o.PictureId) {
		var ret PersonItemAllOfPictureId
		return ret
	}
	return *o.PictureId
}

// GetPictureIdOk returns a tuple with the PictureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetPictureIdOk() (*PersonItemAllOfPictureId, bool) {
	if o == nil || IsNil(o.PictureId) {
		return nil, false
	}
	return o.PictureId, true
}

// HasPictureId returns a boolean if a field has been set.
func (o *PersonItem) HasPictureId() bool {
	if o != nil && !IsNil(o.PictureId) {
		return true
	}

	return false
}

// SetPictureId gets a reference to the given PersonItemAllOfPictureId and assigns it to the PictureId field.
func (o *PersonItem) SetPictureId(v PersonItemAllOfPictureId) {
	o.PictureId = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PersonItem) GetLabel() int32 {
	if o == nil || IsNil(o.Label) {
		var ret int32
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetLabelOk() (*int32, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PersonItem) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given int32 and assigns it to the Label field.
func (o *PersonItem) SetLabel(v int32) {
	o.Label = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *PersonItem) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *PersonItem) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *PersonItem) SetOrgName(v string) {
	o.OrgName = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *PersonItem) GetOwnerName() string {
	if o == nil || IsNil(o.OwnerName) {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerName) {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *PersonItem) HasOwnerName() bool {
	if o != nil && !IsNil(o.OwnerName) {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *PersonItem) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetCcEmail returns the CcEmail field value if set, zero value otherwise.
func (o *PersonItem) GetCcEmail() string {
	if o == nil || IsNil(o.CcEmail) {
		var ret string
		return ret
	}
	return *o.CcEmail
}

// GetCcEmailOk returns a tuple with the CcEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetCcEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CcEmail) {
		return nil, false
	}
	return o.CcEmail, true
}

// HasCcEmail returns a boolean if a field has been set.
func (o *PersonItem) HasCcEmail() bool {
	if o != nil && !IsNil(o.CcEmail) {
		return true
	}

	return false
}

// SetCcEmail gets a reference to the given string and assigns it to the CcEmail field.
func (o *PersonItem) SetCcEmail(v string) {
	o.CcEmail = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *PersonItem) GetOwnerId() Owner {
	if o == nil || IsNil(o.OwnerId) {
		var ret Owner
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetOwnerIdOk() (*Owner, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *PersonItem) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given Owner and assigns it to the OwnerId field.
func (o *PersonItem) SetOwnerId(v Owner) {
	o.OwnerId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *PersonItem) GetOrgId() RelationshipOrganizationInfoItemWithActiveFlag {
	if o == nil || IsNil(o.OrgId) {
		var ret RelationshipOrganizationInfoItemWithActiveFlag
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetOrgIdOk() (*RelationshipOrganizationInfoItemWithActiveFlag, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *PersonItem) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given RelationshipOrganizationInfoItemWithActiveFlag and assigns it to the OrgId field.
func (o *PersonItem) SetOrgId(v RelationshipOrganizationInfoItemWithActiveFlag) {
	o.OrgId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PersonItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PersonItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PersonItem) SetName(v string) {
	o.Name = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *PersonItem) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *PersonItem) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *PersonItem) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *PersonItem) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *PersonItem) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *PersonItem) SetLastName(v string) {
	o.LastName = &v
}

// GetEmailMessagesCount returns the EmailMessagesCount field value if set, zero value otherwise.
func (o *PersonItem) GetEmailMessagesCount() int32 {
	if o == nil || IsNil(o.EmailMessagesCount) {
		var ret int32
		return ret
	}
	return *o.EmailMessagesCount
}

// GetEmailMessagesCountOk returns a tuple with the EmailMessagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetEmailMessagesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailMessagesCount) {
		return nil, false
	}
	return o.EmailMessagesCount, true
}

// HasEmailMessagesCount returns a boolean if a field has been set.
func (o *PersonItem) HasEmailMessagesCount() bool {
	if o != nil && !IsNil(o.EmailMessagesCount) {
		return true
	}

	return false
}

// SetEmailMessagesCount gets a reference to the given int32 and assigns it to the EmailMessagesCount field.
func (o *PersonItem) SetEmailMessagesCount(v int32) {
	o.EmailMessagesCount = &v
}

// GetActivitiesCount returns the ActivitiesCount field value if set, zero value otherwise.
func (o *PersonItem) GetActivitiesCount() int32 {
	if o == nil || IsNil(o.ActivitiesCount) {
		var ret int32
		return ret
	}
	return *o.ActivitiesCount
}

// GetActivitiesCountOk returns a tuple with the ActivitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetActivitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ActivitiesCount) {
		return nil, false
	}
	return o.ActivitiesCount, true
}

// HasActivitiesCount returns a boolean if a field has been set.
func (o *PersonItem) HasActivitiesCount() bool {
	if o != nil && !IsNil(o.ActivitiesCount) {
		return true
	}

	return false
}

// SetActivitiesCount gets a reference to the given int32 and assigns it to the ActivitiesCount field.
func (o *PersonItem) SetActivitiesCount(v int32) {
	o.ActivitiesCount = &v
}

// GetDoneActivitiesCount returns the DoneActivitiesCount field value if set, zero value otherwise.
func (o *PersonItem) GetDoneActivitiesCount() int32 {
	if o == nil || IsNil(o.DoneActivitiesCount) {
		var ret int32
		return ret
	}
	return *o.DoneActivitiesCount
}

// GetDoneActivitiesCountOk returns a tuple with the DoneActivitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetDoneActivitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DoneActivitiesCount) {
		return nil, false
	}
	return o.DoneActivitiesCount, true
}

// HasDoneActivitiesCount returns a boolean if a field has been set.
func (o *PersonItem) HasDoneActivitiesCount() bool {
	if o != nil && !IsNil(o.DoneActivitiesCount) {
		return true
	}

	return false
}

// SetDoneActivitiesCount gets a reference to the given int32 and assigns it to the DoneActivitiesCount field.
func (o *PersonItem) SetDoneActivitiesCount(v int32) {
	o.DoneActivitiesCount = &v
}

// GetUndoneActivitiesCount returns the UndoneActivitiesCount field value if set, zero value otherwise.
func (o *PersonItem) GetUndoneActivitiesCount() int32 {
	if o == nil || IsNil(o.UndoneActivitiesCount) {
		var ret int32
		return ret
	}
	return *o.UndoneActivitiesCount
}

// GetUndoneActivitiesCountOk returns a tuple with the UndoneActivitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetUndoneActivitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UndoneActivitiesCount) {
		return nil, false
	}
	return o.UndoneActivitiesCount, true
}

// HasUndoneActivitiesCount returns a boolean if a field has been set.
func (o *PersonItem) HasUndoneActivitiesCount() bool {
	if o != nil && !IsNil(o.UndoneActivitiesCount) {
		return true
	}

	return false
}

// SetUndoneActivitiesCount gets a reference to the given int32 and assigns it to the UndoneActivitiesCount field.
func (o *PersonItem) SetUndoneActivitiesCount(v int32) {
	o.UndoneActivitiesCount = &v
}

// GetFilesCount returns the FilesCount field value if set, zero value otherwise.
func (o *PersonItem) GetFilesCount() int32 {
	if o == nil || IsNil(o.FilesCount) {
		var ret int32
		return ret
	}
	return *o.FilesCount
}

// GetFilesCountOk returns a tuple with the FilesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetFilesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FilesCount) {
		return nil, false
	}
	return o.FilesCount, true
}

// HasFilesCount returns a boolean if a field has been set.
func (o *PersonItem) HasFilesCount() bool {
	if o != nil && !IsNil(o.FilesCount) {
		return true
	}

	return false
}

// SetFilesCount gets a reference to the given int32 and assigns it to the FilesCount field.
func (o *PersonItem) SetFilesCount(v int32) {
	o.FilesCount = &v
}

// GetNotesCount returns the NotesCount field value if set, zero value otherwise.
func (o *PersonItem) GetNotesCount() int32 {
	if o == nil || IsNil(o.NotesCount) {
		var ret int32
		return ret
	}
	return *o.NotesCount
}

// GetNotesCountOk returns a tuple with the NotesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetNotesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NotesCount) {
		return nil, false
	}
	return o.NotesCount, true
}

// HasNotesCount returns a boolean if a field has been set.
func (o *PersonItem) HasNotesCount() bool {
	if o != nil && !IsNil(o.NotesCount) {
		return true
	}

	return false
}

// SetNotesCount gets a reference to the given int32 and assigns it to the NotesCount field.
func (o *PersonItem) SetNotesCount(v int32) {
	o.NotesCount = &v
}

// GetFollowersCount returns the FollowersCount field value if set, zero value otherwise.
func (o *PersonItem) GetFollowersCount() int32 {
	if o == nil || IsNil(o.FollowersCount) {
		var ret int32
		return ret
	}
	return *o.FollowersCount
}

// GetFollowersCountOk returns a tuple with the FollowersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetFollowersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FollowersCount) {
		return nil, false
	}
	return o.FollowersCount, true
}

// HasFollowersCount returns a boolean if a field has been set.
func (o *PersonItem) HasFollowersCount() bool {
	if o != nil && !IsNil(o.FollowersCount) {
		return true
	}

	return false
}

// SetFollowersCount gets a reference to the given int32 and assigns it to the FollowersCount field.
func (o *PersonItem) SetFollowersCount(v int32) {
	o.FollowersCount = &v
}

// GetLastIncomingMailTime returns the LastIncomingMailTime field value if set, zero value otherwise.
func (o *PersonItem) GetLastIncomingMailTime() string {
	if o == nil || IsNil(o.LastIncomingMailTime) {
		var ret string
		return ret
	}
	return *o.LastIncomingMailTime
}

// GetLastIncomingMailTimeOk returns a tuple with the LastIncomingMailTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetLastIncomingMailTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastIncomingMailTime) {
		return nil, false
	}
	return o.LastIncomingMailTime, true
}

// HasLastIncomingMailTime returns a boolean if a field has been set.
func (o *PersonItem) HasLastIncomingMailTime() bool {
	if o != nil && !IsNil(o.LastIncomingMailTime) {
		return true
	}

	return false
}

// SetLastIncomingMailTime gets a reference to the given string and assigns it to the LastIncomingMailTime field.
func (o *PersonItem) SetLastIncomingMailTime(v string) {
	o.LastIncomingMailTime = &v
}

// GetLastOutgoingMailTime returns the LastOutgoingMailTime field value if set, zero value otherwise.
func (o *PersonItem) GetLastOutgoingMailTime() string {
	if o == nil || IsNil(o.LastOutgoingMailTime) {
		var ret string
		return ret
	}
	return *o.LastOutgoingMailTime
}

// GetLastOutgoingMailTimeOk returns a tuple with the LastOutgoingMailTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetLastOutgoingMailTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastOutgoingMailTime) {
		return nil, false
	}
	return o.LastOutgoingMailTime, true
}

// HasLastOutgoingMailTime returns a boolean if a field has been set.
func (o *PersonItem) HasLastOutgoingMailTime() bool {
	if o != nil && !IsNil(o.LastOutgoingMailTime) {
		return true
	}

	return false
}

// SetLastOutgoingMailTime gets a reference to the given string and assigns it to the LastOutgoingMailTime field.
func (o *PersonItem) SetLastOutgoingMailTime(v string) {
	o.LastOutgoingMailTime = &v
}

// GetOpenDealsCount returns the OpenDealsCount field value if set, zero value otherwise.
func (o *PersonItem) GetOpenDealsCount() int32 {
	if o == nil || IsNil(o.OpenDealsCount) {
		var ret int32
		return ret
	}
	return *o.OpenDealsCount
}

// GetOpenDealsCountOk returns a tuple with the OpenDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetOpenDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.OpenDealsCount) {
		return nil, false
	}
	return o.OpenDealsCount, true
}

// HasOpenDealsCount returns a boolean if a field has been set.
func (o *PersonItem) HasOpenDealsCount() bool {
	if o != nil && !IsNil(o.OpenDealsCount) {
		return true
	}

	return false
}

// SetOpenDealsCount gets a reference to the given int32 and assigns it to the OpenDealsCount field.
func (o *PersonItem) SetOpenDealsCount(v int32) {
	o.OpenDealsCount = &v
}

// GetRelatedOpenDealsCount returns the RelatedOpenDealsCount field value if set, zero value otherwise.
func (o *PersonItem) GetRelatedOpenDealsCount() int32 {
	if o == nil || IsNil(o.RelatedOpenDealsCount) {
		var ret int32
		return ret
	}
	return *o.RelatedOpenDealsCount
}

// GetRelatedOpenDealsCountOk returns a tuple with the RelatedOpenDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetRelatedOpenDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedOpenDealsCount) {
		return nil, false
	}
	return o.RelatedOpenDealsCount, true
}

// HasRelatedOpenDealsCount returns a boolean if a field has been set.
func (o *PersonItem) HasRelatedOpenDealsCount() bool {
	if o != nil && !IsNil(o.RelatedOpenDealsCount) {
		return true
	}

	return false
}

// SetRelatedOpenDealsCount gets a reference to the given int32 and assigns it to the RelatedOpenDealsCount field.
func (o *PersonItem) SetRelatedOpenDealsCount(v int32) {
	o.RelatedOpenDealsCount = &v
}

// GetClosedDealsCount returns the ClosedDealsCount field value if set, zero value otherwise.
func (o *PersonItem) GetClosedDealsCount() int32 {
	if o == nil || IsNil(o.ClosedDealsCount) {
		var ret int32
		return ret
	}
	return *o.ClosedDealsCount
}

// GetClosedDealsCountOk returns a tuple with the ClosedDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetClosedDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ClosedDealsCount) {
		return nil, false
	}
	return o.ClosedDealsCount, true
}

// HasClosedDealsCount returns a boolean if a field has been set.
func (o *PersonItem) HasClosedDealsCount() bool {
	if o != nil && !IsNil(o.ClosedDealsCount) {
		return true
	}

	return false
}

// SetClosedDealsCount gets a reference to the given int32 and assigns it to the ClosedDealsCount field.
func (o *PersonItem) SetClosedDealsCount(v int32) {
	o.ClosedDealsCount = &v
}

// GetRelatedClosedDealsCount returns the RelatedClosedDealsCount field value if set, zero value otherwise.
func (o *PersonItem) GetRelatedClosedDealsCount() int32 {
	if o == nil || IsNil(o.RelatedClosedDealsCount) {
		var ret int32
		return ret
	}
	return *o.RelatedClosedDealsCount
}

// GetRelatedClosedDealsCountOk returns a tuple with the RelatedClosedDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetRelatedClosedDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedClosedDealsCount) {
		return nil, false
	}
	return o.RelatedClosedDealsCount, true
}

// HasRelatedClosedDealsCount returns a boolean if a field has been set.
func (o *PersonItem) HasRelatedClosedDealsCount() bool {
	if o != nil && !IsNil(o.RelatedClosedDealsCount) {
		return true
	}

	return false
}

// SetRelatedClosedDealsCount gets a reference to the given int32 and assigns it to the RelatedClosedDealsCount field.
func (o *PersonItem) SetRelatedClosedDealsCount(v int32) {
	o.RelatedClosedDealsCount = &v
}

// GetWonDealsCount returns the WonDealsCount field value if set, zero value otherwise.
func (o *PersonItem) GetWonDealsCount() int32 {
	if o == nil || IsNil(o.WonDealsCount) {
		var ret int32
		return ret
	}
	return *o.WonDealsCount
}

// GetWonDealsCountOk returns a tuple with the WonDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetWonDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WonDealsCount) {
		return nil, false
	}
	return o.WonDealsCount, true
}

// HasWonDealsCount returns a boolean if a field has been set.
func (o *PersonItem) HasWonDealsCount() bool {
	if o != nil && !IsNil(o.WonDealsCount) {
		return true
	}

	return false
}

// SetWonDealsCount gets a reference to the given int32 and assigns it to the WonDealsCount field.
func (o *PersonItem) SetWonDealsCount(v int32) {
	o.WonDealsCount = &v
}

// GetRelatedWonDealsCount returns the RelatedWonDealsCount field value if set, zero value otherwise.
func (o *PersonItem) GetRelatedWonDealsCount() int32 {
	if o == nil || IsNil(o.RelatedWonDealsCount) {
		var ret int32
		return ret
	}
	return *o.RelatedWonDealsCount
}

// GetRelatedWonDealsCountOk returns a tuple with the RelatedWonDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetRelatedWonDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedWonDealsCount) {
		return nil, false
	}
	return o.RelatedWonDealsCount, true
}

// HasRelatedWonDealsCount returns a boolean if a field has been set.
func (o *PersonItem) HasRelatedWonDealsCount() bool {
	if o != nil && !IsNil(o.RelatedWonDealsCount) {
		return true
	}

	return false
}

// SetRelatedWonDealsCount gets a reference to the given int32 and assigns it to the RelatedWonDealsCount field.
func (o *PersonItem) SetRelatedWonDealsCount(v int32) {
	o.RelatedWonDealsCount = &v
}

// GetLostDealsCount returns the LostDealsCount field value if set, zero value otherwise.
func (o *PersonItem) GetLostDealsCount() int32 {
	if o == nil || IsNil(o.LostDealsCount) {
		var ret int32
		return ret
	}
	return *o.LostDealsCount
}

// GetLostDealsCountOk returns a tuple with the LostDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetLostDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.LostDealsCount) {
		return nil, false
	}
	return o.LostDealsCount, true
}

// HasLostDealsCount returns a boolean if a field has been set.
func (o *PersonItem) HasLostDealsCount() bool {
	if o != nil && !IsNil(o.LostDealsCount) {
		return true
	}

	return false
}

// SetLostDealsCount gets a reference to the given int32 and assigns it to the LostDealsCount field.
func (o *PersonItem) SetLostDealsCount(v int32) {
	o.LostDealsCount = &v
}

// GetRelatedLostDealsCount returns the RelatedLostDealsCount field value if set, zero value otherwise.
func (o *PersonItem) GetRelatedLostDealsCount() int32 {
	if o == nil || IsNil(o.RelatedLostDealsCount) {
		var ret int32
		return ret
	}
	return *o.RelatedLostDealsCount
}

// GetRelatedLostDealsCountOk returns a tuple with the RelatedLostDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonItem) GetRelatedLostDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedLostDealsCount) {
		return nil, false
	}
	return o.RelatedLostDealsCount, true
}

// HasRelatedLostDealsCount returns a boolean if a field has been set.
func (o *PersonItem) HasRelatedLostDealsCount() bool {
	if o != nil && !IsNil(o.RelatedLostDealsCount) {
		return true
	}

	return false
}

// SetRelatedLostDealsCount gets a reference to the given int32 and assigns it to the RelatedLostDealsCount field.
func (o *PersonItem) SetRelatedLostDealsCount(v int32) {
	o.RelatedLostDealsCount = &v
}

// GetNextActivityDate returns the NextActivityDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PersonItem) GetNextActivityDate() string {
	if o == nil || IsNil(o.NextActivityDate.Get()) {
		var ret string
		return ret
	}
	return *o.NextActivityDate.Get()
}

// GetNextActivityDateOk returns a tuple with the NextActivityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PersonItem) GetNextActivityDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextActivityDate.Get(), o.NextActivityDate.IsSet()
}

// HasNextActivityDate returns a boolean if a field has been set.
func (o *PersonItem) HasNextActivityDate() bool {
	if o != nil && o.NextActivityDate.IsSet() {
		return true
	}

	return false
}

// SetNextActivityDate gets a reference to the given NullableString and assigns it to the NextActivityDate field.
func (o *PersonItem) SetNextActivityDate(v string) {
	o.NextActivityDate.Set(&v)
}
// SetNextActivityDateNil sets the value for NextActivityDate to be an explicit nil
func (o *PersonItem) SetNextActivityDateNil() {
	o.NextActivityDate.Set(nil)
}

// UnsetNextActivityDate ensures that no value is present for NextActivityDate, not even an explicit nil
func (o *PersonItem) UnsetNextActivityDate() {
	o.NextActivityDate.Unset()
}

// GetNextActivityTime returns the NextActivityTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PersonItem) GetNextActivityTime() string {
	if o == nil || IsNil(o.NextActivityTime.Get()) {
		var ret string
		return ret
	}
	return *o.NextActivityTime.Get()
}

// GetNextActivityTimeOk returns a tuple with the NextActivityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PersonItem) GetNextActivityTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextActivityTime.Get(), o.NextActivityTime.IsSet()
}

// HasNextActivityTime returns a boolean if a field has been set.
func (o *PersonItem) HasNextActivityTime() bool {
	if o != nil && o.NextActivityTime.IsSet() {
		return true
	}

	return false
}

// SetNextActivityTime gets a reference to the given NullableString and assigns it to the NextActivityTime field.
func (o *PersonItem) SetNextActivityTime(v string) {
	o.NextActivityTime.Set(&v)
}
// SetNextActivityTimeNil sets the value for NextActivityTime to be an explicit nil
func (o *PersonItem) SetNextActivityTimeNil() {
	o.NextActivityTime.Set(nil)
}

// UnsetNextActivityTime ensures that no value is present for NextActivityTime, not even an explicit nil
func (o *PersonItem) UnsetNextActivityTime() {
	o.NextActivityTime.Unset()
}

// GetNextActivityId returns the NextActivityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PersonItem) GetNextActivityId() int32 {
	if o == nil || IsNil(o.NextActivityId.Get()) {
		var ret int32
		return ret
	}
	return *o.NextActivityId.Get()
}

// GetNextActivityIdOk returns a tuple with the NextActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PersonItem) GetNextActivityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextActivityId.Get(), o.NextActivityId.IsSet()
}

// HasNextActivityId returns a boolean if a field has been set.
func (o *PersonItem) HasNextActivityId() bool {
	if o != nil && o.NextActivityId.IsSet() {
		return true
	}

	return false
}

// SetNextActivityId gets a reference to the given NullableInt32 and assigns it to the NextActivityId field.
func (o *PersonItem) SetNextActivityId(v int32) {
	o.NextActivityId.Set(&v)
}
// SetNextActivityIdNil sets the value for NextActivityId to be an explicit nil
func (o *PersonItem) SetNextActivityIdNil() {
	o.NextActivityId.Set(nil)
}

// UnsetNextActivityId ensures that no value is present for NextActivityId, not even an explicit nil
func (o *PersonItem) UnsetNextActivityId() {
	o.NextActivityId.Unset()
}

// GetLastActivityId returns the LastActivityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PersonItem) GetLastActivityId() int32 {
	if o == nil || IsNil(o.LastActivityId.Get()) {
		var ret int32
		return ret
	}
	return *o.LastActivityId.Get()
}

// GetLastActivityIdOk returns a tuple with the LastActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PersonItem) GetLastActivityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastActivityId.Get(), o.LastActivityId.IsSet()
}

// HasLastActivityId returns a boolean if a field has been set.
func (o *PersonItem) HasLastActivityId() bool {
	if o != nil && o.LastActivityId.IsSet() {
		return true
	}

	return false
}

// SetLastActivityId gets a reference to the given NullableInt32 and assigns it to the LastActivityId field.
func (o *PersonItem) SetLastActivityId(v int32) {
	o.LastActivityId.Set(&v)
}
// SetLastActivityIdNil sets the value for LastActivityId to be an explicit nil
func (o *PersonItem) SetLastActivityIdNil() {
	o.LastActivityId.Set(nil)
}

// UnsetLastActivityId ensures that no value is present for LastActivityId, not even an explicit nil
func (o *PersonItem) UnsetLastActivityId() {
	o.LastActivityId.Unset()
}

// GetLastActivityDate returns the LastActivityDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PersonItem) GetLastActivityDate() string {
	if o == nil || IsNil(o.LastActivityDate.Get()) {
		var ret string
		return ret
	}
	return *o.LastActivityDate.Get()
}

// GetLastActivityDateOk returns a tuple with the LastActivityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PersonItem) GetLastActivityDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastActivityDate.Get(), o.LastActivityDate.IsSet()
}

// HasLastActivityDate returns a boolean if a field has been set.
func (o *PersonItem) HasLastActivityDate() bool {
	if o != nil && o.LastActivityDate.IsSet() {
		return true
	}

	return false
}

// SetLastActivityDate gets a reference to the given NullableString and assigns it to the LastActivityDate field.
func (o *PersonItem) SetLastActivityDate(v string) {
	o.LastActivityDate.Set(&v)
}
// SetLastActivityDateNil sets the value for LastActivityDate to be an explicit nil
func (o *PersonItem) SetLastActivityDateNil() {
	o.LastActivityDate.Set(nil)
}

// UnsetLastActivityDate ensures that no value is present for LastActivityDate, not even an explicit nil
func (o *PersonItem) UnsetLastActivityDate() {
	o.LastActivityDate.Unset()
}

func (o PersonItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersonItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstChar) {
		toSerialize["first_char"] = o.FirstChar
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	if !IsNil(o.PictureId) {
		toSerialize["picture_id"] = o.PictureId
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.OrgName) {
		toSerialize["org_name"] = o.OrgName
	}
	if !IsNil(o.OwnerName) {
		toSerialize["owner_name"] = o.OwnerName
	}
	if !IsNil(o.CcEmail) {
		toSerialize["cc_email"] = o.CcEmail
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.EmailMessagesCount) {
		toSerialize["email_messages_count"] = o.EmailMessagesCount
	}
	if !IsNil(o.ActivitiesCount) {
		toSerialize["activities_count"] = o.ActivitiesCount
	}
	if !IsNil(o.DoneActivitiesCount) {
		toSerialize["done_activities_count"] = o.DoneActivitiesCount
	}
	if !IsNil(o.UndoneActivitiesCount) {
		toSerialize["undone_activities_count"] = o.UndoneActivitiesCount
	}
	if !IsNil(o.FilesCount) {
		toSerialize["files_count"] = o.FilesCount
	}
	if !IsNil(o.NotesCount) {
		toSerialize["notes_count"] = o.NotesCount
	}
	if !IsNil(o.FollowersCount) {
		toSerialize["followers_count"] = o.FollowersCount
	}
	if !IsNil(o.LastIncomingMailTime) {
		toSerialize["last_incoming_mail_time"] = o.LastIncomingMailTime
	}
	if !IsNil(o.LastOutgoingMailTime) {
		toSerialize["last_outgoing_mail_time"] = o.LastOutgoingMailTime
	}
	if !IsNil(o.OpenDealsCount) {
		toSerialize["open_deals_count"] = o.OpenDealsCount
	}
	if !IsNil(o.RelatedOpenDealsCount) {
		toSerialize["related_open_deals_count"] = o.RelatedOpenDealsCount
	}
	if !IsNil(o.ClosedDealsCount) {
		toSerialize["closed_deals_count"] = o.ClosedDealsCount
	}
	if !IsNil(o.RelatedClosedDealsCount) {
		toSerialize["related_closed_deals_count"] = o.RelatedClosedDealsCount
	}
	if !IsNil(o.WonDealsCount) {
		toSerialize["won_deals_count"] = o.WonDealsCount
	}
	if !IsNil(o.RelatedWonDealsCount) {
		toSerialize["related_won_deals_count"] = o.RelatedWonDealsCount
	}
	if !IsNil(o.LostDealsCount) {
		toSerialize["lost_deals_count"] = o.LostDealsCount
	}
	if !IsNil(o.RelatedLostDealsCount) {
		toSerialize["related_lost_deals_count"] = o.RelatedLostDealsCount
	}
	if o.NextActivityDate.IsSet() {
		toSerialize["next_activity_date"] = o.NextActivityDate.Get()
	}
	if o.NextActivityTime.IsSet() {
		toSerialize["next_activity_time"] = o.NextActivityTime.Get()
	}
	if o.NextActivityId.IsSet() {
		toSerialize["next_activity_id"] = o.NextActivityId.Get()
	}
	if o.LastActivityId.IsSet() {
		toSerialize["last_activity_id"] = o.LastActivityId.Get()
	}
	if o.LastActivityDate.IsSet() {
		toSerialize["last_activity_date"] = o.LastActivityDate.Get()
	}
	return toSerialize, nil
}

type NullablePersonItem struct {
	value *PersonItem
	isSet bool
}

func (v NullablePersonItem) Get() *PersonItem {
	return v.value
}

func (v *NullablePersonItem) Set(val *PersonItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonItem(val *PersonItem) *NullablePersonItem {
	return &NullablePersonItem{value: val, isSet: true}
}

func (v NullablePersonItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


