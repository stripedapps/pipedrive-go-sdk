/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddDealRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDealRequest{}

// AddDealRequest struct for AddDealRequest
type AddDealRequest struct {
	// The title of the deal
	Title string `json:"title"`
	// The value of the deal. If omitted, value will be set to 0.
	Value *string `json:"value,omitempty"`
	// The array of the labels IDs.
	Label []int32 `json:"label,omitempty"`
	// The currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.
	Currency *string `json:"currency,omitempty"`
	// The ID of the user which will be the owner of the created deal. If not provided, the user making the request will be used.
	UserId *int32 `json:"user_id,omitempty"`
	// The ID of a person which this deal will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `org_id` is specified.
	PersonId *int32 `json:"person_id,omitempty"`
	// The ID of an organization which this deal will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified.
	OrgId *int32 `json:"org_id,omitempty"`
	// The ID of the pipeline this deal will be added to. By default, the deal will be added to the first stage of the specified pipeline. Please note that `pipeline_id` and `stage_id` should not be used together as `pipeline_id` will be ignored.
	PipelineId *int32 `json:"pipeline_id,omitempty"`
	// The ID of the stage this deal will be added to. Please note that a pipeline will be assigned automatically based on the `stage_id`. If omitted, the deal will be placed in the first stage of the default pipeline.
	StageId *int32 `json:"stage_id,omitempty"`
	// open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open.
	Status *string `json:"status,omitempty"`
	// The optional ID to further distinguish the origin of the deal - e.g. Which API integration created this deal. If omitted, `origin_id` will be set to null.
	OriginId NullableString `json:"origin_id,omitempty"`
	// The ID of Marketing channel this deal was created from. Provided value must be one of the channels configured for your company. You can fetch allowed values with <a href=\"https://developers.pipedrive.com/docs/api/v1/DealFields#getDealField\" target=\"_blank\" rel=\"noopener noreferrer\">GET /v1/dealFields</a>. If omitted, channel will be set to null.
	Channel NullableInt32 `json:"channel,omitempty"`
	// The optional ID to further distinguish the Marketing channel. If omitted, `channel_id` will be set to null.
	ChannelId NullableString `json:"channel_id,omitempty"`
	// The optional creation date & time of the deal in UTC. Format: YYYY-MM-DD HH:MM:SS
	AddTime *string `json:"add_time,omitempty"`
	// The optional date and time of changing the deal status as won in UTC. Format: YYYY-MM-DD HH:MM:SS. Can be set only when deal `status` is already Won. Can not be used together with `lost_time`.
	WonTime *string `json:"won_time,omitempty"`
	// The optional date and time of changing the deal status as lost in UTC. Format: YYYY-MM-DD HH:MM:SS. Can be set only when deal `status` is already Lost. Can not be used together with `won_time`.
	LostTime *string `json:"lost_time,omitempty"`
	// The optional date and time of closing the deal in UTC. Format: YYYY-MM-DD HH:MM:SS.
	CloseTime NullableString `json:"close_time,omitempty"`
	// The expected close date of the deal. In ISO 8601 format: YYYY-MM-DD.
	ExpectedCloseDate *string `json:"expected_close_date,omitempty"`
	// The success probability percentage of the deal. Used/shown only when `deal_probability` for the pipeline of the deal is enabled.
	Probability *float32 `json:"probability,omitempty"`
	// The optional message about why the deal was lost (to be used when status = lost)
	LostReason *string `json:"lost_reason,omitempty"`
	VisibleTo *string `json:"visible_to,omitempty"`
}

type _AddDealRequest AddDealRequest

// NewAddDealRequest instantiates a new AddDealRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDealRequest(title string) *AddDealRequest {
	this := AddDealRequest{}
	this.Title = title
	return &this
}

// NewAddDealRequestWithDefaults instantiates a new AddDealRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDealRequestWithDefaults() *AddDealRequest {
	this := AddDealRequest{}
	return &this
}

// GetTitle returns the Title field value
func (o *AddDealRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AddDealRequest) SetTitle(v string) {
	o.Title = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AddDealRequest) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AddDealRequest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AddDealRequest) SetValue(v string) {
	o.Value = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *AddDealRequest) GetLabel() []int32 {
	if o == nil || IsNil(o.Label) {
		var ret []int32
		return ret
	}
	return o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetLabelOk() ([]int32, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *AddDealRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given []int32 and assigns it to the Label field.
func (o *AddDealRequest) SetLabel(v []int32) {
	o.Label = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *AddDealRequest) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *AddDealRequest) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *AddDealRequest) SetCurrency(v string) {
	o.Currency = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AddDealRequest) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AddDealRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *AddDealRequest) SetUserId(v int32) {
	o.UserId = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *AddDealRequest) GetPersonId() int32 {
	if o == nil || IsNil(o.PersonId) {
		var ret int32
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetPersonIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *AddDealRequest) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given int32 and assigns it to the PersonId field.
func (o *AddDealRequest) SetPersonId(v int32) {
	o.PersonId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *AddDealRequest) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *AddDealRequest) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *AddDealRequest) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *AddDealRequest) GetPipelineId() int32 {
	if o == nil || IsNil(o.PipelineId) {
		var ret int32
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetPipelineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *AddDealRequest) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given int32 and assigns it to the PipelineId field.
func (o *AddDealRequest) SetPipelineId(v int32) {
	o.PipelineId = &v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *AddDealRequest) GetStageId() int32 {
	if o == nil || IsNil(o.StageId) {
		var ret int32
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetStageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *AddDealRequest) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given int32 and assigns it to the StageId field.
func (o *AddDealRequest) SetStageId(v int32) {
	o.StageId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AddDealRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AddDealRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AddDealRequest) SetStatus(v string) {
	o.Status = &v
}

// GetOriginId returns the OriginId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddDealRequest) GetOriginId() string {
	if o == nil || IsNil(o.OriginId.Get()) {
		var ret string
		return ret
	}
	return *o.OriginId.Get()
}

// GetOriginIdOk returns a tuple with the OriginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddDealRequest) GetOriginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginId.Get(), o.OriginId.IsSet()
}

// HasOriginId returns a boolean if a field has been set.
func (o *AddDealRequest) HasOriginId() bool {
	if o != nil && o.OriginId.IsSet() {
		return true
	}

	return false
}

// SetOriginId gets a reference to the given NullableString and assigns it to the OriginId field.
func (o *AddDealRequest) SetOriginId(v string) {
	o.OriginId.Set(&v)
}
// SetOriginIdNil sets the value for OriginId to be an explicit nil
func (o *AddDealRequest) SetOriginIdNil() {
	o.OriginId.Set(nil)
}

// UnsetOriginId ensures that no value is present for OriginId, not even an explicit nil
func (o *AddDealRequest) UnsetOriginId() {
	o.OriginId.Unset()
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddDealRequest) GetChannel() int32 {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret int32
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddDealRequest) GetChannelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *AddDealRequest) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableInt32 and assigns it to the Channel field.
func (o *AddDealRequest) SetChannel(v int32) {
	o.Channel.Set(&v)
}
// SetChannelNil sets the value for Channel to be an explicit nil
func (o *AddDealRequest) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *AddDealRequest) UnsetChannel() {
	o.Channel.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddDealRequest) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddDealRequest) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *AddDealRequest) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *AddDealRequest) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *AddDealRequest) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *AddDealRequest) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *AddDealRequest) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *AddDealRequest) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *AddDealRequest) SetAddTime(v string) {
	o.AddTime = &v
}

// GetWonTime returns the WonTime field value if set, zero value otherwise.
func (o *AddDealRequest) GetWonTime() string {
	if o == nil || IsNil(o.WonTime) {
		var ret string
		return ret
	}
	return *o.WonTime
}

// GetWonTimeOk returns a tuple with the WonTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetWonTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WonTime) {
		return nil, false
	}
	return o.WonTime, true
}

// HasWonTime returns a boolean if a field has been set.
func (o *AddDealRequest) HasWonTime() bool {
	if o != nil && !IsNil(o.WonTime) {
		return true
	}

	return false
}

// SetWonTime gets a reference to the given string and assigns it to the WonTime field.
func (o *AddDealRequest) SetWonTime(v string) {
	o.WonTime = &v
}

// GetLostTime returns the LostTime field value if set, zero value otherwise.
func (o *AddDealRequest) GetLostTime() string {
	if o == nil || IsNil(o.LostTime) {
		var ret string
		return ret
	}
	return *o.LostTime
}

// GetLostTimeOk returns a tuple with the LostTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetLostTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LostTime) {
		return nil, false
	}
	return o.LostTime, true
}

// HasLostTime returns a boolean if a field has been set.
func (o *AddDealRequest) HasLostTime() bool {
	if o != nil && !IsNil(o.LostTime) {
		return true
	}

	return false
}

// SetLostTime gets a reference to the given string and assigns it to the LostTime field.
func (o *AddDealRequest) SetLostTime(v string) {
	o.LostTime = &v
}

// GetCloseTime returns the CloseTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddDealRequest) GetCloseTime() string {
	if o == nil || IsNil(o.CloseTime.Get()) {
		var ret string
		return ret
	}
	return *o.CloseTime.Get()
}

// GetCloseTimeOk returns a tuple with the CloseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddDealRequest) GetCloseTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloseTime.Get(), o.CloseTime.IsSet()
}

// HasCloseTime returns a boolean if a field has been set.
func (o *AddDealRequest) HasCloseTime() bool {
	if o != nil && o.CloseTime.IsSet() {
		return true
	}

	return false
}

// SetCloseTime gets a reference to the given NullableString and assigns it to the CloseTime field.
func (o *AddDealRequest) SetCloseTime(v string) {
	o.CloseTime.Set(&v)
}
// SetCloseTimeNil sets the value for CloseTime to be an explicit nil
func (o *AddDealRequest) SetCloseTimeNil() {
	o.CloseTime.Set(nil)
}

// UnsetCloseTime ensures that no value is present for CloseTime, not even an explicit nil
func (o *AddDealRequest) UnsetCloseTime() {
	o.CloseTime.Unset()
}

// GetExpectedCloseDate returns the ExpectedCloseDate field value if set, zero value otherwise.
func (o *AddDealRequest) GetExpectedCloseDate() string {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		var ret string
		return ret
	}
	return *o.ExpectedCloseDate
}

// GetExpectedCloseDateOk returns a tuple with the ExpectedCloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetExpectedCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		return nil, false
	}
	return o.ExpectedCloseDate, true
}

// HasExpectedCloseDate returns a boolean if a field has been set.
func (o *AddDealRequest) HasExpectedCloseDate() bool {
	if o != nil && !IsNil(o.ExpectedCloseDate) {
		return true
	}

	return false
}

// SetExpectedCloseDate gets a reference to the given string and assigns it to the ExpectedCloseDate field.
func (o *AddDealRequest) SetExpectedCloseDate(v string) {
	o.ExpectedCloseDate = &v
}

// GetProbability returns the Probability field value if set, zero value otherwise.
func (o *AddDealRequest) GetProbability() float32 {
	if o == nil || IsNil(o.Probability) {
		var ret float32
		return ret
	}
	return *o.Probability
}

// GetProbabilityOk returns a tuple with the Probability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetProbabilityOk() (*float32, bool) {
	if o == nil || IsNil(o.Probability) {
		return nil, false
	}
	return o.Probability, true
}

// HasProbability returns a boolean if a field has been set.
func (o *AddDealRequest) HasProbability() bool {
	if o != nil && !IsNil(o.Probability) {
		return true
	}

	return false
}

// SetProbability gets a reference to the given float32 and assigns it to the Probability field.
func (o *AddDealRequest) SetProbability(v float32) {
	o.Probability = &v
}

// GetLostReason returns the LostReason field value if set, zero value otherwise.
func (o *AddDealRequest) GetLostReason() string {
	if o == nil || IsNil(o.LostReason) {
		var ret string
		return ret
	}
	return *o.LostReason
}

// GetLostReasonOk returns a tuple with the LostReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetLostReasonOk() (*string, bool) {
	if o == nil || IsNil(o.LostReason) {
		return nil, false
	}
	return o.LostReason, true
}

// HasLostReason returns a boolean if a field has been set.
func (o *AddDealRequest) HasLostReason() bool {
	if o != nil && !IsNil(o.LostReason) {
		return true
	}

	return false
}

// SetLostReason gets a reference to the given string and assigns it to the LostReason field.
func (o *AddDealRequest) SetLostReason(v string) {
	o.LostReason = &v
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *AddDealRequest) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDealRequest) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *AddDealRequest) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *AddDealRequest) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

func (o AddDealRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDealRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipeline_id"] = o.PipelineId
	}
	if !IsNil(o.StageId) {
		toSerialize["stage_id"] = o.StageId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.OriginId.IsSet() {
		toSerialize["origin_id"] = o.OriginId.Get()
	}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["channel_id"] = o.ChannelId.Get()
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.WonTime) {
		toSerialize["won_time"] = o.WonTime
	}
	if !IsNil(o.LostTime) {
		toSerialize["lost_time"] = o.LostTime
	}
	if o.CloseTime.IsSet() {
		toSerialize["close_time"] = o.CloseTime.Get()
	}
	if !IsNil(o.ExpectedCloseDate) {
		toSerialize["expected_close_date"] = o.ExpectedCloseDate
	}
	if !IsNil(o.Probability) {
		toSerialize["probability"] = o.Probability
	}
	if !IsNil(o.LostReason) {
		toSerialize["lost_reason"] = o.LostReason
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	return toSerialize, nil
}

func (o *AddDealRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddDealRequest := _AddDealRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddDealRequest)

	if err != nil {
		return err
	}

	*o = AddDealRequest(varAddDealRequest)

	return err
}

type NullableAddDealRequest struct {
	value *AddDealRequest
	isSet bool
}

func (v NullableAddDealRequest) Get() *AddDealRequest {
	return v.value
}

func (v *NullableAddDealRequest) Set(val *AddDealRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDealRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDealRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDealRequest(val *AddDealRequest) *NullableAddDealRequest {
	return &NullableAddDealRequest{value: val, isSet: true}
}

func (v NullableAddDealRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDealRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


