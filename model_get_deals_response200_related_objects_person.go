/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetDealsResponse200RelatedObjectsPerson type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDealsResponse200RelatedObjectsPerson{}

// GetDealsResponse200RelatedObjectsPerson The person who is associated with the deal
type GetDealsResponse200RelatedObjectsPerson struct {
	// Whether the associated person is active or not
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// The name of the person associated with the deal
	Name *string `json:"name,omitempty"`
	// The emails of the person associated with the deal
	Email []DealPersonDataWithIdAllOfEmailInner `json:"email,omitempty"`
	// The phone numbers of the person associated with the deal
	Phone []DealPersonDataWithIdAllOfPhoneInner `json:"phone,omitempty"`
	// The ID of the owner of the person that is associated with the deal
	OwnerId *int32 `json:"owner_id,omitempty"`
}

// NewGetDealsResponse200RelatedObjectsPerson instantiates a new GetDealsResponse200RelatedObjectsPerson object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDealsResponse200RelatedObjectsPerson() *GetDealsResponse200RelatedObjectsPerson {
	this := GetDealsResponse200RelatedObjectsPerson{}
	return &this
}

// NewGetDealsResponse200RelatedObjectsPersonWithDefaults instantiates a new GetDealsResponse200RelatedObjectsPerson object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDealsResponse200RelatedObjectsPersonWithDefaults() *GetDealsResponse200RelatedObjectsPerson {
	this := GetDealsResponse200RelatedObjectsPerson{}
	return &this
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *GetDealsResponse200RelatedObjectsPerson) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *GetDealsResponse200RelatedObjectsPerson) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetDealsResponse200RelatedObjectsPerson) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetDealsResponse200RelatedObjectsPerson) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetDealsResponse200RelatedObjectsPerson) GetEmail() []DealPersonDataWithIdAllOfEmailInner {
	if o == nil || IsNil(o.Email) {
		var ret []DealPersonDataWithIdAllOfEmailInner
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) GetEmailOk() ([]DealPersonDataWithIdAllOfEmailInner, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given []DealPersonDataWithIdAllOfEmailInner and assigns it to the Email field.
func (o *GetDealsResponse200RelatedObjectsPerson) SetEmail(v []DealPersonDataWithIdAllOfEmailInner) {
	o.Email = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *GetDealsResponse200RelatedObjectsPerson) GetPhone() []DealPersonDataWithIdAllOfPhoneInner {
	if o == nil || IsNil(o.Phone) {
		var ret []DealPersonDataWithIdAllOfPhoneInner
		return ret
	}
	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) GetPhoneOk() ([]DealPersonDataWithIdAllOfPhoneInner, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given []DealPersonDataWithIdAllOfPhoneInner and assigns it to the Phone field.
func (o *GetDealsResponse200RelatedObjectsPerson) SetPhone(v []DealPersonDataWithIdAllOfPhoneInner) {
	o.Phone = v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *GetDealsResponse200RelatedObjectsPerson) GetOwnerId() int32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) GetOwnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *GetDealsResponse200RelatedObjectsPerson) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *GetDealsResponse200RelatedObjectsPerson) SetOwnerId(v int32) {
	o.OwnerId = &v
}

func (o GetDealsResponse200RelatedObjectsPerson) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDealsResponse200RelatedObjectsPerson) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	return toSerialize, nil
}

type NullableGetDealsResponse200RelatedObjectsPerson struct {
	value *GetDealsResponse200RelatedObjectsPerson
	isSet bool
}

func (v NullableGetDealsResponse200RelatedObjectsPerson) Get() *GetDealsResponse200RelatedObjectsPerson {
	return v.value
}

func (v *NullableGetDealsResponse200RelatedObjectsPerson) Set(val *GetDealsResponse200RelatedObjectsPerson) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDealsResponse200RelatedObjectsPerson) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDealsResponse200RelatedObjectsPerson) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDealsResponse200RelatedObjectsPerson(val *GetDealsResponse200RelatedObjectsPerson) *NullableGetDealsResponse200RelatedObjectsPerson {
	return &NullableGetDealsResponse200RelatedObjectsPerson{value: val, isSet: true}
}

func (v NullableGetDealsResponse200RelatedObjectsPerson) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDealsResponse200RelatedObjectsPerson) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


