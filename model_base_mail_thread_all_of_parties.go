/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BaseMailThreadAllOfParties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseMailThreadAllOfParties{}

// BaseMailThreadAllOfParties Parties of the mail thread
type BaseMailThreadAllOfParties struct {
	// Recipients of the mail thread
	To []BaseMailThreadAllOfPartiesToInner `json:"to,omitempty"`
	// Senders of the mail thread
	From []BaseMailThreadAllOfPartiesToInner `json:"from,omitempty"`
}

// NewBaseMailThreadAllOfParties instantiates a new BaseMailThreadAllOfParties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseMailThreadAllOfParties() *BaseMailThreadAllOfParties {
	this := BaseMailThreadAllOfParties{}
	return &this
}

// NewBaseMailThreadAllOfPartiesWithDefaults instantiates a new BaseMailThreadAllOfParties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseMailThreadAllOfPartiesWithDefaults() *BaseMailThreadAllOfParties {
	this := BaseMailThreadAllOfParties{}
	return &this
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *BaseMailThreadAllOfParties) GetTo() []BaseMailThreadAllOfPartiesToInner {
	if o == nil || IsNil(o.To) {
		var ret []BaseMailThreadAllOfPartiesToInner
		return ret
	}
	return o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThreadAllOfParties) GetToOk() ([]BaseMailThreadAllOfPartiesToInner, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *BaseMailThreadAllOfParties) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given []BaseMailThreadAllOfPartiesToInner and assigns it to the To field.
func (o *BaseMailThreadAllOfParties) SetTo(v []BaseMailThreadAllOfPartiesToInner) {
	o.To = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *BaseMailThreadAllOfParties) GetFrom() []BaseMailThreadAllOfPartiesToInner {
	if o == nil || IsNil(o.From) {
		var ret []BaseMailThreadAllOfPartiesToInner
		return ret
	}
	return o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseMailThreadAllOfParties) GetFromOk() ([]BaseMailThreadAllOfPartiesToInner, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *BaseMailThreadAllOfParties) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given []BaseMailThreadAllOfPartiesToInner and assigns it to the From field.
func (o *BaseMailThreadAllOfParties) SetFrom(v []BaseMailThreadAllOfPartiesToInner) {
	o.From = v
}

func (o BaseMailThreadAllOfParties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseMailThreadAllOfParties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	return toSerialize, nil
}

type NullableBaseMailThreadAllOfParties struct {
	value *BaseMailThreadAllOfParties
	isSet bool
}

func (v NullableBaseMailThreadAllOfParties) Get() *BaseMailThreadAllOfParties {
	return v.value
}

func (v *NullableBaseMailThreadAllOfParties) Set(val *BaseMailThreadAllOfParties) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseMailThreadAllOfParties) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseMailThreadAllOfParties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseMailThreadAllOfParties(val *BaseMailThreadAllOfParties) *NullableBaseMailThreadAllOfParties {
	return &NullableBaseMailThreadAllOfParties{value: val, isSet: true}
}

func (v NullableBaseMailThreadAllOfParties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseMailThreadAllOfParties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


