/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetGoalsResponse200Data type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGoalsResponse200Data{}

// GetGoalsResponse200Data struct for GetGoalsResponse200Data
type GetGoalsResponse200Data struct {
	Goals []AddOrUpdateGoalResponse200DataGoal `json:"goals,omitempty"`
}

// NewGetGoalsResponse200Data instantiates a new GetGoalsResponse200Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGoalsResponse200Data() *GetGoalsResponse200Data {
	this := GetGoalsResponse200Data{}
	return &this
}

// NewGetGoalsResponse200DataWithDefaults instantiates a new GetGoalsResponse200Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGoalsResponse200DataWithDefaults() *GetGoalsResponse200Data {
	this := GetGoalsResponse200Data{}
	return &this
}

// GetGoals returns the Goals field value if set, zero value otherwise.
func (o *GetGoalsResponse200Data) GetGoals() []AddOrUpdateGoalResponse200DataGoal {
	if o == nil || IsNil(o.Goals) {
		var ret []AddOrUpdateGoalResponse200DataGoal
		return ret
	}
	return o.Goals
}

// GetGoalsOk returns a tuple with the Goals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGoalsResponse200Data) GetGoalsOk() ([]AddOrUpdateGoalResponse200DataGoal, bool) {
	if o == nil || IsNil(o.Goals) {
		return nil, false
	}
	return o.Goals, true
}

// HasGoals returns a boolean if a field has been set.
func (o *GetGoalsResponse200Data) HasGoals() bool {
	if o != nil && !IsNil(o.Goals) {
		return true
	}

	return false
}

// SetGoals gets a reference to the given []AddOrUpdateGoalResponse200DataGoal and assigns it to the Goals field.
func (o *GetGoalsResponse200Data) SetGoals(v []AddOrUpdateGoalResponse200DataGoal) {
	o.Goals = v
}

func (o GetGoalsResponse200Data) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGoalsResponse200Data) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Goals) {
		toSerialize["goals"] = o.Goals
	}
	return toSerialize, nil
}

type NullableGetGoalsResponse200Data struct {
	value *GetGoalsResponse200Data
	isSet bool
}

func (v NullableGetGoalsResponse200Data) Get() *GetGoalsResponse200Data {
	return v.value
}

func (v *NullableGetGoalsResponse200Data) Set(val *GetGoalsResponse200Data) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGoalsResponse200Data) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGoalsResponse200Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGoalsResponse200Data(val *GetGoalsResponse200Data) *NullableGetGoalsResponse200Data {
	return &NullableGetGoalsResponse200Data{value: val, isSet: true}
}

func (v NullableGetGoalsResponse200Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGoalsResponse200Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


