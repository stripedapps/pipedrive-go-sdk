/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the MailMessageItemForList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MailMessageItemForList{}

// MailMessageItemForList struct for MailMessageItemForList
type MailMessageItemForList struct {
	// ID of the mail message.
	Id *int32 `json:"id,omitempty"`
	// The array of mail message sender (object)
	From []MailMessageItemForListAllOfFromInner `json:"from,omitempty"`
	// The array of mail message receiver (object)
	To []MailMessageItemForListAllOfFromInner `json:"to,omitempty"`
	// The array of mail message copies (object)
	Cc []MailMessageItemForListAllOfFromInner `json:"cc,omitempty"`
	// The array of mail message blind copies (object)
	Bcc []MailMessageItemForListAllOfFromInner `json:"bcc,omitempty"`
	// The mail message body URL
	BodyUrl *string `json:"body_url,omitempty"`
	// The connection account ID
	AccountId *string `json:"account_id,omitempty"`
	// ID of the user whom mail message will be assigned to
	UserId *int32 `json:"user_id,omitempty"`
	// ID of the mail message thread
	MailThreadId *int32 `json:"mail_thread_id,omitempty"`
	// The subject of mail message
	Subject *string `json:"subject,omitempty"`
	// The snippet of mail message. Snippet length is up to 225 characters.
	Snippet *string `json:"snippet,omitempty"`
	// The status of tracking mail message. Value is `null` if tracking is not enabled.
	MailTrackingStatus NullableString `json:"mail_tracking_status,omitempty"`
	MailLinkTrackingEnabledFlag *float32 `json:"mail_link_tracking_enabled_flag,omitempty"`
	ReadFlag *float32 `json:"read_flag,omitempty"`
	// If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
	Draft *string `json:"draft,omitempty"`
	DraftFlag *float32 `json:"draft_flag,omitempty"`
	SyncedFlag *float32 `json:"synced_flag,omitempty"`
	DeletedFlag *float32 `json:"deleted_flag,omitempty"`
	HasBodyFlag *float32 `json:"has_body_flag,omitempty"`
	SentFlag *float32 `json:"sent_flag,omitempty"`
	SentFromPipedriveFlag *float32 `json:"sent_from_pipedrive_flag,omitempty"`
	SmartBccFlag *float32 `json:"smart_bcc_flag,omitempty"`
	// Creation or receival time of the mail message
	MessageTime *time.Time `json:"message_time,omitempty"`
	// The insertion into the database time of the mail message
	AddTime *time.Time `json:"add_time,omitempty"`
	// The updating time in the database of the mail message
	UpdateTime *time.Time `json:"update_time,omitempty"`
	HasAttachmentsFlag *float32 `json:"has_attachments_flag,omitempty"`
	HasInlineAttachmentsFlag *float32 `json:"has_inline_attachments_flag,omitempty"`
	HasRealAttachmentsFlag *float32 `json:"has_real_attachments_flag,omitempty"`
	// The Mail Message ID assigned by the sync provider
	NylasId *string `json:"nylas_id,omitempty"`
	// The name of the S3 bucket
	S3Bucket *string `json:"s3_bucket,omitempty"`
	// The path of the S3 bucket
	S3BucketPath *string `json:"s3_bucket_path,omitempty"`
	// If the Mail Message has been deleted on the provider side or not
	ExternalDeletedFlag *bool `json:"external_deleted_flag,omitempty"`
	// The Mail Message ID assigned by the mail user agent
	MuaMessageId *string `json:"mua_message_id,omitempty"`
	// The ID of the mail template
	TemplateId *int32 `json:"template_id,omitempty"`
	// The add date and time of the Mail Message
	Timestamp *string `json:"timestamp,omitempty"`
	// The type of the data item
	ItemType *string `json:"item_type,omitempty"`
	// The ID of the company
	CompanyId *int32 `json:"company_id,omitempty"`
}

// NewMailMessageItemForList instantiates a new MailMessageItemForList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailMessageItemForList() *MailMessageItemForList {
	this := MailMessageItemForList{}
	var mailLinkTrackingEnabledFlag float32 = 0
	this.MailLinkTrackingEnabledFlag = &mailLinkTrackingEnabledFlag
	var readFlag float32 = 0
	this.ReadFlag = &readFlag
	var draftFlag float32 = 0
	this.DraftFlag = &draftFlag
	var syncedFlag float32 = 0
	this.SyncedFlag = &syncedFlag
	var deletedFlag float32 = 0
	this.DeletedFlag = &deletedFlag
	var hasBodyFlag float32 = 0
	this.HasBodyFlag = &hasBodyFlag
	var sentFlag float32 = 0
	this.SentFlag = &sentFlag
	var sentFromPipedriveFlag float32 = 0
	this.SentFromPipedriveFlag = &sentFromPipedriveFlag
	var smartBccFlag float32 = 0
	this.SmartBccFlag = &smartBccFlag
	var hasAttachmentsFlag float32 = 0
	this.HasAttachmentsFlag = &hasAttachmentsFlag
	var hasInlineAttachmentsFlag float32 = 0
	this.HasInlineAttachmentsFlag = &hasInlineAttachmentsFlag
	var hasRealAttachmentsFlag float32 = 0
	this.HasRealAttachmentsFlag = &hasRealAttachmentsFlag
	return &this
}

// NewMailMessageItemForListWithDefaults instantiates a new MailMessageItemForList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailMessageItemForListWithDefaults() *MailMessageItemForList {
	this := MailMessageItemForList{}
	var mailLinkTrackingEnabledFlag float32 = 0
	this.MailLinkTrackingEnabledFlag = &mailLinkTrackingEnabledFlag
	var readFlag float32 = 0
	this.ReadFlag = &readFlag
	var draftFlag float32 = 0
	this.DraftFlag = &draftFlag
	var syncedFlag float32 = 0
	this.SyncedFlag = &syncedFlag
	var deletedFlag float32 = 0
	this.DeletedFlag = &deletedFlag
	var hasBodyFlag float32 = 0
	this.HasBodyFlag = &hasBodyFlag
	var sentFlag float32 = 0
	this.SentFlag = &sentFlag
	var sentFromPipedriveFlag float32 = 0
	this.SentFromPipedriveFlag = &sentFromPipedriveFlag
	var smartBccFlag float32 = 0
	this.SmartBccFlag = &smartBccFlag
	var hasAttachmentsFlag float32 = 0
	this.HasAttachmentsFlag = &hasAttachmentsFlag
	var hasInlineAttachmentsFlag float32 = 0
	this.HasInlineAttachmentsFlag = &hasInlineAttachmentsFlag
	var hasRealAttachmentsFlag float32 = 0
	this.HasRealAttachmentsFlag = &hasRealAttachmentsFlag
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MailMessageItemForList) SetId(v int32) {
	o.Id = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetFrom() []MailMessageItemForListAllOfFromInner {
	if o == nil || IsNil(o.From) {
		var ret []MailMessageItemForListAllOfFromInner
		return ret
	}
	return o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetFromOk() ([]MailMessageItemForListAllOfFromInner, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given []MailMessageItemForListAllOfFromInner and assigns it to the From field.
func (o *MailMessageItemForList) SetFrom(v []MailMessageItemForListAllOfFromInner) {
	o.From = v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetTo() []MailMessageItemForListAllOfFromInner {
	if o == nil || IsNil(o.To) {
		var ret []MailMessageItemForListAllOfFromInner
		return ret
	}
	return o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetToOk() ([]MailMessageItemForListAllOfFromInner, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given []MailMessageItemForListAllOfFromInner and assigns it to the To field.
func (o *MailMessageItemForList) SetTo(v []MailMessageItemForListAllOfFromInner) {
	o.To = v
}

// GetCc returns the Cc field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetCc() []MailMessageItemForListAllOfFromInner {
	if o == nil || IsNil(o.Cc) {
		var ret []MailMessageItemForListAllOfFromInner
		return ret
	}
	return o.Cc
}

// GetCcOk returns a tuple with the Cc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetCcOk() ([]MailMessageItemForListAllOfFromInner, bool) {
	if o == nil || IsNil(o.Cc) {
		return nil, false
	}
	return o.Cc, true
}

// HasCc returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasCc() bool {
	if o != nil && !IsNil(o.Cc) {
		return true
	}

	return false
}

// SetCc gets a reference to the given []MailMessageItemForListAllOfFromInner and assigns it to the Cc field.
func (o *MailMessageItemForList) SetCc(v []MailMessageItemForListAllOfFromInner) {
	o.Cc = v
}

// GetBcc returns the Bcc field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetBcc() []MailMessageItemForListAllOfFromInner {
	if o == nil || IsNil(o.Bcc) {
		var ret []MailMessageItemForListAllOfFromInner
		return ret
	}
	return o.Bcc
}

// GetBccOk returns a tuple with the Bcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetBccOk() ([]MailMessageItemForListAllOfFromInner, bool) {
	if o == nil || IsNil(o.Bcc) {
		return nil, false
	}
	return o.Bcc, true
}

// HasBcc returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasBcc() bool {
	if o != nil && !IsNil(o.Bcc) {
		return true
	}

	return false
}

// SetBcc gets a reference to the given []MailMessageItemForListAllOfFromInner and assigns it to the Bcc field.
func (o *MailMessageItemForList) SetBcc(v []MailMessageItemForListAllOfFromInner) {
	o.Bcc = v
}

// GetBodyUrl returns the BodyUrl field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetBodyUrl() string {
	if o == nil || IsNil(o.BodyUrl) {
		var ret string
		return ret
	}
	return *o.BodyUrl
}

// GetBodyUrlOk returns a tuple with the BodyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetBodyUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BodyUrl) {
		return nil, false
	}
	return o.BodyUrl, true
}

// HasBodyUrl returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasBodyUrl() bool {
	if o != nil && !IsNil(o.BodyUrl) {
		return true
	}

	return false
}

// SetBodyUrl gets a reference to the given string and assigns it to the BodyUrl field.
func (o *MailMessageItemForList) SetBodyUrl(v string) {
	o.BodyUrl = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *MailMessageItemForList) SetAccountId(v string) {
	o.AccountId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *MailMessageItemForList) SetUserId(v int32) {
	o.UserId = &v
}

// GetMailThreadId returns the MailThreadId field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetMailThreadId() int32 {
	if o == nil || IsNil(o.MailThreadId) {
		var ret int32
		return ret
	}
	return *o.MailThreadId
}

// GetMailThreadIdOk returns a tuple with the MailThreadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetMailThreadIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MailThreadId) {
		return nil, false
	}
	return o.MailThreadId, true
}

// HasMailThreadId returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasMailThreadId() bool {
	if o != nil && !IsNil(o.MailThreadId) {
		return true
	}

	return false
}

// SetMailThreadId gets a reference to the given int32 and assigns it to the MailThreadId field.
func (o *MailMessageItemForList) SetMailThreadId(v int32) {
	o.MailThreadId = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *MailMessageItemForList) SetSubject(v string) {
	o.Subject = &v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *MailMessageItemForList) SetSnippet(v string) {
	o.Snippet = &v
}

// GetMailTrackingStatus returns the MailTrackingStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MailMessageItemForList) GetMailTrackingStatus() string {
	if o == nil || IsNil(o.MailTrackingStatus.Get()) {
		var ret string
		return ret
	}
	return *o.MailTrackingStatus.Get()
}

// GetMailTrackingStatusOk returns a tuple with the MailTrackingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailMessageItemForList) GetMailTrackingStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MailTrackingStatus.Get(), o.MailTrackingStatus.IsSet()
}

// HasMailTrackingStatus returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasMailTrackingStatus() bool {
	if o != nil && o.MailTrackingStatus.IsSet() {
		return true
	}

	return false
}

// SetMailTrackingStatus gets a reference to the given NullableString and assigns it to the MailTrackingStatus field.
func (o *MailMessageItemForList) SetMailTrackingStatus(v string) {
	o.MailTrackingStatus.Set(&v)
}
// SetMailTrackingStatusNil sets the value for MailTrackingStatus to be an explicit nil
func (o *MailMessageItemForList) SetMailTrackingStatusNil() {
	o.MailTrackingStatus.Set(nil)
}

// UnsetMailTrackingStatus ensures that no value is present for MailTrackingStatus, not even an explicit nil
func (o *MailMessageItemForList) UnsetMailTrackingStatus() {
	o.MailTrackingStatus.Unset()
}

// GetMailLinkTrackingEnabledFlag returns the MailLinkTrackingEnabledFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetMailLinkTrackingEnabledFlag() float32 {
	if o == nil || IsNil(o.MailLinkTrackingEnabledFlag) {
		var ret float32
		return ret
	}
	return *o.MailLinkTrackingEnabledFlag
}

// GetMailLinkTrackingEnabledFlagOk returns a tuple with the MailLinkTrackingEnabledFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetMailLinkTrackingEnabledFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.MailLinkTrackingEnabledFlag) {
		return nil, false
	}
	return o.MailLinkTrackingEnabledFlag, true
}

// HasMailLinkTrackingEnabledFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasMailLinkTrackingEnabledFlag() bool {
	if o != nil && !IsNil(o.MailLinkTrackingEnabledFlag) {
		return true
	}

	return false
}

// SetMailLinkTrackingEnabledFlag gets a reference to the given float32 and assigns it to the MailLinkTrackingEnabledFlag field.
func (o *MailMessageItemForList) SetMailLinkTrackingEnabledFlag(v float32) {
	o.MailLinkTrackingEnabledFlag = &v
}

// GetReadFlag returns the ReadFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetReadFlag() float32 {
	if o == nil || IsNil(o.ReadFlag) {
		var ret float32
		return ret
	}
	return *o.ReadFlag
}

// GetReadFlagOk returns a tuple with the ReadFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetReadFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.ReadFlag) {
		return nil, false
	}
	return o.ReadFlag, true
}

// HasReadFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasReadFlag() bool {
	if o != nil && !IsNil(o.ReadFlag) {
		return true
	}

	return false
}

// SetReadFlag gets a reference to the given float32 and assigns it to the ReadFlag field.
func (o *MailMessageItemForList) SetReadFlag(v float32) {
	o.ReadFlag = &v
}

// GetDraft returns the Draft field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetDraft() string {
	if o == nil || IsNil(o.Draft) {
		var ret string
		return ret
	}
	return *o.Draft
}

// GetDraftOk returns a tuple with the Draft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetDraftOk() (*string, bool) {
	if o == nil || IsNil(o.Draft) {
		return nil, false
	}
	return o.Draft, true
}

// HasDraft returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasDraft() bool {
	if o != nil && !IsNil(o.Draft) {
		return true
	}

	return false
}

// SetDraft gets a reference to the given string and assigns it to the Draft field.
func (o *MailMessageItemForList) SetDraft(v string) {
	o.Draft = &v
}

// GetDraftFlag returns the DraftFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetDraftFlag() float32 {
	if o == nil || IsNil(o.DraftFlag) {
		var ret float32
		return ret
	}
	return *o.DraftFlag
}

// GetDraftFlagOk returns a tuple with the DraftFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetDraftFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.DraftFlag) {
		return nil, false
	}
	return o.DraftFlag, true
}

// HasDraftFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasDraftFlag() bool {
	if o != nil && !IsNil(o.DraftFlag) {
		return true
	}

	return false
}

// SetDraftFlag gets a reference to the given float32 and assigns it to the DraftFlag field.
func (o *MailMessageItemForList) SetDraftFlag(v float32) {
	o.DraftFlag = &v
}

// GetSyncedFlag returns the SyncedFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetSyncedFlag() float32 {
	if o == nil || IsNil(o.SyncedFlag) {
		var ret float32
		return ret
	}
	return *o.SyncedFlag
}

// GetSyncedFlagOk returns a tuple with the SyncedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetSyncedFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.SyncedFlag) {
		return nil, false
	}
	return o.SyncedFlag, true
}

// HasSyncedFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasSyncedFlag() bool {
	if o != nil && !IsNil(o.SyncedFlag) {
		return true
	}

	return false
}

// SetSyncedFlag gets a reference to the given float32 and assigns it to the SyncedFlag field.
func (o *MailMessageItemForList) SetSyncedFlag(v float32) {
	o.SyncedFlag = &v
}

// GetDeletedFlag returns the DeletedFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetDeletedFlag() float32 {
	if o == nil || IsNil(o.DeletedFlag) {
		var ret float32
		return ret
	}
	return *o.DeletedFlag
}

// GetDeletedFlagOk returns a tuple with the DeletedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetDeletedFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.DeletedFlag) {
		return nil, false
	}
	return o.DeletedFlag, true
}

// HasDeletedFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasDeletedFlag() bool {
	if o != nil && !IsNil(o.DeletedFlag) {
		return true
	}

	return false
}

// SetDeletedFlag gets a reference to the given float32 and assigns it to the DeletedFlag field.
func (o *MailMessageItemForList) SetDeletedFlag(v float32) {
	o.DeletedFlag = &v
}

// GetHasBodyFlag returns the HasBodyFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetHasBodyFlag() float32 {
	if o == nil || IsNil(o.HasBodyFlag) {
		var ret float32
		return ret
	}
	return *o.HasBodyFlag
}

// GetHasBodyFlagOk returns a tuple with the HasBodyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetHasBodyFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.HasBodyFlag) {
		return nil, false
	}
	return o.HasBodyFlag, true
}

// HasHasBodyFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasHasBodyFlag() bool {
	if o != nil && !IsNil(o.HasBodyFlag) {
		return true
	}

	return false
}

// SetHasBodyFlag gets a reference to the given float32 and assigns it to the HasBodyFlag field.
func (o *MailMessageItemForList) SetHasBodyFlag(v float32) {
	o.HasBodyFlag = &v
}

// GetSentFlag returns the SentFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetSentFlag() float32 {
	if o == nil || IsNil(o.SentFlag) {
		var ret float32
		return ret
	}
	return *o.SentFlag
}

// GetSentFlagOk returns a tuple with the SentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetSentFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.SentFlag) {
		return nil, false
	}
	return o.SentFlag, true
}

// HasSentFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasSentFlag() bool {
	if o != nil && !IsNil(o.SentFlag) {
		return true
	}

	return false
}

// SetSentFlag gets a reference to the given float32 and assigns it to the SentFlag field.
func (o *MailMessageItemForList) SetSentFlag(v float32) {
	o.SentFlag = &v
}

// GetSentFromPipedriveFlag returns the SentFromPipedriveFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetSentFromPipedriveFlag() float32 {
	if o == nil || IsNil(o.SentFromPipedriveFlag) {
		var ret float32
		return ret
	}
	return *o.SentFromPipedriveFlag
}

// GetSentFromPipedriveFlagOk returns a tuple with the SentFromPipedriveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetSentFromPipedriveFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.SentFromPipedriveFlag) {
		return nil, false
	}
	return o.SentFromPipedriveFlag, true
}

// HasSentFromPipedriveFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasSentFromPipedriveFlag() bool {
	if o != nil && !IsNil(o.SentFromPipedriveFlag) {
		return true
	}

	return false
}

// SetSentFromPipedriveFlag gets a reference to the given float32 and assigns it to the SentFromPipedriveFlag field.
func (o *MailMessageItemForList) SetSentFromPipedriveFlag(v float32) {
	o.SentFromPipedriveFlag = &v
}

// GetSmartBccFlag returns the SmartBccFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetSmartBccFlag() float32 {
	if o == nil || IsNil(o.SmartBccFlag) {
		var ret float32
		return ret
	}
	return *o.SmartBccFlag
}

// GetSmartBccFlagOk returns a tuple with the SmartBccFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetSmartBccFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.SmartBccFlag) {
		return nil, false
	}
	return o.SmartBccFlag, true
}

// HasSmartBccFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasSmartBccFlag() bool {
	if o != nil && !IsNil(o.SmartBccFlag) {
		return true
	}

	return false
}

// SetSmartBccFlag gets a reference to the given float32 and assigns it to the SmartBccFlag field.
func (o *MailMessageItemForList) SetSmartBccFlag(v float32) {
	o.SmartBccFlag = &v
}

// GetMessageTime returns the MessageTime field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetMessageTime() time.Time {
	if o == nil || IsNil(o.MessageTime) {
		var ret time.Time
		return ret
	}
	return *o.MessageTime
}

// GetMessageTimeOk returns a tuple with the MessageTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetMessageTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MessageTime) {
		return nil, false
	}
	return o.MessageTime, true
}

// HasMessageTime returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasMessageTime() bool {
	if o != nil && !IsNil(o.MessageTime) {
		return true
	}

	return false
}

// SetMessageTime gets a reference to the given time.Time and assigns it to the MessageTime field.
func (o *MailMessageItemForList) SetMessageTime(v time.Time) {
	o.MessageTime = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetAddTime() time.Time {
	if o == nil || IsNil(o.AddTime) {
		var ret time.Time
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetAddTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given time.Time and assigns it to the AddTime field.
func (o *MailMessageItemForList) SetAddTime(v time.Time) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *MailMessageItemForList) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetHasAttachmentsFlag returns the HasAttachmentsFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetHasAttachmentsFlag() float32 {
	if o == nil || IsNil(o.HasAttachmentsFlag) {
		var ret float32
		return ret
	}
	return *o.HasAttachmentsFlag
}

// GetHasAttachmentsFlagOk returns a tuple with the HasAttachmentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetHasAttachmentsFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.HasAttachmentsFlag) {
		return nil, false
	}
	return o.HasAttachmentsFlag, true
}

// HasHasAttachmentsFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasHasAttachmentsFlag() bool {
	if o != nil && !IsNil(o.HasAttachmentsFlag) {
		return true
	}

	return false
}

// SetHasAttachmentsFlag gets a reference to the given float32 and assigns it to the HasAttachmentsFlag field.
func (o *MailMessageItemForList) SetHasAttachmentsFlag(v float32) {
	o.HasAttachmentsFlag = &v
}

// GetHasInlineAttachmentsFlag returns the HasInlineAttachmentsFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetHasInlineAttachmentsFlag() float32 {
	if o == nil || IsNil(o.HasInlineAttachmentsFlag) {
		var ret float32
		return ret
	}
	return *o.HasInlineAttachmentsFlag
}

// GetHasInlineAttachmentsFlagOk returns a tuple with the HasInlineAttachmentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetHasInlineAttachmentsFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.HasInlineAttachmentsFlag) {
		return nil, false
	}
	return o.HasInlineAttachmentsFlag, true
}

// HasHasInlineAttachmentsFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasHasInlineAttachmentsFlag() bool {
	if o != nil && !IsNil(o.HasInlineAttachmentsFlag) {
		return true
	}

	return false
}

// SetHasInlineAttachmentsFlag gets a reference to the given float32 and assigns it to the HasInlineAttachmentsFlag field.
func (o *MailMessageItemForList) SetHasInlineAttachmentsFlag(v float32) {
	o.HasInlineAttachmentsFlag = &v
}

// GetHasRealAttachmentsFlag returns the HasRealAttachmentsFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetHasRealAttachmentsFlag() float32 {
	if o == nil || IsNil(o.HasRealAttachmentsFlag) {
		var ret float32
		return ret
	}
	return *o.HasRealAttachmentsFlag
}

// GetHasRealAttachmentsFlagOk returns a tuple with the HasRealAttachmentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetHasRealAttachmentsFlagOk() (*float32, bool) {
	if o == nil || IsNil(o.HasRealAttachmentsFlag) {
		return nil, false
	}
	return o.HasRealAttachmentsFlag, true
}

// HasHasRealAttachmentsFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasHasRealAttachmentsFlag() bool {
	if o != nil && !IsNil(o.HasRealAttachmentsFlag) {
		return true
	}

	return false
}

// SetHasRealAttachmentsFlag gets a reference to the given float32 and assigns it to the HasRealAttachmentsFlag field.
func (o *MailMessageItemForList) SetHasRealAttachmentsFlag(v float32) {
	o.HasRealAttachmentsFlag = &v
}

// GetNylasId returns the NylasId field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetNylasId() string {
	if o == nil || IsNil(o.NylasId) {
		var ret string
		return ret
	}
	return *o.NylasId
}

// GetNylasIdOk returns a tuple with the NylasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetNylasIdOk() (*string, bool) {
	if o == nil || IsNil(o.NylasId) {
		return nil, false
	}
	return o.NylasId, true
}

// HasNylasId returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasNylasId() bool {
	if o != nil && !IsNil(o.NylasId) {
		return true
	}

	return false
}

// SetNylasId gets a reference to the given string and assigns it to the NylasId field.
func (o *MailMessageItemForList) SetNylasId(v string) {
	o.NylasId = &v
}

// GetS3Bucket returns the S3Bucket field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetS3Bucket() string {
	if o == nil || IsNil(o.S3Bucket) {
		var ret string
		return ret
	}
	return *o.S3Bucket
}

// GetS3BucketOk returns a tuple with the S3Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetS3BucketOk() (*string, bool) {
	if o == nil || IsNil(o.S3Bucket) {
		return nil, false
	}
	return o.S3Bucket, true
}

// HasS3Bucket returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasS3Bucket() bool {
	if o != nil && !IsNil(o.S3Bucket) {
		return true
	}

	return false
}

// SetS3Bucket gets a reference to the given string and assigns it to the S3Bucket field.
func (o *MailMessageItemForList) SetS3Bucket(v string) {
	o.S3Bucket = &v
}

// GetS3BucketPath returns the S3BucketPath field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetS3BucketPath() string {
	if o == nil || IsNil(o.S3BucketPath) {
		var ret string
		return ret
	}
	return *o.S3BucketPath
}

// GetS3BucketPathOk returns a tuple with the S3BucketPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetS3BucketPathOk() (*string, bool) {
	if o == nil || IsNil(o.S3BucketPath) {
		return nil, false
	}
	return o.S3BucketPath, true
}

// HasS3BucketPath returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasS3BucketPath() bool {
	if o != nil && !IsNil(o.S3BucketPath) {
		return true
	}

	return false
}

// SetS3BucketPath gets a reference to the given string and assigns it to the S3BucketPath field.
func (o *MailMessageItemForList) SetS3BucketPath(v string) {
	o.S3BucketPath = &v
}

// GetExternalDeletedFlag returns the ExternalDeletedFlag field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetExternalDeletedFlag() bool {
	if o == nil || IsNil(o.ExternalDeletedFlag) {
		var ret bool
		return ret
	}
	return *o.ExternalDeletedFlag
}

// GetExternalDeletedFlagOk returns a tuple with the ExternalDeletedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetExternalDeletedFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalDeletedFlag) {
		return nil, false
	}
	return o.ExternalDeletedFlag, true
}

// HasExternalDeletedFlag returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasExternalDeletedFlag() bool {
	if o != nil && !IsNil(o.ExternalDeletedFlag) {
		return true
	}

	return false
}

// SetExternalDeletedFlag gets a reference to the given bool and assigns it to the ExternalDeletedFlag field.
func (o *MailMessageItemForList) SetExternalDeletedFlag(v bool) {
	o.ExternalDeletedFlag = &v
}

// GetMuaMessageId returns the MuaMessageId field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetMuaMessageId() string {
	if o == nil || IsNil(o.MuaMessageId) {
		var ret string
		return ret
	}
	return *o.MuaMessageId
}

// GetMuaMessageIdOk returns a tuple with the MuaMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetMuaMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MuaMessageId) {
		return nil, false
	}
	return o.MuaMessageId, true
}

// HasMuaMessageId returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasMuaMessageId() bool {
	if o != nil && !IsNil(o.MuaMessageId) {
		return true
	}

	return false
}

// SetMuaMessageId gets a reference to the given string and assigns it to the MuaMessageId field.
func (o *MailMessageItemForList) SetMuaMessageId(v string) {
	o.MuaMessageId = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetTemplateId() int32 {
	if o == nil || IsNil(o.TemplateId) {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *MailMessageItemForList) SetTemplateId(v int32) {
	o.TemplateId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *MailMessageItemForList) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetItemType returns the ItemType field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetItemType() string {
	if o == nil || IsNil(o.ItemType) {
		var ret string
		return ret
	}
	return *o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetItemTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ItemType) {
		return nil, false
	}
	return o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasItemType() bool {
	if o != nil && !IsNil(o.ItemType) {
		return true
	}

	return false
}

// SetItemType gets a reference to the given string and assigns it to the ItemType field.
func (o *MailMessageItemForList) SetItemType(v string) {
	o.ItemType = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *MailMessageItemForList) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailMessageItemForList) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *MailMessageItemForList) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *MailMessageItemForList) SetCompanyId(v int32) {
	o.CompanyId = &v
}

func (o MailMessageItemForList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MailMessageItemForList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Cc) {
		toSerialize["cc"] = o.Cc
	}
	if !IsNil(o.Bcc) {
		toSerialize["bcc"] = o.Bcc
	}
	if !IsNil(o.BodyUrl) {
		toSerialize["body_url"] = o.BodyUrl
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.MailThreadId) {
		toSerialize["mail_thread_id"] = o.MailThreadId
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if o.MailTrackingStatus.IsSet() {
		toSerialize["mail_tracking_status"] = o.MailTrackingStatus.Get()
	}
	if !IsNil(o.MailLinkTrackingEnabledFlag) {
		toSerialize["mail_link_tracking_enabled_flag"] = o.MailLinkTrackingEnabledFlag
	}
	if !IsNil(o.ReadFlag) {
		toSerialize["read_flag"] = o.ReadFlag
	}
	if !IsNil(o.Draft) {
		toSerialize["draft"] = o.Draft
	}
	if !IsNil(o.DraftFlag) {
		toSerialize["draft_flag"] = o.DraftFlag
	}
	if !IsNil(o.SyncedFlag) {
		toSerialize["synced_flag"] = o.SyncedFlag
	}
	if !IsNil(o.DeletedFlag) {
		toSerialize["deleted_flag"] = o.DeletedFlag
	}
	if !IsNil(o.HasBodyFlag) {
		toSerialize["has_body_flag"] = o.HasBodyFlag
	}
	if !IsNil(o.SentFlag) {
		toSerialize["sent_flag"] = o.SentFlag
	}
	if !IsNil(o.SentFromPipedriveFlag) {
		toSerialize["sent_from_pipedrive_flag"] = o.SentFromPipedriveFlag
	}
	if !IsNil(o.SmartBccFlag) {
		toSerialize["smart_bcc_flag"] = o.SmartBccFlag
	}
	if !IsNil(o.MessageTime) {
		toSerialize["message_time"] = o.MessageTime
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.HasAttachmentsFlag) {
		toSerialize["has_attachments_flag"] = o.HasAttachmentsFlag
	}
	if !IsNil(o.HasInlineAttachmentsFlag) {
		toSerialize["has_inline_attachments_flag"] = o.HasInlineAttachmentsFlag
	}
	if !IsNil(o.HasRealAttachmentsFlag) {
		toSerialize["has_real_attachments_flag"] = o.HasRealAttachmentsFlag
	}
	if !IsNil(o.NylasId) {
		toSerialize["nylas_id"] = o.NylasId
	}
	if !IsNil(o.S3Bucket) {
		toSerialize["s3_bucket"] = o.S3Bucket
	}
	if !IsNil(o.S3BucketPath) {
		toSerialize["s3_bucket_path"] = o.S3BucketPath
	}
	if !IsNil(o.ExternalDeletedFlag) {
		toSerialize["external_deleted_flag"] = o.ExternalDeletedFlag
	}
	if !IsNil(o.MuaMessageId) {
		toSerialize["mua_message_id"] = o.MuaMessageId
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.ItemType) {
		toSerialize["item_type"] = o.ItemType
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	return toSerialize, nil
}

type NullableMailMessageItemForList struct {
	value *MailMessageItemForList
	isSet bool
}

func (v NullableMailMessageItemForList) Get() *MailMessageItemForList {
	return v.value
}

func (v *NullableMailMessageItemForList) Set(val *MailMessageItemForList) {
	v.value = val
	v.isSet = true
}

func (v NullableMailMessageItemForList) IsSet() bool {
	return v.isSet
}

func (v *NullableMailMessageItemForList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailMessageItemForList(val *MailMessageItemForList) *NullableMailMessageItemForList {
	return &NullableMailMessageItemForList{value: val, isSet: true}
}

func (v NullableMailMessageItemForList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailMessageItemForList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


