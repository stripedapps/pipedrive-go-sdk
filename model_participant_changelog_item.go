/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ParticipantChangelogItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipantChangelogItem{}

// ParticipantChangelogItem struct for ParticipantChangelogItem
type ParticipantChangelogItem struct {
	// The ID of the user
	ActorUserId *int32 `json:"actor_user_id,omitempty"`
	// The ID of the person
	PersonId *int32 `json:"person_id,omitempty"`
	// Deal participant action type
	Action *string `json:"action,omitempty"`
	// The deal participant action log time
	Time *string `json:"time,omitempty"`
}

// NewParticipantChangelogItem instantiates a new ParticipantChangelogItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipantChangelogItem() *ParticipantChangelogItem {
	this := ParticipantChangelogItem{}
	return &this
}

// NewParticipantChangelogItemWithDefaults instantiates a new ParticipantChangelogItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantChangelogItemWithDefaults() *ParticipantChangelogItem {
	this := ParticipantChangelogItem{}
	return &this
}

// GetActorUserId returns the ActorUserId field value if set, zero value otherwise.
func (o *ParticipantChangelogItem) GetActorUserId() int32 {
	if o == nil || IsNil(o.ActorUserId) {
		var ret int32
		return ret
	}
	return *o.ActorUserId
}

// GetActorUserIdOk returns a tuple with the ActorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantChangelogItem) GetActorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ActorUserId) {
		return nil, false
	}
	return o.ActorUserId, true
}

// HasActorUserId returns a boolean if a field has been set.
func (o *ParticipantChangelogItem) HasActorUserId() bool {
	if o != nil && !IsNil(o.ActorUserId) {
		return true
	}

	return false
}

// SetActorUserId gets a reference to the given int32 and assigns it to the ActorUserId field.
func (o *ParticipantChangelogItem) SetActorUserId(v int32) {
	o.ActorUserId = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *ParticipantChangelogItem) GetPersonId() int32 {
	if o == nil || IsNil(o.PersonId) {
		var ret int32
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantChangelogItem) GetPersonIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *ParticipantChangelogItem) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given int32 and assigns it to the PersonId field.
func (o *ParticipantChangelogItem) SetPersonId(v int32) {
	o.PersonId = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ParticipantChangelogItem) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantChangelogItem) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ParticipantChangelogItem) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ParticipantChangelogItem) SetAction(v string) {
	o.Action = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ParticipantChangelogItem) GetTime() string {
	if o == nil || IsNil(o.Time) {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantChangelogItem) GetTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ParticipantChangelogItem) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *ParticipantChangelogItem) SetTime(v string) {
	o.Time = &v
}

func (o ParticipantChangelogItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipantChangelogItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActorUserId) {
		toSerialize["actor_user_id"] = o.ActorUserId
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableParticipantChangelogItem struct {
	value *ParticipantChangelogItem
	isSet bool
}

func (v NullableParticipantChangelogItem) Get() *ParticipantChangelogItem {
	return v.value
}

func (v *NullableParticipantChangelogItem) Set(val *ParticipantChangelogItem) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipantChangelogItem) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipantChangelogItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipantChangelogItem(val *ParticipantChangelogItem) *NullableParticipantChangelogItem {
	return &NullableParticipantChangelogItem{value: val, isSet: true}
}

func (v NullableParticipantChangelogItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipantChangelogItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


