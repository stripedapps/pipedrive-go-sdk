/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListProductsResponse200AllOfDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProductsResponse200AllOfDataInner{}

// ListProductsResponse200AllOfDataInner struct for ListProductsResponse200AllOfDataInner
type ListProductsResponse200AllOfDataInner struct {
	// The ID of the deal-product (the ID of the product attached to the deal)
	Id *int32 `json:"id,omitempty"`
	// The ID of the deal
	DealId *int32 `json:"deal_id,omitempty"`
	// The order number of the product
	OrderNr *int32 `json:"order_nr,omitempty"`
	// The ID of the product
	ProductId *int32 `json:"product_id,omitempty"`
	// The ID of the product variation
	ProductVariationId NullableInt32 `json:"product_variation_id,omitempty"`
	// The price value of the product
	ItemPrice *int32 `json:"item_price,omitempty"`
	// The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
	Discount *float32 `json:"discount,omitempty"`
	// The type of the discount's value
	DiscountType *string `json:"discount_type,omitempty"`
	// The sum of all the products attached to the deal
	Sum *float32 `json:"sum,omitempty"`
	// The currency associated with the deal product
	Currency *string `json:"currency,omitempty"`
	// Whether the product is enabled or not
	EnabledFlag *bool `json:"enabled_flag,omitempty"`
	// The date and time when the product was added to the deal
	AddTime *string `json:"add_time,omitempty"`
	// The date and time when the deal product was last edited
	LastEdit *string `json:"last_edit,omitempty"`
	// The comments of the product
	Comments *string `json:"comments,omitempty"`
	// Whether the product is active or not
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// The product tax
	Tax *float32 `json:"tax,omitempty"`
	// The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal
	TaxMethod *string `json:"tax_method,omitempty"`
	// The product name
	Name *string `json:"name,omitempty"`
	// The formatted sum of the product
	SumFormatted *string `json:"sum_formatted,omitempty"`
	// The formatted quantity of the product
	QuantityFormatted *string `json:"quantity_formatted,omitempty"`
	// The quantity of the product
	Quantity *int32 `json:"quantity,omitempty"`
	Product *ListProductsResponse200AllOfDataInnerProduct `json:"product,omitempty"`
}

// NewListProductsResponse200AllOfDataInner instantiates a new ListProductsResponse200AllOfDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProductsResponse200AllOfDataInner() *ListProductsResponse200AllOfDataInner {
	this := ListProductsResponse200AllOfDataInner{}
	var discount float32 = 0
	this.Discount = &discount
	var discountType string = "percentage"
	this.DiscountType = &discountType
	return &this
}

// NewListProductsResponse200AllOfDataInnerWithDefaults instantiates a new ListProductsResponse200AllOfDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProductsResponse200AllOfDataInnerWithDefaults() *ListProductsResponse200AllOfDataInner {
	this := ListProductsResponse200AllOfDataInner{}
	var discount float32 = 0
	this.Discount = &discount
	var discountType string = "percentage"
	this.DiscountType = &discountType
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ListProductsResponse200AllOfDataInner) SetId(v int32) {
	o.Id = &v
}

// GetDealId returns the DealId field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetDealId() int32 {
	if o == nil || IsNil(o.DealId) {
		var ret int32
		return ret
	}
	return *o.DealId
}

// GetDealIdOk returns a tuple with the DealId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetDealIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DealId) {
		return nil, false
	}
	return o.DealId, true
}

// HasDealId returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasDealId() bool {
	if o != nil && !IsNil(o.DealId) {
		return true
	}

	return false
}

// SetDealId gets a reference to the given int32 and assigns it to the DealId field.
func (o *ListProductsResponse200AllOfDataInner) SetDealId(v int32) {
	o.DealId = &v
}

// GetOrderNr returns the OrderNr field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetOrderNr() int32 {
	if o == nil || IsNil(o.OrderNr) {
		var ret int32
		return ret
	}
	return *o.OrderNr
}

// GetOrderNrOk returns a tuple with the OrderNr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetOrderNrOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderNr) {
		return nil, false
	}
	return o.OrderNr, true
}

// HasOrderNr returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasOrderNr() bool {
	if o != nil && !IsNil(o.OrderNr) {
		return true
	}

	return false
}

// SetOrderNr gets a reference to the given int32 and assigns it to the OrderNr field.
func (o *ListProductsResponse200AllOfDataInner) SetOrderNr(v int32) {
	o.OrderNr = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId) {
		var ret int32
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetProductIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int32 and assigns it to the ProductId field.
func (o *ListProductsResponse200AllOfDataInner) SetProductId(v int32) {
	o.ProductId = &v
}

// GetProductVariationId returns the ProductVariationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListProductsResponse200AllOfDataInner) GetProductVariationId() int32 {
	if o == nil || IsNil(o.ProductVariationId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductVariationId.Get()
}

// GetProductVariationIdOk returns a tuple with the ProductVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListProductsResponse200AllOfDataInner) GetProductVariationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductVariationId.Get(), o.ProductVariationId.IsSet()
}

// HasProductVariationId returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasProductVariationId() bool {
	if o != nil && o.ProductVariationId.IsSet() {
		return true
	}

	return false
}

// SetProductVariationId gets a reference to the given NullableInt32 and assigns it to the ProductVariationId field.
func (o *ListProductsResponse200AllOfDataInner) SetProductVariationId(v int32) {
	o.ProductVariationId.Set(&v)
}
// SetProductVariationIdNil sets the value for ProductVariationId to be an explicit nil
func (o *ListProductsResponse200AllOfDataInner) SetProductVariationIdNil() {
	o.ProductVariationId.Set(nil)
}

// UnsetProductVariationId ensures that no value is present for ProductVariationId, not even an explicit nil
func (o *ListProductsResponse200AllOfDataInner) UnsetProductVariationId() {
	o.ProductVariationId.Unset()
}

// GetItemPrice returns the ItemPrice field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetItemPrice() int32 {
	if o == nil || IsNil(o.ItemPrice) {
		var ret int32
		return ret
	}
	return *o.ItemPrice
}

// GetItemPriceOk returns a tuple with the ItemPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetItemPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemPrice) {
		return nil, false
	}
	return o.ItemPrice, true
}

// HasItemPrice returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasItemPrice() bool {
	if o != nil && !IsNil(o.ItemPrice) {
		return true
	}

	return false
}

// SetItemPrice gets a reference to the given int32 and assigns it to the ItemPrice field.
func (o *ListProductsResponse200AllOfDataInner) SetItemPrice(v int32) {
	o.ItemPrice = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetDiscount() float32 {
	if o == nil || IsNil(o.Discount) {
		var ret float32
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float32 and assigns it to the Discount field.
func (o *ListProductsResponse200AllOfDataInner) SetDiscount(v float32) {
	o.Discount = &v
}

// GetDiscountType returns the DiscountType field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetDiscountType() string {
	if o == nil || IsNil(o.DiscountType) {
		var ret string
		return ret
	}
	return *o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetDiscountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountType) {
		return nil, false
	}
	return o.DiscountType, true
}

// HasDiscountType returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasDiscountType() bool {
	if o != nil && !IsNil(o.DiscountType) {
		return true
	}

	return false
}

// SetDiscountType gets a reference to the given string and assigns it to the DiscountType field.
func (o *ListProductsResponse200AllOfDataInner) SetDiscountType(v string) {
	o.DiscountType = &v
}

// GetSum returns the Sum field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetSum() float32 {
	if o == nil || IsNil(o.Sum) {
		var ret float32
		return ret
	}
	return *o.Sum
}

// GetSumOk returns a tuple with the Sum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetSumOk() (*float32, bool) {
	if o == nil || IsNil(o.Sum) {
		return nil, false
	}
	return o.Sum, true
}

// HasSum returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasSum() bool {
	if o != nil && !IsNil(o.Sum) {
		return true
	}

	return false
}

// SetSum gets a reference to the given float32 and assigns it to the Sum field.
func (o *ListProductsResponse200AllOfDataInner) SetSum(v float32) {
	o.Sum = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *ListProductsResponse200AllOfDataInner) SetCurrency(v string) {
	o.Currency = &v
}

// GetEnabledFlag returns the EnabledFlag field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetEnabledFlag() bool {
	if o == nil || IsNil(o.EnabledFlag) {
		var ret bool
		return ret
	}
	return *o.EnabledFlag
}

// GetEnabledFlagOk returns a tuple with the EnabledFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetEnabledFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.EnabledFlag) {
		return nil, false
	}
	return o.EnabledFlag, true
}

// HasEnabledFlag returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasEnabledFlag() bool {
	if o != nil && !IsNil(o.EnabledFlag) {
		return true
	}

	return false
}

// SetEnabledFlag gets a reference to the given bool and assigns it to the EnabledFlag field.
func (o *ListProductsResponse200AllOfDataInner) SetEnabledFlag(v bool) {
	o.EnabledFlag = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *ListProductsResponse200AllOfDataInner) SetAddTime(v string) {
	o.AddTime = &v
}

// GetLastEdit returns the LastEdit field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetLastEdit() string {
	if o == nil || IsNil(o.LastEdit) {
		var ret string
		return ret
	}
	return *o.LastEdit
}

// GetLastEditOk returns a tuple with the LastEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetLastEditOk() (*string, bool) {
	if o == nil || IsNil(o.LastEdit) {
		return nil, false
	}
	return o.LastEdit, true
}

// HasLastEdit returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasLastEdit() bool {
	if o != nil && !IsNil(o.LastEdit) {
		return true
	}

	return false
}

// SetLastEdit gets a reference to the given string and assigns it to the LastEdit field.
func (o *ListProductsResponse200AllOfDataInner) SetLastEdit(v string) {
	o.LastEdit = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *ListProductsResponse200AllOfDataInner) SetComments(v string) {
	o.Comments = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *ListProductsResponse200AllOfDataInner) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetTax() float32 {
	if o == nil || IsNil(o.Tax) {
		var ret float32
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.Tax) {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasTax() bool {
	if o != nil && !IsNil(o.Tax) {
		return true
	}

	return false
}

// SetTax gets a reference to the given float32 and assigns it to the Tax field.
func (o *ListProductsResponse200AllOfDataInner) SetTax(v float32) {
	o.Tax = &v
}

// GetTaxMethod returns the TaxMethod field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetTaxMethod() string {
	if o == nil || IsNil(o.TaxMethod) {
		var ret string
		return ret
	}
	return *o.TaxMethod
}

// GetTaxMethodOk returns a tuple with the TaxMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetTaxMethodOk() (*string, bool) {
	if o == nil || IsNil(o.TaxMethod) {
		return nil, false
	}
	return o.TaxMethod, true
}

// HasTaxMethod returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasTaxMethod() bool {
	if o != nil && !IsNil(o.TaxMethod) {
		return true
	}

	return false
}

// SetTaxMethod gets a reference to the given string and assigns it to the TaxMethod field.
func (o *ListProductsResponse200AllOfDataInner) SetTaxMethod(v string) {
	o.TaxMethod = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListProductsResponse200AllOfDataInner) SetName(v string) {
	o.Name = &v
}

// GetSumFormatted returns the SumFormatted field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetSumFormatted() string {
	if o == nil || IsNil(o.SumFormatted) {
		var ret string
		return ret
	}
	return *o.SumFormatted
}

// GetSumFormattedOk returns a tuple with the SumFormatted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetSumFormattedOk() (*string, bool) {
	if o == nil || IsNil(o.SumFormatted) {
		return nil, false
	}
	return o.SumFormatted, true
}

// HasSumFormatted returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasSumFormatted() bool {
	if o != nil && !IsNil(o.SumFormatted) {
		return true
	}

	return false
}

// SetSumFormatted gets a reference to the given string and assigns it to the SumFormatted field.
func (o *ListProductsResponse200AllOfDataInner) SetSumFormatted(v string) {
	o.SumFormatted = &v
}

// GetQuantityFormatted returns the QuantityFormatted field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetQuantityFormatted() string {
	if o == nil || IsNil(o.QuantityFormatted) {
		var ret string
		return ret
	}
	return *o.QuantityFormatted
}

// GetQuantityFormattedOk returns a tuple with the QuantityFormatted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetQuantityFormattedOk() (*string, bool) {
	if o == nil || IsNil(o.QuantityFormatted) {
		return nil, false
	}
	return o.QuantityFormatted, true
}

// HasQuantityFormatted returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasQuantityFormatted() bool {
	if o != nil && !IsNil(o.QuantityFormatted) {
		return true
	}

	return false
}

// SetQuantityFormatted gets a reference to the given string and assigns it to the QuantityFormatted field.
func (o *ListProductsResponse200AllOfDataInner) SetQuantityFormatted(v string) {
	o.QuantityFormatted = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ListProductsResponse200AllOfDataInner) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *ListProductsResponse200AllOfDataInner) GetProduct() ListProductsResponse200AllOfDataInnerProduct {
	if o == nil || IsNil(o.Product) {
		var ret ListProductsResponse200AllOfDataInnerProduct
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse200AllOfDataInner) GetProductOk() (*ListProductsResponse200AllOfDataInnerProduct, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *ListProductsResponse200AllOfDataInner) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given ListProductsResponse200AllOfDataInnerProduct and assigns it to the Product field.
func (o *ListProductsResponse200AllOfDataInner) SetProduct(v ListProductsResponse200AllOfDataInnerProduct) {
	o.Product = &v
}

func (o ListProductsResponse200AllOfDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProductsResponse200AllOfDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.DealId) {
		toSerialize["deal_id"] = o.DealId
	}
	if !IsNil(o.OrderNr) {
		toSerialize["order_nr"] = o.OrderNr
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if o.ProductVariationId.IsSet() {
		toSerialize["product_variation_id"] = o.ProductVariationId.Get()
	}
	if !IsNil(o.ItemPrice) {
		toSerialize["item_price"] = o.ItemPrice
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.DiscountType) {
		toSerialize["discount_type"] = o.DiscountType
	}
	if !IsNil(o.Sum) {
		toSerialize["sum"] = o.Sum
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.EnabledFlag) {
		toSerialize["enabled_flag"] = o.EnabledFlag
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.LastEdit) {
		toSerialize["last_edit"] = o.LastEdit
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.Tax) {
		toSerialize["tax"] = o.Tax
	}
	if !IsNil(o.TaxMethod) {
		toSerialize["tax_method"] = o.TaxMethod
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SumFormatted) {
		toSerialize["sum_formatted"] = o.SumFormatted
	}
	if !IsNil(o.QuantityFormatted) {
		toSerialize["quantity_formatted"] = o.QuantityFormatted
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	return toSerialize, nil
}

type NullableListProductsResponse200AllOfDataInner struct {
	value *ListProductsResponse200AllOfDataInner
	isSet bool
}

func (v NullableListProductsResponse200AllOfDataInner) Get() *ListProductsResponse200AllOfDataInner {
	return v.value
}

func (v *NullableListProductsResponse200AllOfDataInner) Set(val *ListProductsResponse200AllOfDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListProductsResponse200AllOfDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListProductsResponse200AllOfDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProductsResponse200AllOfDataInner(val *ListProductsResponse200AllOfDataInner) *NullableListProductsResponse200AllOfDataInner {
	return &NullableListProductsResponse200AllOfDataInner{value: val, isSet: true}
}

func (v NullableListProductsResponse200AllOfDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProductsResponse200AllOfDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


