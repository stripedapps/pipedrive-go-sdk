/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddLeadLabelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddLeadLabelRequest{}

// AddLeadLabelRequest struct for AddLeadLabelRequest
type AddLeadLabelRequest struct {
	// The name of the lead label
	Name string `json:"name"`
	// The color of the label. Only a subset of colors can be used.
	Color string `json:"color"`
}

// NewAddLeadLabelRequest instantiates a new AddLeadLabelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddLeadLabelRequest(name string, color string) *AddLeadLabelRequest {
	this := AddLeadLabelRequest{}
	this.Name = name
	this.Color = color
	return &this
}

// NewAddLeadLabelRequestWithDefaults instantiates a new AddLeadLabelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddLeadLabelRequestWithDefaults() *AddLeadLabelRequest {
	this := AddLeadLabelRequest{}
	return &this
}

// GetName returns the Name field value
func (o *AddLeadLabelRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddLeadLabelRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddLeadLabelRequest) SetName(v string) {
	o.Name = v
}

// GetColor returns the Color field value
func (o *AddLeadLabelRequest) GetColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Color
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
func (o *AddLeadLabelRequest) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Color, true
}

// SetColor sets field value
func (o *AddLeadLabelRequest) SetColor(v string) {
	o.Color = v
}

func (o AddLeadLabelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddLeadLabelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["color"] = o.Color
	return toSerialize, nil
}

type NullableAddLeadLabelRequest struct {
	value *AddLeadLabelRequest
	isSet bool
}

func (v NullableAddLeadLabelRequest) Get() *AddLeadLabelRequest {
	return v.value
}

func (v *NullableAddLeadLabelRequest) Set(val *AddLeadLabelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddLeadLabelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddLeadLabelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddLeadLabelRequest(val *AddLeadLabelRequest) *NullableAddLeadLabelRequest {
	return &NullableAddLeadLabelRequest{value: val, isSet: true}
}

func (v NullableAddLeadLabelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddLeadLabelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


