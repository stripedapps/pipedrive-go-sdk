/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationItem{}

// OrganizationItem struct for OrganizationItem
type OrganizationItem struct {
	// The ID of the organization
	Id *int32 `json:"id,omitempty"`
	// The ID of the company related to the organization
	CompanyId *int32 `json:"company_id,omitempty"`
	OwnerId *Owner `json:"owner_id,omitempty"`
	// The name of the organization
	Name *string `json:"name,omitempty"`
	// Whether the organization is active or not
	ActiveFlag *bool `json:"active_flag,omitempty"`
	PictureId *BaseOrganizationItemAllOfPictureId `json:"picture_id,omitempty"`
	// The country code of the organization
	CountryCode *string `json:"country_code,omitempty"`
	// The first character of the organization name
	FirstChar *string `json:"first_char,omitempty"`
	// The creation date and time of the organization
	AddTime *string `json:"add_time,omitempty"`
	// The last updated date and time of the organization
	UpdateTime *string `json:"update_time,omitempty"`
	// The visibility group ID of who can see the organization
	VisibleTo *string `json:"visible_to,omitempty"`
	// The label assigned to the organization
	Label *int32 `json:"label,omitempty"`
	// The name of the organization owner
	OwnerName *string `json:"owner_name,omitempty"`
	// The BCC email associated with the organization
	CcEmail *string `json:"cc_email,omitempty"`
	// The count of email messages related to the organization
	EmailMessagesCount *int32 `json:"email_messages_count,omitempty"`
	// The count of persons related to the organization
	PeopleCount *int32 `json:"people_count,omitempty"`
	// The count of activities related to the organization
	ActivitiesCount *int32 `json:"activities_count,omitempty"`
	// The count of done activities related to the organization
	DoneActivitiesCount *int32 `json:"done_activities_count,omitempty"`
	// The count of undone activities related to the organization
	UndoneActivitiesCount *int32 `json:"undone_activities_count,omitempty"`
	// The count of files related to the organization
	FilesCount *int32 `json:"files_count,omitempty"`
	// The count of notes related to the organization
	NotesCount *int32 `json:"notes_count,omitempty"`
	// The count of followers related to the organization
	FollowersCount *int32 `json:"followers_count,omitempty"`
	// The full address of the organization
	Address *string `json:"address,omitempty"`
	// The sub-premise of the organization location
	AddressSubpremise *string `json:"address_subpremise,omitempty"`
	// The street number of the organization location
	AddressStreetNumber *string `json:"address_street_number,omitempty"`
	// The route of the organization location
	AddressRoute *string `json:"address_route,omitempty"`
	// The sub-locality of the organization location
	AddressSublocality *string `json:"address_sublocality,omitempty"`
	// The locality of the organization location
	AddressLocality *string `json:"address_locality,omitempty"`
	// The level 1 admin area of the organization location
	AddressAdminAreaLevel1 *string `json:"address_admin_area_level_1,omitempty"`
	// The level 2 admin area of the organization location
	AddressAdminAreaLevel2 *string `json:"address_admin_area_level_2,omitempty"`
	// The country of the organization location
	AddressCountry *string `json:"address_country,omitempty"`
	// The postal code of the organization location
	AddressPostalCode *string `json:"address_postal_code,omitempty"`
	// The formatted organization location
	AddressFormattedAddress *string `json:"address_formatted_address,omitempty"`
	// The count of open deals related with the item
	OpenDealsCount *int32 `json:"open_deals_count,omitempty"`
	// The count of related open deals related with the item
	RelatedOpenDealsCount *int32 `json:"related_open_deals_count,omitempty"`
	// The count of closed deals related with the item
	ClosedDealsCount *int32 `json:"closed_deals_count,omitempty"`
	// The count of related closed deals related with the item
	RelatedClosedDealsCount *int32 `json:"related_closed_deals_count,omitempty"`
	// The count of won deals related with the item
	WonDealsCount *int32 `json:"won_deals_count,omitempty"`
	// The count of related won deals related with the item
	RelatedWonDealsCount *int32 `json:"related_won_deals_count,omitempty"`
	// The count of lost deals related with the item
	LostDealsCount *int32 `json:"lost_deals_count,omitempty"`
	// The count of related lost deals related with the item
	RelatedLostDealsCount *int32 `json:"related_lost_deals_count,omitempty"`
	// The date of the next activity associated with the deal
	NextActivityDate NullableString `json:"next_activity_date,omitempty"`
	// The time of the next activity associated with the deal
	NextActivityTime NullableString `json:"next_activity_time,omitempty"`
	// The ID of the next activity associated with the deal
	NextActivityId NullableInt32 `json:"next_activity_id,omitempty"`
	// The ID of the last activity associated with the deal
	LastActivityId NullableInt32 `json:"last_activity_id,omitempty"`
	// The date of the last activity associated with the deal
	LastActivityDate NullableString `json:"last_activity_date,omitempty"`
	// If the company ID of the organization and company ID of the request is same or not
	EditName *bool `json:"edit_name,omitempty"`
	// Please refer to response schema of <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivity\">Activity</a>
	LastActivity map[string]interface{} `json:"last_activity,omitempty"`
	// Please refer to response schema of <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivity\">Activity</a>
	NextActivity map[string]interface{} `json:"next_activity,omitempty"`
}

// NewOrganizationItem instantiates a new OrganizationItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationItem() *OrganizationItem {
	this := OrganizationItem{}
	return &this
}

// NewOrganizationItemWithDefaults instantiates a new OrganizationItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationItemWithDefaults() *OrganizationItem {
	this := OrganizationItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationItem) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OrganizationItem) SetId(v int32) {
	o.Id = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *OrganizationItem) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *OrganizationItem) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *OrganizationItem) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *OrganizationItem) GetOwnerId() Owner {
	if o == nil || IsNil(o.OwnerId) {
		var ret Owner
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetOwnerIdOk() (*Owner, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *OrganizationItem) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given Owner and assigns it to the OwnerId field.
func (o *OrganizationItem) SetOwnerId(v Owner) {
	o.OwnerId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationItem) SetName(v string) {
	o.Name = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *OrganizationItem) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *OrganizationItem) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *OrganizationItem) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetPictureId returns the PictureId field value if set, zero value otherwise.
func (o *OrganizationItem) GetPictureId() BaseOrganizationItemAllOfPictureId {
	if o == nil || IsNil(o.PictureId) {
		var ret BaseOrganizationItemAllOfPictureId
		return ret
	}
	return *o.PictureId
}

// GetPictureIdOk returns a tuple with the PictureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetPictureIdOk() (*BaseOrganizationItemAllOfPictureId, bool) {
	if o == nil || IsNil(o.PictureId) {
		return nil, false
	}
	return o.PictureId, true
}

// HasPictureId returns a boolean if a field has been set.
func (o *OrganizationItem) HasPictureId() bool {
	if o != nil && !IsNil(o.PictureId) {
		return true
	}

	return false
}

// SetPictureId gets a reference to the given BaseOrganizationItemAllOfPictureId and assigns it to the PictureId field.
func (o *OrganizationItem) SetPictureId(v BaseOrganizationItemAllOfPictureId) {
	o.PictureId = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *OrganizationItem) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *OrganizationItem) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *OrganizationItem) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetFirstChar returns the FirstChar field value if set, zero value otherwise.
func (o *OrganizationItem) GetFirstChar() string {
	if o == nil || IsNil(o.FirstChar) {
		var ret string
		return ret
	}
	return *o.FirstChar
}

// GetFirstCharOk returns a tuple with the FirstChar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetFirstCharOk() (*string, bool) {
	if o == nil || IsNil(o.FirstChar) {
		return nil, false
	}
	return o.FirstChar, true
}

// HasFirstChar returns a boolean if a field has been set.
func (o *OrganizationItem) HasFirstChar() bool {
	if o != nil && !IsNil(o.FirstChar) {
		return true
	}

	return false
}

// SetFirstChar gets a reference to the given string and assigns it to the FirstChar field.
func (o *OrganizationItem) SetFirstChar(v string) {
	o.FirstChar = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *OrganizationItem) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *OrganizationItem) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *OrganizationItem) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *OrganizationItem) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *OrganizationItem) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *OrganizationItem) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *OrganizationItem) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *OrganizationItem) GetLabel() int32 {
	if o == nil || IsNil(o.Label) {
		var ret int32
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetLabelOk() (*int32, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *OrganizationItem) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given int32 and assigns it to the Label field.
func (o *OrganizationItem) SetLabel(v int32) {
	o.Label = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *OrganizationItem) GetOwnerName() string {
	if o == nil || IsNil(o.OwnerName) {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerName) {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *OrganizationItem) HasOwnerName() bool {
	if o != nil && !IsNil(o.OwnerName) {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *OrganizationItem) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetCcEmail returns the CcEmail field value if set, zero value otherwise.
func (o *OrganizationItem) GetCcEmail() string {
	if o == nil || IsNil(o.CcEmail) {
		var ret string
		return ret
	}
	return *o.CcEmail
}

// GetCcEmailOk returns a tuple with the CcEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetCcEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CcEmail) {
		return nil, false
	}
	return o.CcEmail, true
}

// HasCcEmail returns a boolean if a field has been set.
func (o *OrganizationItem) HasCcEmail() bool {
	if o != nil && !IsNil(o.CcEmail) {
		return true
	}

	return false
}

// SetCcEmail gets a reference to the given string and assigns it to the CcEmail field.
func (o *OrganizationItem) SetCcEmail(v string) {
	o.CcEmail = &v
}

// GetEmailMessagesCount returns the EmailMessagesCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetEmailMessagesCount() int32 {
	if o == nil || IsNil(o.EmailMessagesCount) {
		var ret int32
		return ret
	}
	return *o.EmailMessagesCount
}

// GetEmailMessagesCountOk returns a tuple with the EmailMessagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetEmailMessagesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailMessagesCount) {
		return nil, false
	}
	return o.EmailMessagesCount, true
}

// HasEmailMessagesCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasEmailMessagesCount() bool {
	if o != nil && !IsNil(o.EmailMessagesCount) {
		return true
	}

	return false
}

// SetEmailMessagesCount gets a reference to the given int32 and assigns it to the EmailMessagesCount field.
func (o *OrganizationItem) SetEmailMessagesCount(v int32) {
	o.EmailMessagesCount = &v
}

// GetPeopleCount returns the PeopleCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetPeopleCount() int32 {
	if o == nil || IsNil(o.PeopleCount) {
		var ret int32
		return ret
	}
	return *o.PeopleCount
}

// GetPeopleCountOk returns a tuple with the PeopleCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetPeopleCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PeopleCount) {
		return nil, false
	}
	return o.PeopleCount, true
}

// HasPeopleCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasPeopleCount() bool {
	if o != nil && !IsNil(o.PeopleCount) {
		return true
	}

	return false
}

// SetPeopleCount gets a reference to the given int32 and assigns it to the PeopleCount field.
func (o *OrganizationItem) SetPeopleCount(v int32) {
	o.PeopleCount = &v
}

// GetActivitiesCount returns the ActivitiesCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetActivitiesCount() int32 {
	if o == nil || IsNil(o.ActivitiesCount) {
		var ret int32
		return ret
	}
	return *o.ActivitiesCount
}

// GetActivitiesCountOk returns a tuple with the ActivitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetActivitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ActivitiesCount) {
		return nil, false
	}
	return o.ActivitiesCount, true
}

// HasActivitiesCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasActivitiesCount() bool {
	if o != nil && !IsNil(o.ActivitiesCount) {
		return true
	}

	return false
}

// SetActivitiesCount gets a reference to the given int32 and assigns it to the ActivitiesCount field.
func (o *OrganizationItem) SetActivitiesCount(v int32) {
	o.ActivitiesCount = &v
}

// GetDoneActivitiesCount returns the DoneActivitiesCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetDoneActivitiesCount() int32 {
	if o == nil || IsNil(o.DoneActivitiesCount) {
		var ret int32
		return ret
	}
	return *o.DoneActivitiesCount
}

// GetDoneActivitiesCountOk returns a tuple with the DoneActivitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetDoneActivitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DoneActivitiesCount) {
		return nil, false
	}
	return o.DoneActivitiesCount, true
}

// HasDoneActivitiesCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasDoneActivitiesCount() bool {
	if o != nil && !IsNil(o.DoneActivitiesCount) {
		return true
	}

	return false
}

// SetDoneActivitiesCount gets a reference to the given int32 and assigns it to the DoneActivitiesCount field.
func (o *OrganizationItem) SetDoneActivitiesCount(v int32) {
	o.DoneActivitiesCount = &v
}

// GetUndoneActivitiesCount returns the UndoneActivitiesCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetUndoneActivitiesCount() int32 {
	if o == nil || IsNil(o.UndoneActivitiesCount) {
		var ret int32
		return ret
	}
	return *o.UndoneActivitiesCount
}

// GetUndoneActivitiesCountOk returns a tuple with the UndoneActivitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetUndoneActivitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UndoneActivitiesCount) {
		return nil, false
	}
	return o.UndoneActivitiesCount, true
}

// HasUndoneActivitiesCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasUndoneActivitiesCount() bool {
	if o != nil && !IsNil(o.UndoneActivitiesCount) {
		return true
	}

	return false
}

// SetUndoneActivitiesCount gets a reference to the given int32 and assigns it to the UndoneActivitiesCount field.
func (o *OrganizationItem) SetUndoneActivitiesCount(v int32) {
	o.UndoneActivitiesCount = &v
}

// GetFilesCount returns the FilesCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetFilesCount() int32 {
	if o == nil || IsNil(o.FilesCount) {
		var ret int32
		return ret
	}
	return *o.FilesCount
}

// GetFilesCountOk returns a tuple with the FilesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetFilesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FilesCount) {
		return nil, false
	}
	return o.FilesCount, true
}

// HasFilesCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasFilesCount() bool {
	if o != nil && !IsNil(o.FilesCount) {
		return true
	}

	return false
}

// SetFilesCount gets a reference to the given int32 and assigns it to the FilesCount field.
func (o *OrganizationItem) SetFilesCount(v int32) {
	o.FilesCount = &v
}

// GetNotesCount returns the NotesCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetNotesCount() int32 {
	if o == nil || IsNil(o.NotesCount) {
		var ret int32
		return ret
	}
	return *o.NotesCount
}

// GetNotesCountOk returns a tuple with the NotesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetNotesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NotesCount) {
		return nil, false
	}
	return o.NotesCount, true
}

// HasNotesCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasNotesCount() bool {
	if o != nil && !IsNil(o.NotesCount) {
		return true
	}

	return false
}

// SetNotesCount gets a reference to the given int32 and assigns it to the NotesCount field.
func (o *OrganizationItem) SetNotesCount(v int32) {
	o.NotesCount = &v
}

// GetFollowersCount returns the FollowersCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetFollowersCount() int32 {
	if o == nil || IsNil(o.FollowersCount) {
		var ret int32
		return ret
	}
	return *o.FollowersCount
}

// GetFollowersCountOk returns a tuple with the FollowersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetFollowersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FollowersCount) {
		return nil, false
	}
	return o.FollowersCount, true
}

// HasFollowersCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasFollowersCount() bool {
	if o != nil && !IsNil(o.FollowersCount) {
		return true
	}

	return false
}

// SetFollowersCount gets a reference to the given int32 and assigns it to the FollowersCount field.
func (o *OrganizationItem) SetFollowersCount(v int32) {
	o.FollowersCount = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *OrganizationItem) SetAddress(v string) {
	o.Address = &v
}

// GetAddressSubpremise returns the AddressSubpremise field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressSubpremise() string {
	if o == nil || IsNil(o.AddressSubpremise) {
		var ret string
		return ret
	}
	return *o.AddressSubpremise
}

// GetAddressSubpremiseOk returns a tuple with the AddressSubpremise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressSubpremiseOk() (*string, bool) {
	if o == nil || IsNil(o.AddressSubpremise) {
		return nil, false
	}
	return o.AddressSubpremise, true
}

// HasAddressSubpremise returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressSubpremise() bool {
	if o != nil && !IsNil(o.AddressSubpremise) {
		return true
	}

	return false
}

// SetAddressSubpremise gets a reference to the given string and assigns it to the AddressSubpremise field.
func (o *OrganizationItem) SetAddressSubpremise(v string) {
	o.AddressSubpremise = &v
}

// GetAddressStreetNumber returns the AddressStreetNumber field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressStreetNumber() string {
	if o == nil || IsNil(o.AddressStreetNumber) {
		var ret string
		return ret
	}
	return *o.AddressStreetNumber
}

// GetAddressStreetNumberOk returns a tuple with the AddressStreetNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressStreetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AddressStreetNumber) {
		return nil, false
	}
	return o.AddressStreetNumber, true
}

// HasAddressStreetNumber returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressStreetNumber() bool {
	if o != nil && !IsNil(o.AddressStreetNumber) {
		return true
	}

	return false
}

// SetAddressStreetNumber gets a reference to the given string and assigns it to the AddressStreetNumber field.
func (o *OrganizationItem) SetAddressStreetNumber(v string) {
	o.AddressStreetNumber = &v
}

// GetAddressRoute returns the AddressRoute field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressRoute() string {
	if o == nil || IsNil(o.AddressRoute) {
		var ret string
		return ret
	}
	return *o.AddressRoute
}

// GetAddressRouteOk returns a tuple with the AddressRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressRouteOk() (*string, bool) {
	if o == nil || IsNil(o.AddressRoute) {
		return nil, false
	}
	return o.AddressRoute, true
}

// HasAddressRoute returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressRoute() bool {
	if o != nil && !IsNil(o.AddressRoute) {
		return true
	}

	return false
}

// SetAddressRoute gets a reference to the given string and assigns it to the AddressRoute field.
func (o *OrganizationItem) SetAddressRoute(v string) {
	o.AddressRoute = &v
}

// GetAddressSublocality returns the AddressSublocality field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressSublocality() string {
	if o == nil || IsNil(o.AddressSublocality) {
		var ret string
		return ret
	}
	return *o.AddressSublocality
}

// GetAddressSublocalityOk returns a tuple with the AddressSublocality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressSublocalityOk() (*string, bool) {
	if o == nil || IsNil(o.AddressSublocality) {
		return nil, false
	}
	return o.AddressSublocality, true
}

// HasAddressSublocality returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressSublocality() bool {
	if o != nil && !IsNil(o.AddressSublocality) {
		return true
	}

	return false
}

// SetAddressSublocality gets a reference to the given string and assigns it to the AddressSublocality field.
func (o *OrganizationItem) SetAddressSublocality(v string) {
	o.AddressSublocality = &v
}

// GetAddressLocality returns the AddressLocality field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressLocality() string {
	if o == nil || IsNil(o.AddressLocality) {
		var ret string
		return ret
	}
	return *o.AddressLocality
}

// GetAddressLocalityOk returns a tuple with the AddressLocality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressLocalityOk() (*string, bool) {
	if o == nil || IsNil(o.AddressLocality) {
		return nil, false
	}
	return o.AddressLocality, true
}

// HasAddressLocality returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressLocality() bool {
	if o != nil && !IsNil(o.AddressLocality) {
		return true
	}

	return false
}

// SetAddressLocality gets a reference to the given string and assigns it to the AddressLocality field.
func (o *OrganizationItem) SetAddressLocality(v string) {
	o.AddressLocality = &v
}

// GetAddressAdminAreaLevel1 returns the AddressAdminAreaLevel1 field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressAdminAreaLevel1() string {
	if o == nil || IsNil(o.AddressAdminAreaLevel1) {
		var ret string
		return ret
	}
	return *o.AddressAdminAreaLevel1
}

// GetAddressAdminAreaLevel1Ok returns a tuple with the AddressAdminAreaLevel1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressAdminAreaLevel1Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressAdminAreaLevel1) {
		return nil, false
	}
	return o.AddressAdminAreaLevel1, true
}

// HasAddressAdminAreaLevel1 returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressAdminAreaLevel1() bool {
	if o != nil && !IsNil(o.AddressAdminAreaLevel1) {
		return true
	}

	return false
}

// SetAddressAdminAreaLevel1 gets a reference to the given string and assigns it to the AddressAdminAreaLevel1 field.
func (o *OrganizationItem) SetAddressAdminAreaLevel1(v string) {
	o.AddressAdminAreaLevel1 = &v
}

// GetAddressAdminAreaLevel2 returns the AddressAdminAreaLevel2 field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressAdminAreaLevel2() string {
	if o == nil || IsNil(o.AddressAdminAreaLevel2) {
		var ret string
		return ret
	}
	return *o.AddressAdminAreaLevel2
}

// GetAddressAdminAreaLevel2Ok returns a tuple with the AddressAdminAreaLevel2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressAdminAreaLevel2Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressAdminAreaLevel2) {
		return nil, false
	}
	return o.AddressAdminAreaLevel2, true
}

// HasAddressAdminAreaLevel2 returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressAdminAreaLevel2() bool {
	if o != nil && !IsNil(o.AddressAdminAreaLevel2) {
		return true
	}

	return false
}

// SetAddressAdminAreaLevel2 gets a reference to the given string and assigns it to the AddressAdminAreaLevel2 field.
func (o *OrganizationItem) SetAddressAdminAreaLevel2(v string) {
	o.AddressAdminAreaLevel2 = &v
}

// GetAddressCountry returns the AddressCountry field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressCountry() string {
	if o == nil || IsNil(o.AddressCountry) {
		var ret string
		return ret
	}
	return *o.AddressCountry
}

// GetAddressCountryOk returns a tuple with the AddressCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressCountryOk() (*string, bool) {
	if o == nil || IsNil(o.AddressCountry) {
		return nil, false
	}
	return o.AddressCountry, true
}

// HasAddressCountry returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressCountry() bool {
	if o != nil && !IsNil(o.AddressCountry) {
		return true
	}

	return false
}

// SetAddressCountry gets a reference to the given string and assigns it to the AddressCountry field.
func (o *OrganizationItem) SetAddressCountry(v string) {
	o.AddressCountry = &v
}

// GetAddressPostalCode returns the AddressPostalCode field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressPostalCode() string {
	if o == nil || IsNil(o.AddressPostalCode) {
		var ret string
		return ret
	}
	return *o.AddressPostalCode
}

// GetAddressPostalCodeOk returns a tuple with the AddressPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AddressPostalCode) {
		return nil, false
	}
	return o.AddressPostalCode, true
}

// HasAddressPostalCode returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressPostalCode() bool {
	if o != nil && !IsNil(o.AddressPostalCode) {
		return true
	}

	return false
}

// SetAddressPostalCode gets a reference to the given string and assigns it to the AddressPostalCode field.
func (o *OrganizationItem) SetAddressPostalCode(v string) {
	o.AddressPostalCode = &v
}

// GetAddressFormattedAddress returns the AddressFormattedAddress field value if set, zero value otherwise.
func (o *OrganizationItem) GetAddressFormattedAddress() string {
	if o == nil || IsNil(o.AddressFormattedAddress) {
		var ret string
		return ret
	}
	return *o.AddressFormattedAddress
}

// GetAddressFormattedAddressOk returns a tuple with the AddressFormattedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetAddressFormattedAddressOk() (*string, bool) {
	if o == nil || IsNil(o.AddressFormattedAddress) {
		return nil, false
	}
	return o.AddressFormattedAddress, true
}

// HasAddressFormattedAddress returns a boolean if a field has been set.
func (o *OrganizationItem) HasAddressFormattedAddress() bool {
	if o != nil && !IsNil(o.AddressFormattedAddress) {
		return true
	}

	return false
}

// SetAddressFormattedAddress gets a reference to the given string and assigns it to the AddressFormattedAddress field.
func (o *OrganizationItem) SetAddressFormattedAddress(v string) {
	o.AddressFormattedAddress = &v
}

// GetOpenDealsCount returns the OpenDealsCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetOpenDealsCount() int32 {
	if o == nil || IsNil(o.OpenDealsCount) {
		var ret int32
		return ret
	}
	return *o.OpenDealsCount
}

// GetOpenDealsCountOk returns a tuple with the OpenDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetOpenDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.OpenDealsCount) {
		return nil, false
	}
	return o.OpenDealsCount, true
}

// HasOpenDealsCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasOpenDealsCount() bool {
	if o != nil && !IsNil(o.OpenDealsCount) {
		return true
	}

	return false
}

// SetOpenDealsCount gets a reference to the given int32 and assigns it to the OpenDealsCount field.
func (o *OrganizationItem) SetOpenDealsCount(v int32) {
	o.OpenDealsCount = &v
}

// GetRelatedOpenDealsCount returns the RelatedOpenDealsCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetRelatedOpenDealsCount() int32 {
	if o == nil || IsNil(o.RelatedOpenDealsCount) {
		var ret int32
		return ret
	}
	return *o.RelatedOpenDealsCount
}

// GetRelatedOpenDealsCountOk returns a tuple with the RelatedOpenDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetRelatedOpenDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedOpenDealsCount) {
		return nil, false
	}
	return o.RelatedOpenDealsCount, true
}

// HasRelatedOpenDealsCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasRelatedOpenDealsCount() bool {
	if o != nil && !IsNil(o.RelatedOpenDealsCount) {
		return true
	}

	return false
}

// SetRelatedOpenDealsCount gets a reference to the given int32 and assigns it to the RelatedOpenDealsCount field.
func (o *OrganizationItem) SetRelatedOpenDealsCount(v int32) {
	o.RelatedOpenDealsCount = &v
}

// GetClosedDealsCount returns the ClosedDealsCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetClosedDealsCount() int32 {
	if o == nil || IsNil(o.ClosedDealsCount) {
		var ret int32
		return ret
	}
	return *o.ClosedDealsCount
}

// GetClosedDealsCountOk returns a tuple with the ClosedDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetClosedDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ClosedDealsCount) {
		return nil, false
	}
	return o.ClosedDealsCount, true
}

// HasClosedDealsCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasClosedDealsCount() bool {
	if o != nil && !IsNil(o.ClosedDealsCount) {
		return true
	}

	return false
}

// SetClosedDealsCount gets a reference to the given int32 and assigns it to the ClosedDealsCount field.
func (o *OrganizationItem) SetClosedDealsCount(v int32) {
	o.ClosedDealsCount = &v
}

// GetRelatedClosedDealsCount returns the RelatedClosedDealsCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetRelatedClosedDealsCount() int32 {
	if o == nil || IsNil(o.RelatedClosedDealsCount) {
		var ret int32
		return ret
	}
	return *o.RelatedClosedDealsCount
}

// GetRelatedClosedDealsCountOk returns a tuple with the RelatedClosedDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetRelatedClosedDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedClosedDealsCount) {
		return nil, false
	}
	return o.RelatedClosedDealsCount, true
}

// HasRelatedClosedDealsCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasRelatedClosedDealsCount() bool {
	if o != nil && !IsNil(o.RelatedClosedDealsCount) {
		return true
	}

	return false
}

// SetRelatedClosedDealsCount gets a reference to the given int32 and assigns it to the RelatedClosedDealsCount field.
func (o *OrganizationItem) SetRelatedClosedDealsCount(v int32) {
	o.RelatedClosedDealsCount = &v
}

// GetWonDealsCount returns the WonDealsCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetWonDealsCount() int32 {
	if o == nil || IsNil(o.WonDealsCount) {
		var ret int32
		return ret
	}
	return *o.WonDealsCount
}

// GetWonDealsCountOk returns a tuple with the WonDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetWonDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WonDealsCount) {
		return nil, false
	}
	return o.WonDealsCount, true
}

// HasWonDealsCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasWonDealsCount() bool {
	if o != nil && !IsNil(o.WonDealsCount) {
		return true
	}

	return false
}

// SetWonDealsCount gets a reference to the given int32 and assigns it to the WonDealsCount field.
func (o *OrganizationItem) SetWonDealsCount(v int32) {
	o.WonDealsCount = &v
}

// GetRelatedWonDealsCount returns the RelatedWonDealsCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetRelatedWonDealsCount() int32 {
	if o == nil || IsNil(o.RelatedWonDealsCount) {
		var ret int32
		return ret
	}
	return *o.RelatedWonDealsCount
}

// GetRelatedWonDealsCountOk returns a tuple with the RelatedWonDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetRelatedWonDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedWonDealsCount) {
		return nil, false
	}
	return o.RelatedWonDealsCount, true
}

// HasRelatedWonDealsCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasRelatedWonDealsCount() bool {
	if o != nil && !IsNil(o.RelatedWonDealsCount) {
		return true
	}

	return false
}

// SetRelatedWonDealsCount gets a reference to the given int32 and assigns it to the RelatedWonDealsCount field.
func (o *OrganizationItem) SetRelatedWonDealsCount(v int32) {
	o.RelatedWonDealsCount = &v
}

// GetLostDealsCount returns the LostDealsCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetLostDealsCount() int32 {
	if o == nil || IsNil(o.LostDealsCount) {
		var ret int32
		return ret
	}
	return *o.LostDealsCount
}

// GetLostDealsCountOk returns a tuple with the LostDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetLostDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.LostDealsCount) {
		return nil, false
	}
	return o.LostDealsCount, true
}

// HasLostDealsCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasLostDealsCount() bool {
	if o != nil && !IsNil(o.LostDealsCount) {
		return true
	}

	return false
}

// SetLostDealsCount gets a reference to the given int32 and assigns it to the LostDealsCount field.
func (o *OrganizationItem) SetLostDealsCount(v int32) {
	o.LostDealsCount = &v
}

// GetRelatedLostDealsCount returns the RelatedLostDealsCount field value if set, zero value otherwise.
func (o *OrganizationItem) GetRelatedLostDealsCount() int32 {
	if o == nil || IsNil(o.RelatedLostDealsCount) {
		var ret int32
		return ret
	}
	return *o.RelatedLostDealsCount
}

// GetRelatedLostDealsCountOk returns a tuple with the RelatedLostDealsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetRelatedLostDealsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedLostDealsCount) {
		return nil, false
	}
	return o.RelatedLostDealsCount, true
}

// HasRelatedLostDealsCount returns a boolean if a field has been set.
func (o *OrganizationItem) HasRelatedLostDealsCount() bool {
	if o != nil && !IsNil(o.RelatedLostDealsCount) {
		return true
	}

	return false
}

// SetRelatedLostDealsCount gets a reference to the given int32 and assigns it to the RelatedLostDealsCount field.
func (o *OrganizationItem) SetRelatedLostDealsCount(v int32) {
	o.RelatedLostDealsCount = &v
}

// GetNextActivityDate returns the NextActivityDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationItem) GetNextActivityDate() string {
	if o == nil || IsNil(o.NextActivityDate.Get()) {
		var ret string
		return ret
	}
	return *o.NextActivityDate.Get()
}

// GetNextActivityDateOk returns a tuple with the NextActivityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationItem) GetNextActivityDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextActivityDate.Get(), o.NextActivityDate.IsSet()
}

// HasNextActivityDate returns a boolean if a field has been set.
func (o *OrganizationItem) HasNextActivityDate() bool {
	if o != nil && o.NextActivityDate.IsSet() {
		return true
	}

	return false
}

// SetNextActivityDate gets a reference to the given NullableString and assigns it to the NextActivityDate field.
func (o *OrganizationItem) SetNextActivityDate(v string) {
	o.NextActivityDate.Set(&v)
}
// SetNextActivityDateNil sets the value for NextActivityDate to be an explicit nil
func (o *OrganizationItem) SetNextActivityDateNil() {
	o.NextActivityDate.Set(nil)
}

// UnsetNextActivityDate ensures that no value is present for NextActivityDate, not even an explicit nil
func (o *OrganizationItem) UnsetNextActivityDate() {
	o.NextActivityDate.Unset()
}

// GetNextActivityTime returns the NextActivityTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationItem) GetNextActivityTime() string {
	if o == nil || IsNil(o.NextActivityTime.Get()) {
		var ret string
		return ret
	}
	return *o.NextActivityTime.Get()
}

// GetNextActivityTimeOk returns a tuple with the NextActivityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationItem) GetNextActivityTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextActivityTime.Get(), o.NextActivityTime.IsSet()
}

// HasNextActivityTime returns a boolean if a field has been set.
func (o *OrganizationItem) HasNextActivityTime() bool {
	if o != nil && o.NextActivityTime.IsSet() {
		return true
	}

	return false
}

// SetNextActivityTime gets a reference to the given NullableString and assigns it to the NextActivityTime field.
func (o *OrganizationItem) SetNextActivityTime(v string) {
	o.NextActivityTime.Set(&v)
}
// SetNextActivityTimeNil sets the value for NextActivityTime to be an explicit nil
func (o *OrganizationItem) SetNextActivityTimeNil() {
	o.NextActivityTime.Set(nil)
}

// UnsetNextActivityTime ensures that no value is present for NextActivityTime, not even an explicit nil
func (o *OrganizationItem) UnsetNextActivityTime() {
	o.NextActivityTime.Unset()
}

// GetNextActivityId returns the NextActivityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationItem) GetNextActivityId() int32 {
	if o == nil || IsNil(o.NextActivityId.Get()) {
		var ret int32
		return ret
	}
	return *o.NextActivityId.Get()
}

// GetNextActivityIdOk returns a tuple with the NextActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationItem) GetNextActivityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextActivityId.Get(), o.NextActivityId.IsSet()
}

// HasNextActivityId returns a boolean if a field has been set.
func (o *OrganizationItem) HasNextActivityId() bool {
	if o != nil && o.NextActivityId.IsSet() {
		return true
	}

	return false
}

// SetNextActivityId gets a reference to the given NullableInt32 and assigns it to the NextActivityId field.
func (o *OrganizationItem) SetNextActivityId(v int32) {
	o.NextActivityId.Set(&v)
}
// SetNextActivityIdNil sets the value for NextActivityId to be an explicit nil
func (o *OrganizationItem) SetNextActivityIdNil() {
	o.NextActivityId.Set(nil)
}

// UnsetNextActivityId ensures that no value is present for NextActivityId, not even an explicit nil
func (o *OrganizationItem) UnsetNextActivityId() {
	o.NextActivityId.Unset()
}

// GetLastActivityId returns the LastActivityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationItem) GetLastActivityId() int32 {
	if o == nil || IsNil(o.LastActivityId.Get()) {
		var ret int32
		return ret
	}
	return *o.LastActivityId.Get()
}

// GetLastActivityIdOk returns a tuple with the LastActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationItem) GetLastActivityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastActivityId.Get(), o.LastActivityId.IsSet()
}

// HasLastActivityId returns a boolean if a field has been set.
func (o *OrganizationItem) HasLastActivityId() bool {
	if o != nil && o.LastActivityId.IsSet() {
		return true
	}

	return false
}

// SetLastActivityId gets a reference to the given NullableInt32 and assigns it to the LastActivityId field.
func (o *OrganizationItem) SetLastActivityId(v int32) {
	o.LastActivityId.Set(&v)
}
// SetLastActivityIdNil sets the value for LastActivityId to be an explicit nil
func (o *OrganizationItem) SetLastActivityIdNil() {
	o.LastActivityId.Set(nil)
}

// UnsetLastActivityId ensures that no value is present for LastActivityId, not even an explicit nil
func (o *OrganizationItem) UnsetLastActivityId() {
	o.LastActivityId.Unset()
}

// GetLastActivityDate returns the LastActivityDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationItem) GetLastActivityDate() string {
	if o == nil || IsNil(o.LastActivityDate.Get()) {
		var ret string
		return ret
	}
	return *o.LastActivityDate.Get()
}

// GetLastActivityDateOk returns a tuple with the LastActivityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationItem) GetLastActivityDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastActivityDate.Get(), o.LastActivityDate.IsSet()
}

// HasLastActivityDate returns a boolean if a field has been set.
func (o *OrganizationItem) HasLastActivityDate() bool {
	if o != nil && o.LastActivityDate.IsSet() {
		return true
	}

	return false
}

// SetLastActivityDate gets a reference to the given NullableString and assigns it to the LastActivityDate field.
func (o *OrganizationItem) SetLastActivityDate(v string) {
	o.LastActivityDate.Set(&v)
}
// SetLastActivityDateNil sets the value for LastActivityDate to be an explicit nil
func (o *OrganizationItem) SetLastActivityDateNil() {
	o.LastActivityDate.Set(nil)
}

// UnsetLastActivityDate ensures that no value is present for LastActivityDate, not even an explicit nil
func (o *OrganizationItem) UnsetLastActivityDate() {
	o.LastActivityDate.Unset()
}

// GetEditName returns the EditName field value if set, zero value otherwise.
func (o *OrganizationItem) GetEditName() bool {
	if o == nil || IsNil(o.EditName) {
		var ret bool
		return ret
	}
	return *o.EditName
}

// GetEditNameOk returns a tuple with the EditName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItem) GetEditNameOk() (*bool, bool) {
	if o == nil || IsNil(o.EditName) {
		return nil, false
	}
	return o.EditName, true
}

// HasEditName returns a boolean if a field has been set.
func (o *OrganizationItem) HasEditName() bool {
	if o != nil && !IsNil(o.EditName) {
		return true
	}

	return false
}

// SetEditName gets a reference to the given bool and assigns it to the EditName field.
func (o *OrganizationItem) SetEditName(v bool) {
	o.EditName = &v
}

// GetLastActivity returns the LastActivity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationItem) GetLastActivity() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.LastActivity
}

// GetLastActivityOk returns a tuple with the LastActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationItem) GetLastActivityOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.LastActivity) {
		return map[string]interface{}{}, false
	}
	return o.LastActivity, true
}

// HasLastActivity returns a boolean if a field has been set.
func (o *OrganizationItem) HasLastActivity() bool {
	if o != nil && IsNil(o.LastActivity) {
		return true
	}

	return false
}

// SetLastActivity gets a reference to the given map[string]interface{} and assigns it to the LastActivity field.
func (o *OrganizationItem) SetLastActivity(v map[string]interface{}) {
	o.LastActivity = v
}

// GetNextActivity returns the NextActivity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationItem) GetNextActivity() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.NextActivity
}

// GetNextActivityOk returns a tuple with the NextActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationItem) GetNextActivityOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.NextActivity) {
		return map[string]interface{}{}, false
	}
	return o.NextActivity, true
}

// HasNextActivity returns a boolean if a field has been set.
func (o *OrganizationItem) HasNextActivity() bool {
	if o != nil && IsNil(o.NextActivity) {
		return true
	}

	return false
}

// SetNextActivity gets a reference to the given map[string]interface{} and assigns it to the NextActivity field.
func (o *OrganizationItem) SetNextActivity(v map[string]interface{}) {
	o.NextActivity = v
}

func (o OrganizationItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.PictureId) {
		toSerialize["picture_id"] = o.PictureId
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.FirstChar) {
		toSerialize["first_char"] = o.FirstChar
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.OwnerName) {
		toSerialize["owner_name"] = o.OwnerName
	}
	if !IsNil(o.CcEmail) {
		toSerialize["cc_email"] = o.CcEmail
	}
	if !IsNil(o.EmailMessagesCount) {
		toSerialize["email_messages_count"] = o.EmailMessagesCount
	}
	if !IsNil(o.PeopleCount) {
		toSerialize["people_count"] = o.PeopleCount
	}
	if !IsNil(o.ActivitiesCount) {
		toSerialize["activities_count"] = o.ActivitiesCount
	}
	if !IsNil(o.DoneActivitiesCount) {
		toSerialize["done_activities_count"] = o.DoneActivitiesCount
	}
	if !IsNil(o.UndoneActivitiesCount) {
		toSerialize["undone_activities_count"] = o.UndoneActivitiesCount
	}
	if !IsNil(o.FilesCount) {
		toSerialize["files_count"] = o.FilesCount
	}
	if !IsNil(o.NotesCount) {
		toSerialize["notes_count"] = o.NotesCount
	}
	if !IsNil(o.FollowersCount) {
		toSerialize["followers_count"] = o.FollowersCount
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.AddressSubpremise) {
		toSerialize["address_subpremise"] = o.AddressSubpremise
	}
	if !IsNil(o.AddressStreetNumber) {
		toSerialize["address_street_number"] = o.AddressStreetNumber
	}
	if !IsNil(o.AddressRoute) {
		toSerialize["address_route"] = o.AddressRoute
	}
	if !IsNil(o.AddressSublocality) {
		toSerialize["address_sublocality"] = o.AddressSublocality
	}
	if !IsNil(o.AddressLocality) {
		toSerialize["address_locality"] = o.AddressLocality
	}
	if !IsNil(o.AddressAdminAreaLevel1) {
		toSerialize["address_admin_area_level_1"] = o.AddressAdminAreaLevel1
	}
	if !IsNil(o.AddressAdminAreaLevel2) {
		toSerialize["address_admin_area_level_2"] = o.AddressAdminAreaLevel2
	}
	if !IsNil(o.AddressCountry) {
		toSerialize["address_country"] = o.AddressCountry
	}
	if !IsNil(o.AddressPostalCode) {
		toSerialize["address_postal_code"] = o.AddressPostalCode
	}
	if !IsNil(o.AddressFormattedAddress) {
		toSerialize["address_formatted_address"] = o.AddressFormattedAddress
	}
	if !IsNil(o.OpenDealsCount) {
		toSerialize["open_deals_count"] = o.OpenDealsCount
	}
	if !IsNil(o.RelatedOpenDealsCount) {
		toSerialize["related_open_deals_count"] = o.RelatedOpenDealsCount
	}
	if !IsNil(o.ClosedDealsCount) {
		toSerialize["closed_deals_count"] = o.ClosedDealsCount
	}
	if !IsNil(o.RelatedClosedDealsCount) {
		toSerialize["related_closed_deals_count"] = o.RelatedClosedDealsCount
	}
	if !IsNil(o.WonDealsCount) {
		toSerialize["won_deals_count"] = o.WonDealsCount
	}
	if !IsNil(o.RelatedWonDealsCount) {
		toSerialize["related_won_deals_count"] = o.RelatedWonDealsCount
	}
	if !IsNil(o.LostDealsCount) {
		toSerialize["lost_deals_count"] = o.LostDealsCount
	}
	if !IsNil(o.RelatedLostDealsCount) {
		toSerialize["related_lost_deals_count"] = o.RelatedLostDealsCount
	}
	if o.NextActivityDate.IsSet() {
		toSerialize["next_activity_date"] = o.NextActivityDate.Get()
	}
	if o.NextActivityTime.IsSet() {
		toSerialize["next_activity_time"] = o.NextActivityTime.Get()
	}
	if o.NextActivityId.IsSet() {
		toSerialize["next_activity_id"] = o.NextActivityId.Get()
	}
	if o.LastActivityId.IsSet() {
		toSerialize["last_activity_id"] = o.LastActivityId.Get()
	}
	if o.LastActivityDate.IsSet() {
		toSerialize["last_activity_date"] = o.LastActivityDate.Get()
	}
	if !IsNil(o.EditName) {
		toSerialize["edit_name"] = o.EditName
	}
	if o.LastActivity != nil {
		toSerialize["last_activity"] = o.LastActivity
	}
	if o.NextActivity != nil {
		toSerialize["next_activity"] = o.NextActivity
	}
	return toSerialize, nil
}

type NullableOrganizationItem struct {
	value *OrganizationItem
	isSet bool
}

func (v NullableOrganizationItem) Get() *OrganizationItem {
	return v.value
}

func (v *NullableOrganizationItem) Set(val *OrganizationItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationItem(val *OrganizationItem) *NullableOrganizationItem {
	return &NullableOrganizationItem{value: val, isSet: true}
}

func (v NullableOrganizationItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


