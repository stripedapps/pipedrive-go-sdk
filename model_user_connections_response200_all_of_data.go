/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserConnectionsResponse200AllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserConnectionsResponse200AllOfData{}

// UserConnectionsResponse200AllOfData The object of UserConnections
type UserConnectionsResponse200AllOfData struct {
	// The third party ID or false in case the ID is not found
	Google *string `json:"google,omitempty"`
}

// NewUserConnectionsResponse200AllOfData instantiates a new UserConnectionsResponse200AllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserConnectionsResponse200AllOfData() *UserConnectionsResponse200AllOfData {
	this := UserConnectionsResponse200AllOfData{}
	return &this
}

// NewUserConnectionsResponse200AllOfDataWithDefaults instantiates a new UserConnectionsResponse200AllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserConnectionsResponse200AllOfDataWithDefaults() *UserConnectionsResponse200AllOfData {
	this := UserConnectionsResponse200AllOfData{}
	return &this
}

// GetGoogle returns the Google field value if set, zero value otherwise.
func (o *UserConnectionsResponse200AllOfData) GetGoogle() string {
	if o == nil || IsNil(o.Google) {
		var ret string
		return ret
	}
	return *o.Google
}

// GetGoogleOk returns a tuple with the Google field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserConnectionsResponse200AllOfData) GetGoogleOk() (*string, bool) {
	if o == nil || IsNil(o.Google) {
		return nil, false
	}
	return o.Google, true
}

// HasGoogle returns a boolean if a field has been set.
func (o *UserConnectionsResponse200AllOfData) HasGoogle() bool {
	if o != nil && !IsNil(o.Google) {
		return true
	}

	return false
}

// SetGoogle gets a reference to the given string and assigns it to the Google field.
func (o *UserConnectionsResponse200AllOfData) SetGoogle(v string) {
	o.Google = &v
}

func (o UserConnectionsResponse200AllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserConnectionsResponse200AllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Google) {
		toSerialize["google"] = o.Google
	}
	return toSerialize, nil
}

type NullableUserConnectionsResponse200AllOfData struct {
	value *UserConnectionsResponse200AllOfData
	isSet bool
}

func (v NullableUserConnectionsResponse200AllOfData) Get() *UserConnectionsResponse200AllOfData {
	return v.value
}

func (v *NullableUserConnectionsResponse200AllOfData) Set(val *UserConnectionsResponse200AllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableUserConnectionsResponse200AllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableUserConnectionsResponse200AllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserConnectionsResponse200AllOfData(val *UserConnectionsResponse200AllOfData) *NullableUserConnectionsResponse200AllOfData {
	return &NullableUserConnectionsResponse200AllOfData{value: val, isSet: true}
}

func (v NullableUserConnectionsResponse200AllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserConnectionsResponse200AllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


