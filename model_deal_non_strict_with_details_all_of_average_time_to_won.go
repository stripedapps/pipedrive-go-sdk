/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DealNonStrictWithDetailsAllOfAverageTimeToWon type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DealNonStrictWithDetailsAllOfAverageTimeToWon{}

// DealNonStrictWithDetailsAllOfAverageTimeToWon The average time to win the deal
type DealNonStrictWithDetailsAllOfAverageTimeToWon struct {
	// Years
	Y *int32 `json:"y,omitempty"`
	// Months
	M *int32 `json:"m,omitempty"`
	// Days
	D *int32 `json:"d,omitempty"`
	// Hours
	H *int32 `json:"h,omitempty"`
	// Minutes
	I *int32 `json:"i,omitempty"`
	// Seconds
	S *int32 `json:"s,omitempty"`
	// The total time in seconds
	TotalSeconds *int32 `json:"total_seconds,omitempty"`
}

// NewDealNonStrictWithDetailsAllOfAverageTimeToWon instantiates a new DealNonStrictWithDetailsAllOfAverageTimeToWon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDealNonStrictWithDetailsAllOfAverageTimeToWon() *DealNonStrictWithDetailsAllOfAverageTimeToWon {
	this := DealNonStrictWithDetailsAllOfAverageTimeToWon{}
	return &this
}

// NewDealNonStrictWithDetailsAllOfAverageTimeToWonWithDefaults instantiates a new DealNonStrictWithDetailsAllOfAverageTimeToWon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDealNonStrictWithDetailsAllOfAverageTimeToWonWithDefaults() *DealNonStrictWithDetailsAllOfAverageTimeToWon {
	this := DealNonStrictWithDetailsAllOfAverageTimeToWon{}
	return &this
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetY() int32 {
	if o == nil || IsNil(o.Y) {
		var ret int32
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetYOk() (*int32, bool) {
	if o == nil || IsNil(o.Y) {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) HasY() bool {
	if o != nil && !IsNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given int32 and assigns it to the Y field.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) SetY(v int32) {
	o.Y = &v
}

// GetM returns the M field value if set, zero value otherwise.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetM() int32 {
	if o == nil || IsNil(o.M) {
		var ret int32
		return ret
	}
	return *o.M
}

// GetMOk returns a tuple with the M field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetMOk() (*int32, bool) {
	if o == nil || IsNil(o.M) {
		return nil, false
	}
	return o.M, true
}

// HasM returns a boolean if a field has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) HasM() bool {
	if o != nil && !IsNil(o.M) {
		return true
	}

	return false
}

// SetM gets a reference to the given int32 and assigns it to the M field.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) SetM(v int32) {
	o.M = &v
}

// GetD returns the D field value if set, zero value otherwise.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetD() int32 {
	if o == nil || IsNil(o.D) {
		var ret int32
		return ret
	}
	return *o.D
}

// GetDOk returns a tuple with the D field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetDOk() (*int32, bool) {
	if o == nil || IsNil(o.D) {
		return nil, false
	}
	return o.D, true
}

// HasD returns a boolean if a field has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) HasD() bool {
	if o != nil && !IsNil(o.D) {
		return true
	}

	return false
}

// SetD gets a reference to the given int32 and assigns it to the D field.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) SetD(v int32) {
	o.D = &v
}

// GetH returns the H field value if set, zero value otherwise.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetH() int32 {
	if o == nil || IsNil(o.H) {
		var ret int32
		return ret
	}
	return *o.H
}

// GetHOk returns a tuple with the H field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetHOk() (*int32, bool) {
	if o == nil || IsNil(o.H) {
		return nil, false
	}
	return o.H, true
}

// HasH returns a boolean if a field has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) HasH() bool {
	if o != nil && !IsNil(o.H) {
		return true
	}

	return false
}

// SetH gets a reference to the given int32 and assigns it to the H field.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) SetH(v int32) {
	o.H = &v
}

// GetI returns the I field value if set, zero value otherwise.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetI() int32 {
	if o == nil || IsNil(o.I) {
		var ret int32
		return ret
	}
	return *o.I
}

// GetIOk returns a tuple with the I field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetIOk() (*int32, bool) {
	if o == nil || IsNil(o.I) {
		return nil, false
	}
	return o.I, true
}

// HasI returns a boolean if a field has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) HasI() bool {
	if o != nil && !IsNil(o.I) {
		return true
	}

	return false
}

// SetI gets a reference to the given int32 and assigns it to the I field.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) SetI(v int32) {
	o.I = &v
}

// GetS returns the S field value if set, zero value otherwise.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetS() int32 {
	if o == nil || IsNil(o.S) {
		var ret int32
		return ret
	}
	return *o.S
}

// GetSOk returns a tuple with the S field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetSOk() (*int32, bool) {
	if o == nil || IsNil(o.S) {
		return nil, false
	}
	return o.S, true
}

// HasS returns a boolean if a field has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) HasS() bool {
	if o != nil && !IsNil(o.S) {
		return true
	}

	return false
}

// SetS gets a reference to the given int32 and assigns it to the S field.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) SetS(v int32) {
	o.S = &v
}

// GetTotalSeconds returns the TotalSeconds field value if set, zero value otherwise.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetTotalSeconds() int32 {
	if o == nil || IsNil(o.TotalSeconds) {
		var ret int32
		return ret
	}
	return *o.TotalSeconds
}

// GetTotalSecondsOk returns a tuple with the TotalSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) GetTotalSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSeconds) {
		return nil, false
	}
	return o.TotalSeconds, true
}

// HasTotalSeconds returns a boolean if a field has been set.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) HasTotalSeconds() bool {
	if o != nil && !IsNil(o.TotalSeconds) {
		return true
	}

	return false
}

// SetTotalSeconds gets a reference to the given int32 and assigns it to the TotalSeconds field.
func (o *DealNonStrictWithDetailsAllOfAverageTimeToWon) SetTotalSeconds(v int32) {
	o.TotalSeconds = &v
}

func (o DealNonStrictWithDetailsAllOfAverageTimeToWon) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DealNonStrictWithDetailsAllOfAverageTimeToWon) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Y) {
		toSerialize["y"] = o.Y
	}
	if !IsNil(o.M) {
		toSerialize["m"] = o.M
	}
	if !IsNil(o.D) {
		toSerialize["d"] = o.D
	}
	if !IsNil(o.H) {
		toSerialize["h"] = o.H
	}
	if !IsNil(o.I) {
		toSerialize["i"] = o.I
	}
	if !IsNil(o.S) {
		toSerialize["s"] = o.S
	}
	if !IsNil(o.TotalSeconds) {
		toSerialize["total_seconds"] = o.TotalSeconds
	}
	return toSerialize, nil
}

type NullableDealNonStrictWithDetailsAllOfAverageTimeToWon struct {
	value *DealNonStrictWithDetailsAllOfAverageTimeToWon
	isSet bool
}

func (v NullableDealNonStrictWithDetailsAllOfAverageTimeToWon) Get() *DealNonStrictWithDetailsAllOfAverageTimeToWon {
	return v.value
}

func (v *NullableDealNonStrictWithDetailsAllOfAverageTimeToWon) Set(val *DealNonStrictWithDetailsAllOfAverageTimeToWon) {
	v.value = val
	v.isSet = true
}

func (v NullableDealNonStrictWithDetailsAllOfAverageTimeToWon) IsSet() bool {
	return v.isSet
}

func (v *NullableDealNonStrictWithDetailsAllOfAverageTimeToWon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDealNonStrictWithDetailsAllOfAverageTimeToWon(val *DealNonStrictWithDetailsAllOfAverageTimeToWon) *NullableDealNonStrictWithDetailsAllOfAverageTimeToWon {
	return &NullableDealNonStrictWithDetailsAllOfAverageTimeToWon{value: val, isSet: true}
}

func (v NullableDealNonStrictWithDetailsAllOfAverageTimeToWon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDealNonStrictWithDetailsAllOfAverageTimeToWon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


