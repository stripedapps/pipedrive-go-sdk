/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution{}

// ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution The distribution of activities related to the organization grouped by the user ID
type ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution struct {
	ASSIGNED_TO_USER_ID *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERID `json:"ASSIGNED_TO_USER_ID,omitempty"`
}

// NewActivityDistributionDataWithAdditionalDataAllOfActivityDistribution instantiates a new ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityDistributionDataWithAdditionalDataAllOfActivityDistribution() *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution {
	this := ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution{}
	return &this
}

// NewActivityDistributionDataWithAdditionalDataAllOfActivityDistributionWithDefaults instantiates a new ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityDistributionDataWithAdditionalDataAllOfActivityDistributionWithDefaults() *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution {
	this := ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution{}
	return &this
}

// GetASSIGNED_TO_USER_ID returns the ASSIGNED_TO_USER_ID field value if set, zero value otherwise.
func (o *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) GetASSIGNED_TO_USER_ID() ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERID {
	if o == nil || IsNil(o.ASSIGNED_TO_USER_ID) {
		var ret ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERID
		return ret
	}
	return *o.ASSIGNED_TO_USER_ID
}

// GetASSIGNED_TO_USER_IDOk returns a tuple with the ASSIGNED_TO_USER_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) GetASSIGNED_TO_USER_IDOk() (*ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERID, bool) {
	if o == nil || IsNil(o.ASSIGNED_TO_USER_ID) {
		return nil, false
	}
	return o.ASSIGNED_TO_USER_ID, true
}

// HasASSIGNED_TO_USER_ID returns a boolean if a field has been set.
func (o *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) HasASSIGNED_TO_USER_ID() bool {
	if o != nil && !IsNil(o.ASSIGNED_TO_USER_ID) {
		return true
	}

	return false
}

// SetASSIGNED_TO_USER_ID gets a reference to the given ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERID and assigns it to the ASSIGNED_TO_USER_ID field.
func (o *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) SetASSIGNED_TO_USER_ID(v ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERID) {
	o.ASSIGNED_TO_USER_ID = &v
}

func (o ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ASSIGNED_TO_USER_ID) {
		toSerialize["ASSIGNED_TO_USER_ID"] = o.ASSIGNED_TO_USER_ID
	}
	return toSerialize, nil
}

type NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution struct {
	value *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution
	isSet bool
}

func (v NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) Get() *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution {
	return v.value
}

func (v *NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) Set(val *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution(val *ActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) *NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution {
	return &NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution{value: val, isSet: true}
}

func (v NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


