/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetPersonResponse200AllOfAdditionalData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPersonResponse200AllOfAdditionalData{}

// GetPersonResponse200AllOfAdditionalData struct for GetPersonResponse200AllOfAdditionalData
type GetPersonResponse200AllOfAdditionalData struct {
	// Dropbox email for the person
	DropboxEmail *string `json:"dropbox_email,omitempty"`
}

// NewGetPersonResponse200AllOfAdditionalData instantiates a new GetPersonResponse200AllOfAdditionalData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPersonResponse200AllOfAdditionalData() *GetPersonResponse200AllOfAdditionalData {
	this := GetPersonResponse200AllOfAdditionalData{}
	return &this
}

// NewGetPersonResponse200AllOfAdditionalDataWithDefaults instantiates a new GetPersonResponse200AllOfAdditionalData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPersonResponse200AllOfAdditionalDataWithDefaults() *GetPersonResponse200AllOfAdditionalData {
	this := GetPersonResponse200AllOfAdditionalData{}
	return &this
}

// GetDropboxEmail returns the DropboxEmail field value if set, zero value otherwise.
func (o *GetPersonResponse200AllOfAdditionalData) GetDropboxEmail() string {
	if o == nil || IsNil(o.DropboxEmail) {
		var ret string
		return ret
	}
	return *o.DropboxEmail
}

// GetDropboxEmailOk returns a tuple with the DropboxEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPersonResponse200AllOfAdditionalData) GetDropboxEmailOk() (*string, bool) {
	if o == nil || IsNil(o.DropboxEmail) {
		return nil, false
	}
	return o.DropboxEmail, true
}

// HasDropboxEmail returns a boolean if a field has been set.
func (o *GetPersonResponse200AllOfAdditionalData) HasDropboxEmail() bool {
	if o != nil && !IsNil(o.DropboxEmail) {
		return true
	}

	return false
}

// SetDropboxEmail gets a reference to the given string and assigns it to the DropboxEmail field.
func (o *GetPersonResponse200AllOfAdditionalData) SetDropboxEmail(v string) {
	o.DropboxEmail = &v
}

func (o GetPersonResponse200AllOfAdditionalData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPersonResponse200AllOfAdditionalData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DropboxEmail) {
		toSerialize["dropbox_email"] = o.DropboxEmail
	}
	return toSerialize, nil
}

type NullableGetPersonResponse200AllOfAdditionalData struct {
	value *GetPersonResponse200AllOfAdditionalData
	isSet bool
}

func (v NullableGetPersonResponse200AllOfAdditionalData) Get() *GetPersonResponse200AllOfAdditionalData {
	return v.value
}

func (v *NullableGetPersonResponse200AllOfAdditionalData) Set(val *GetPersonResponse200AllOfAdditionalData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPersonResponse200AllOfAdditionalData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPersonResponse200AllOfAdditionalData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPersonResponse200AllOfAdditionalData(val *GetPersonResponse200AllOfAdditionalData) *NullableGetPersonResponse200AllOfAdditionalData {
	return &NullableGetPersonResponse200AllOfAdditionalData{value: val, isSet: true}
}

func (v NullableGetPersonResponse200AllOfAdditionalData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPersonResponse200AllOfAdditionalData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


