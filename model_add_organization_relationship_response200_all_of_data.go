/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddOrganizationRelationshipResponse200AllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOrganizationRelationshipResponse200AllOfData{}

// AddOrganizationRelationshipResponse200AllOfData struct for AddOrganizationRelationshipResponse200AllOfData
type AddOrganizationRelationshipResponse200AllOfData struct {
	// The ID of the organization relationship
	Id *int32 `json:"id,omitempty"`
	// The type of the relationship
	Type *string `json:"type,omitempty"`
	RelOwnerOrgId *RelationshipOrganizationInfoItem `json:"rel_owner_org_id,omitempty"`
	RelLinkedOrgId *RelationshipOrganizationInfoItem `json:"rel_linked_org_id,omitempty"`
	// The creation date and time of the relationship
	AddTime *string `json:"add_time,omitempty"`
	// The last updated date and time of the relationship
	UpdateTime *string `json:"update_time,omitempty"`
	// Whether the relationship is active or not
	ActiveFlag *string `json:"active_flag,omitempty"`
}

// NewAddOrganizationRelationshipResponse200AllOfData instantiates a new AddOrganizationRelationshipResponse200AllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOrganizationRelationshipResponse200AllOfData() *AddOrganizationRelationshipResponse200AllOfData {
	this := AddOrganizationRelationshipResponse200AllOfData{}
	return &this
}

// NewAddOrganizationRelationshipResponse200AllOfDataWithDefaults instantiates a new AddOrganizationRelationshipResponse200AllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOrganizationRelationshipResponse200AllOfDataWithDefaults() *AddOrganizationRelationshipResponse200AllOfData {
	this := AddOrganizationRelationshipResponse200AllOfData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AddOrganizationRelationshipResponse200AllOfData) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AddOrganizationRelationshipResponse200AllOfData) SetType(v string) {
	o.Type = &v
}

// GetRelOwnerOrgId returns the RelOwnerOrgId field value if set, zero value otherwise.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetRelOwnerOrgId() RelationshipOrganizationInfoItem {
	if o == nil || IsNil(o.RelOwnerOrgId) {
		var ret RelationshipOrganizationInfoItem
		return ret
	}
	return *o.RelOwnerOrgId
}

// GetRelOwnerOrgIdOk returns a tuple with the RelOwnerOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetRelOwnerOrgIdOk() (*RelationshipOrganizationInfoItem, bool) {
	if o == nil || IsNil(o.RelOwnerOrgId) {
		return nil, false
	}
	return o.RelOwnerOrgId, true
}

// HasRelOwnerOrgId returns a boolean if a field has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) HasRelOwnerOrgId() bool {
	if o != nil && !IsNil(o.RelOwnerOrgId) {
		return true
	}

	return false
}

// SetRelOwnerOrgId gets a reference to the given RelationshipOrganizationInfoItem and assigns it to the RelOwnerOrgId field.
func (o *AddOrganizationRelationshipResponse200AllOfData) SetRelOwnerOrgId(v RelationshipOrganizationInfoItem) {
	o.RelOwnerOrgId = &v
}

// GetRelLinkedOrgId returns the RelLinkedOrgId field value if set, zero value otherwise.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetRelLinkedOrgId() RelationshipOrganizationInfoItem {
	if o == nil || IsNil(o.RelLinkedOrgId) {
		var ret RelationshipOrganizationInfoItem
		return ret
	}
	return *o.RelLinkedOrgId
}

// GetRelLinkedOrgIdOk returns a tuple with the RelLinkedOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetRelLinkedOrgIdOk() (*RelationshipOrganizationInfoItem, bool) {
	if o == nil || IsNil(o.RelLinkedOrgId) {
		return nil, false
	}
	return o.RelLinkedOrgId, true
}

// HasRelLinkedOrgId returns a boolean if a field has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) HasRelLinkedOrgId() bool {
	if o != nil && !IsNil(o.RelLinkedOrgId) {
		return true
	}

	return false
}

// SetRelLinkedOrgId gets a reference to the given RelationshipOrganizationInfoItem and assigns it to the RelLinkedOrgId field.
func (o *AddOrganizationRelationshipResponse200AllOfData) SetRelLinkedOrgId(v RelationshipOrganizationInfoItem) {
	o.RelLinkedOrgId = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *AddOrganizationRelationshipResponse200AllOfData) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *AddOrganizationRelationshipResponse200AllOfData) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetActiveFlag() string {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret string
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) GetActiveFlagOk() (*string, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *AddOrganizationRelationshipResponse200AllOfData) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given string and assigns it to the ActiveFlag field.
func (o *AddOrganizationRelationshipResponse200AllOfData) SetActiveFlag(v string) {
	o.ActiveFlag = &v
}

func (o AddOrganizationRelationshipResponse200AllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOrganizationRelationshipResponse200AllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.RelOwnerOrgId) {
		toSerialize["rel_owner_org_id"] = o.RelOwnerOrgId
	}
	if !IsNil(o.RelLinkedOrgId) {
		toSerialize["rel_linked_org_id"] = o.RelLinkedOrgId
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	return toSerialize, nil
}

type NullableAddOrganizationRelationshipResponse200AllOfData struct {
	value *AddOrganizationRelationshipResponse200AllOfData
	isSet bool
}

func (v NullableAddOrganizationRelationshipResponse200AllOfData) Get() *AddOrganizationRelationshipResponse200AllOfData {
	return v.value
}

func (v *NullableAddOrganizationRelationshipResponse200AllOfData) Set(val *AddOrganizationRelationshipResponse200AllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOrganizationRelationshipResponse200AllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOrganizationRelationshipResponse200AllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOrganizationRelationshipResponse200AllOfData(val *AddOrganizationRelationshipResponse200AllOfData) *NullableAddOrganizationRelationshipResponse200AllOfData {
	return &NullableAddOrganizationRelationshipResponse200AllOfData{value: val, isSet: true}
}

func (v NullableAddOrganizationRelationshipResponse200AllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOrganizationRelationshipResponse200AllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


