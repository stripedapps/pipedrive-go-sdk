/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetFiltersResponse200AllOfDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFiltersResponse200AllOfDataInner{}

// GetFiltersResponse200AllOfDataInner The filter object
type GetFiltersResponse200AllOfDataInner struct {
	// The ID of the filter
	Id *int32 `json:"id,omitempty"`
	// The name of the filter
	Name *string `json:"name,omitempty"`
	// The active flag of the filter
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// The type of the item
	Type *string `json:"type,omitempty"`
	// The owner of the filter
	UserId *int32 `json:"user_id,omitempty"`
	// The date and time when the filter was added
	AddTime *string `json:"add_time,omitempty"`
	// The date and time when the filter was updated
	UpdateTime *string `json:"update_time,omitempty"`
	// The visibility group ID of who can see then filter
	VisibleTo *int32 `json:"visible_to,omitempty"`
	// Used by Pipedrive webapp
	CustomViewId *int32 `json:"custom_view_id,omitempty"`
}

// NewGetFiltersResponse200AllOfDataInner instantiates a new GetFiltersResponse200AllOfDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFiltersResponse200AllOfDataInner() *GetFiltersResponse200AllOfDataInner {
	this := GetFiltersResponse200AllOfDataInner{}
	return &this
}

// NewGetFiltersResponse200AllOfDataInnerWithDefaults instantiates a new GetFiltersResponse200AllOfDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFiltersResponse200AllOfDataInnerWithDefaults() *GetFiltersResponse200AllOfDataInner {
	this := GetFiltersResponse200AllOfDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetFiltersResponse200AllOfDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiltersResponse200AllOfDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetFiltersResponse200AllOfDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetFiltersResponse200AllOfDataInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetFiltersResponse200AllOfDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiltersResponse200AllOfDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetFiltersResponse200AllOfDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetFiltersResponse200AllOfDataInner) SetName(v string) {
	o.Name = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *GetFiltersResponse200AllOfDataInner) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiltersResponse200AllOfDataInner) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *GetFiltersResponse200AllOfDataInner) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *GetFiltersResponse200AllOfDataInner) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetFiltersResponse200AllOfDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiltersResponse200AllOfDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetFiltersResponse200AllOfDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetFiltersResponse200AllOfDataInner) SetType(v string) {
	o.Type = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetFiltersResponse200AllOfDataInner) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiltersResponse200AllOfDataInner) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetFiltersResponse200AllOfDataInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *GetFiltersResponse200AllOfDataInner) SetUserId(v int32) {
	o.UserId = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *GetFiltersResponse200AllOfDataInner) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiltersResponse200AllOfDataInner) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *GetFiltersResponse200AllOfDataInner) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *GetFiltersResponse200AllOfDataInner) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GetFiltersResponse200AllOfDataInner) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiltersResponse200AllOfDataInner) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GetFiltersResponse200AllOfDataInner) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *GetFiltersResponse200AllOfDataInner) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *GetFiltersResponse200AllOfDataInner) GetVisibleTo() int32 {
	if o == nil || IsNil(o.VisibleTo) {
		var ret int32
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiltersResponse200AllOfDataInner) GetVisibleToOk() (*int32, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *GetFiltersResponse200AllOfDataInner) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given int32 and assigns it to the VisibleTo field.
func (o *GetFiltersResponse200AllOfDataInner) SetVisibleTo(v int32) {
	o.VisibleTo = &v
}

// GetCustomViewId returns the CustomViewId field value if set, zero value otherwise.
func (o *GetFiltersResponse200AllOfDataInner) GetCustomViewId() int32 {
	if o == nil || IsNil(o.CustomViewId) {
		var ret int32
		return ret
	}
	return *o.CustomViewId
}

// GetCustomViewIdOk returns a tuple with the CustomViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiltersResponse200AllOfDataInner) GetCustomViewIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomViewId) {
		return nil, false
	}
	return o.CustomViewId, true
}

// HasCustomViewId returns a boolean if a field has been set.
func (o *GetFiltersResponse200AllOfDataInner) HasCustomViewId() bool {
	if o != nil && !IsNil(o.CustomViewId) {
		return true
	}

	return false
}

// SetCustomViewId gets a reference to the given int32 and assigns it to the CustomViewId field.
func (o *GetFiltersResponse200AllOfDataInner) SetCustomViewId(v int32) {
	o.CustomViewId = &v
}

func (o GetFiltersResponse200AllOfDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFiltersResponse200AllOfDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	if !IsNil(o.CustomViewId) {
		toSerialize["custom_view_id"] = o.CustomViewId
	}
	return toSerialize, nil
}

type NullableGetFiltersResponse200AllOfDataInner struct {
	value *GetFiltersResponse200AllOfDataInner
	isSet bool
}

func (v NullableGetFiltersResponse200AllOfDataInner) Get() *GetFiltersResponse200AllOfDataInner {
	return v.value
}

func (v *NullableGetFiltersResponse200AllOfDataInner) Set(val *GetFiltersResponse200AllOfDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFiltersResponse200AllOfDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFiltersResponse200AllOfDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFiltersResponse200AllOfDataInner(val *GetFiltersResponse200AllOfDataInner) *NullableGetFiltersResponse200AllOfDataInner {
	return &NullableGetFiltersResponse200AllOfDataInner{value: val, isSet: true}
}

func (v NullableGetFiltersResponse200AllOfDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFiltersResponse200AllOfDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


