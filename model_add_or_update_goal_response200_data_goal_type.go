/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddOrUpdateGoalResponse200DataGoalType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOrUpdateGoalResponse200DataGoalType{}

// AddOrUpdateGoalResponse200DataGoalType The type of the goal
type AddOrUpdateGoalResponse200DataGoalType struct {
	// The name of the goal type
	Name *string `json:"name,omitempty"`
	Params *AddOrUpdateGoalResponse200DataGoalTypeParams `json:"params,omitempty"`
}

// NewAddOrUpdateGoalResponse200DataGoalType instantiates a new AddOrUpdateGoalResponse200DataGoalType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOrUpdateGoalResponse200DataGoalType() *AddOrUpdateGoalResponse200DataGoalType {
	this := AddOrUpdateGoalResponse200DataGoalType{}
	return &this
}

// NewAddOrUpdateGoalResponse200DataGoalTypeWithDefaults instantiates a new AddOrUpdateGoalResponse200DataGoalType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOrUpdateGoalResponse200DataGoalTypeWithDefaults() *AddOrUpdateGoalResponse200DataGoalType {
	this := AddOrUpdateGoalResponse200DataGoalType{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoalType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoalType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoalType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddOrUpdateGoalResponse200DataGoalType) SetName(v string) {
	o.Name = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoalType) GetParams() AddOrUpdateGoalResponse200DataGoalTypeParams {
	if o == nil || IsNil(o.Params) {
		var ret AddOrUpdateGoalResponse200DataGoalTypeParams
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoalType) GetParamsOk() (*AddOrUpdateGoalResponse200DataGoalTypeParams, bool) {
	if o == nil || IsNil(o.Params) {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoalType) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given AddOrUpdateGoalResponse200DataGoalTypeParams and assigns it to the Params field.
func (o *AddOrUpdateGoalResponse200DataGoalType) SetParams(v AddOrUpdateGoalResponse200DataGoalTypeParams) {
	o.Params = &v
}

func (o AddOrUpdateGoalResponse200DataGoalType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOrUpdateGoalResponse200DataGoalType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	return toSerialize, nil
}

type NullableAddOrUpdateGoalResponse200DataGoalType struct {
	value *AddOrUpdateGoalResponse200DataGoalType
	isSet bool
}

func (v NullableAddOrUpdateGoalResponse200DataGoalType) Get() *AddOrUpdateGoalResponse200DataGoalType {
	return v.value
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalType) Set(val *AddOrUpdateGoalResponse200DataGoalType) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOrUpdateGoalResponse200DataGoalType) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOrUpdateGoalResponse200DataGoalType(val *AddOrUpdateGoalResponse200DataGoalType) *NullableAddOrUpdateGoalResponse200DataGoalType {
	return &NullableAddOrUpdateGoalResponse200DataGoalType{value: val, isSet: true}
}

func (v NullableAddOrUpdateGoalResponse200DataGoalType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


