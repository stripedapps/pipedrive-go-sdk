/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateDealRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDealRequest{}

// UpdateDealRequest struct for UpdateDealRequest
type UpdateDealRequest struct {
	// The title of the deal
	Title *string `json:"title,omitempty"`
	// The value of the deal.
	Value *string `json:"value,omitempty"`
	// Array of the deal labels IDs.
	Label []int32 `json:"label,omitempty"`
	// The currency of the deal. Accepts a 3-character currency code.
	Currency *string `json:"currency,omitempty"`
	// The ID of the user which will be the new owner of the deal.
	UserId *int32 `json:"user_id,omitempty"`
	// The ID of a person which this deal will be linked to. If the person does not exist yet, it needs to be created first.
	PersonId *int32 `json:"person_id,omitempty"`
	// The ID of an organization which this deal will be linked to. If the organization does not exist yet, it needs to be created first.
	OrgId *int32 `json:"org_id,omitempty"`
	// The ID of the pipeline this deal will be added to. By default, the deal will be added to the first stage of the specified pipeline. Please note that `pipeline_id` and `stage_id` should not be used together as `pipeline_id` will be ignored.
	PipelineId *int32 `json:"pipeline_id,omitempty"`
	// The ID of the stage this deal will be added to. Please note that a pipeline will be assigned automatically based on the `stage_id`.
	StageId *int32 `json:"stage_id,omitempty"`
	// open = Open, won = Won, lost = Lost, deleted = Deleted.
	Status *string `json:"status,omitempty"`
	// The ID of Marketing channel this deal was created from. Provided value must be one of the channels configured for your company which you can fetch with <a href=\"https://developers.pipedrive.com/docs/api/v1/DealFields#getDealField\" target=\"_blank\" rel=\"noopener noreferrer\">GET /v1/dealFields</a>.
	Channel NullableInt32 `json:"channel,omitempty"`
	// The optional ID to further distinguish the Marketing channel.
	ChannelId NullableString `json:"channel_id,omitempty"`
	// The optional date and time of changing the deal status as won in UTC. Format: YYYY-MM-DD HH:MM:SS. Can be set only when deal `status` is already Won. Can not be used together with `lost_time`.
	WonTime *string `json:"won_time,omitempty"`
	// The optional date and time of changing the deal status as lost in UTC. Format: YYYY-MM-DD HH:MM:SS. Can be set only when deal `status` is already Lost. Can not be used together with `won_time`.
	LostTime *string `json:"lost_time,omitempty"`
	// The optional date and time of closing the deal in UTC. Format: YYYY-MM-DD HH:MM:SS.
	CloseTime NullableString `json:"close_time,omitempty"`
	// The expected close date of the deal. In ISO 8601 format: YYYY-MM-DD.
	ExpectedCloseDate *string `json:"expected_close_date,omitempty"`
	// The success probability percentage of the deal. Used/shown only when `deal_probability` for the pipeline of the deal is enabled.
	Probability *float32 `json:"probability,omitempty"`
	// The optional message about why the deal was lost (to be used when status = lost)
	LostReason *string `json:"lost_reason,omitempty"`
	VisibleTo *string `json:"visible_to,omitempty"`
}

// NewUpdateDealRequest instantiates a new UpdateDealRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDealRequest() *UpdateDealRequest {
	this := UpdateDealRequest{}
	return &this
}

// NewUpdateDealRequestWithDefaults instantiates a new UpdateDealRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDealRequestWithDefaults() *UpdateDealRequest {
	this := UpdateDealRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateDealRequest) SetTitle(v string) {
	o.Title = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *UpdateDealRequest) SetValue(v string) {
	o.Value = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetLabel() []int32 {
	if o == nil || IsNil(o.Label) {
		var ret []int32
		return ret
	}
	return o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetLabelOk() ([]int32, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given []int32 and assigns it to the Label field.
func (o *UpdateDealRequest) SetLabel(v []int32) {
	o.Label = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *UpdateDealRequest) SetCurrency(v string) {
	o.Currency = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *UpdateDealRequest) SetUserId(v int32) {
	o.UserId = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetPersonId() int32 {
	if o == nil || IsNil(o.PersonId) {
		var ret int32
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetPersonIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given int32 and assigns it to the PersonId field.
func (o *UpdateDealRequest) SetPersonId(v int32) {
	o.PersonId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *UpdateDealRequest) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetPipelineId() int32 {
	if o == nil || IsNil(o.PipelineId) {
		var ret int32
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetPipelineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given int32 and assigns it to the PipelineId field.
func (o *UpdateDealRequest) SetPipelineId(v int32) {
	o.PipelineId = &v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetStageId() int32 {
	if o == nil || IsNil(o.StageId) {
		var ret int32
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetStageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given int32 and assigns it to the StageId field.
func (o *UpdateDealRequest) SetStageId(v int32) {
	o.StageId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateDealRequest) SetStatus(v string) {
	o.Status = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateDealRequest) GetChannel() int32 {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret int32
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateDealRequest) GetChannelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableInt32 and assigns it to the Channel field.
func (o *UpdateDealRequest) SetChannel(v int32) {
	o.Channel.Set(&v)
}
// SetChannelNil sets the value for Channel to be an explicit nil
func (o *UpdateDealRequest) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *UpdateDealRequest) UnsetChannel() {
	o.Channel.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateDealRequest) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateDealRequest) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *UpdateDealRequest) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *UpdateDealRequest) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *UpdateDealRequest) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetWonTime returns the WonTime field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetWonTime() string {
	if o == nil || IsNil(o.WonTime) {
		var ret string
		return ret
	}
	return *o.WonTime
}

// GetWonTimeOk returns a tuple with the WonTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetWonTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WonTime) {
		return nil, false
	}
	return o.WonTime, true
}

// HasWonTime returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasWonTime() bool {
	if o != nil && !IsNil(o.WonTime) {
		return true
	}

	return false
}

// SetWonTime gets a reference to the given string and assigns it to the WonTime field.
func (o *UpdateDealRequest) SetWonTime(v string) {
	o.WonTime = &v
}

// GetLostTime returns the LostTime field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetLostTime() string {
	if o == nil || IsNil(o.LostTime) {
		var ret string
		return ret
	}
	return *o.LostTime
}

// GetLostTimeOk returns a tuple with the LostTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetLostTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LostTime) {
		return nil, false
	}
	return o.LostTime, true
}

// HasLostTime returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasLostTime() bool {
	if o != nil && !IsNil(o.LostTime) {
		return true
	}

	return false
}

// SetLostTime gets a reference to the given string and assigns it to the LostTime field.
func (o *UpdateDealRequest) SetLostTime(v string) {
	o.LostTime = &v
}

// GetCloseTime returns the CloseTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateDealRequest) GetCloseTime() string {
	if o == nil || IsNil(o.CloseTime.Get()) {
		var ret string
		return ret
	}
	return *o.CloseTime.Get()
}

// GetCloseTimeOk returns a tuple with the CloseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateDealRequest) GetCloseTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloseTime.Get(), o.CloseTime.IsSet()
}

// HasCloseTime returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasCloseTime() bool {
	if o != nil && o.CloseTime.IsSet() {
		return true
	}

	return false
}

// SetCloseTime gets a reference to the given NullableString and assigns it to the CloseTime field.
func (o *UpdateDealRequest) SetCloseTime(v string) {
	o.CloseTime.Set(&v)
}
// SetCloseTimeNil sets the value for CloseTime to be an explicit nil
func (o *UpdateDealRequest) SetCloseTimeNil() {
	o.CloseTime.Set(nil)
}

// UnsetCloseTime ensures that no value is present for CloseTime, not even an explicit nil
func (o *UpdateDealRequest) UnsetCloseTime() {
	o.CloseTime.Unset()
}

// GetExpectedCloseDate returns the ExpectedCloseDate field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetExpectedCloseDate() string {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		var ret string
		return ret
	}
	return *o.ExpectedCloseDate
}

// GetExpectedCloseDateOk returns a tuple with the ExpectedCloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetExpectedCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		return nil, false
	}
	return o.ExpectedCloseDate, true
}

// HasExpectedCloseDate returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasExpectedCloseDate() bool {
	if o != nil && !IsNil(o.ExpectedCloseDate) {
		return true
	}

	return false
}

// SetExpectedCloseDate gets a reference to the given string and assigns it to the ExpectedCloseDate field.
func (o *UpdateDealRequest) SetExpectedCloseDate(v string) {
	o.ExpectedCloseDate = &v
}

// GetProbability returns the Probability field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetProbability() float32 {
	if o == nil || IsNil(o.Probability) {
		var ret float32
		return ret
	}
	return *o.Probability
}

// GetProbabilityOk returns a tuple with the Probability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetProbabilityOk() (*float32, bool) {
	if o == nil || IsNil(o.Probability) {
		return nil, false
	}
	return o.Probability, true
}

// HasProbability returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasProbability() bool {
	if o != nil && !IsNil(o.Probability) {
		return true
	}

	return false
}

// SetProbability gets a reference to the given float32 and assigns it to the Probability field.
func (o *UpdateDealRequest) SetProbability(v float32) {
	o.Probability = &v
}

// GetLostReason returns the LostReason field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetLostReason() string {
	if o == nil || IsNil(o.LostReason) {
		var ret string
		return ret
	}
	return *o.LostReason
}

// GetLostReasonOk returns a tuple with the LostReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetLostReasonOk() (*string, bool) {
	if o == nil || IsNil(o.LostReason) {
		return nil, false
	}
	return o.LostReason, true
}

// HasLostReason returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasLostReason() bool {
	if o != nil && !IsNil(o.LostReason) {
		return true
	}

	return false
}

// SetLostReason gets a reference to the given string and assigns it to the LostReason field.
func (o *UpdateDealRequest) SetLostReason(v string) {
	o.LostReason = &v
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *UpdateDealRequest) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDealRequest) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *UpdateDealRequest) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *UpdateDealRequest) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

func (o UpdateDealRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDealRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipeline_id"] = o.PipelineId
	}
	if !IsNil(o.StageId) {
		toSerialize["stage_id"] = o.StageId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["channel_id"] = o.ChannelId.Get()
	}
	if !IsNil(o.WonTime) {
		toSerialize["won_time"] = o.WonTime
	}
	if !IsNil(o.LostTime) {
		toSerialize["lost_time"] = o.LostTime
	}
	if o.CloseTime.IsSet() {
		toSerialize["close_time"] = o.CloseTime.Get()
	}
	if !IsNil(o.ExpectedCloseDate) {
		toSerialize["expected_close_date"] = o.ExpectedCloseDate
	}
	if !IsNil(o.Probability) {
		toSerialize["probability"] = o.Probability
	}
	if !IsNil(o.LostReason) {
		toSerialize["lost_reason"] = o.LostReason
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	return toSerialize, nil
}

type NullableUpdateDealRequest struct {
	value *UpdateDealRequest
	isSet bool
}

func (v NullableUpdateDealRequest) Get() *UpdateDealRequest {
	return v.value
}

func (v *NullableUpdateDealRequest) Set(val *UpdateDealRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDealRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDealRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDealRequest(val *UpdateDealRequest) *NullableUpdateDealRequest {
	return &NullableUpdateDealRequest{value: val, isSet: true}
}

func (v NullableUpdateDealRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDealRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


