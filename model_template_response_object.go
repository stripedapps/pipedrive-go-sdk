/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateResponseObject{}

// TemplateResponseObject struct for TemplateResponseObject
type TemplateResponseObject struct {
	// The ID of a template
	Id *float32 `json:"id,omitempty"`
	// The title of a template
	Title *string `json:"title,omitempty"`
	// The description of a template
	Description *string `json:"description,omitempty"`
	// The ID of the project board this template is associated with
	ProjectsBoardId *float32 `json:"projects_board_id,omitempty"`
	// The ID of a template owner
	OwnerId *float32 `json:"owner_id,omitempty"`
	// The creation date and time of the template in UTC. Format: YYYY-MM-DD HH:MM:SS.
	AddTime *string `json:"add_time,omitempty"`
	// The update date and time of the template in UTC. Format: YYYY-MM-DD HH:MM:SS.
	UpdateTime *string `json:"update_time,omitempty"`
}

// NewTemplateResponseObject instantiates a new TemplateResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateResponseObject() *TemplateResponseObject {
	this := TemplateResponseObject{}
	return &this
}

// NewTemplateResponseObjectWithDefaults instantiates a new TemplateResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateResponseObjectWithDefaults() *TemplateResponseObject {
	this := TemplateResponseObject{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TemplateResponseObject) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseObject) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TemplateResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *TemplateResponseObject) SetId(v float32) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TemplateResponseObject) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseObject) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TemplateResponseObject) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TemplateResponseObject) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TemplateResponseObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateResponseObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TemplateResponseObject) SetDescription(v string) {
	o.Description = &v
}

// GetProjectsBoardId returns the ProjectsBoardId field value if set, zero value otherwise.
func (o *TemplateResponseObject) GetProjectsBoardId() float32 {
	if o == nil || IsNil(o.ProjectsBoardId) {
		var ret float32
		return ret
	}
	return *o.ProjectsBoardId
}

// GetProjectsBoardIdOk returns a tuple with the ProjectsBoardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseObject) GetProjectsBoardIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ProjectsBoardId) {
		return nil, false
	}
	return o.ProjectsBoardId, true
}

// HasProjectsBoardId returns a boolean if a field has been set.
func (o *TemplateResponseObject) HasProjectsBoardId() bool {
	if o != nil && !IsNil(o.ProjectsBoardId) {
		return true
	}

	return false
}

// SetProjectsBoardId gets a reference to the given float32 and assigns it to the ProjectsBoardId field.
func (o *TemplateResponseObject) SetProjectsBoardId(v float32) {
	o.ProjectsBoardId = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *TemplateResponseObject) GetOwnerId() float32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret float32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseObject) GetOwnerIdOk() (*float32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *TemplateResponseObject) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given float32 and assigns it to the OwnerId field.
func (o *TemplateResponseObject) SetOwnerId(v float32) {
	o.OwnerId = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *TemplateResponseObject) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseObject) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *TemplateResponseObject) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *TemplateResponseObject) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *TemplateResponseObject) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseObject) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *TemplateResponseObject) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *TemplateResponseObject) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

func (o TemplateResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ProjectsBoardId) {
		toSerialize["projects_board_id"] = o.ProjectsBoardId
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableTemplateResponseObject struct {
	value *TemplateResponseObject
	isSet bool
}

func (v NullableTemplateResponseObject) Get() *TemplateResponseObject {
	return v.value
}

func (v *NullableTemplateResponseObject) Set(val *TemplateResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateResponseObject(val *TemplateResponseObject) *NullableTemplateResponseObject {
	return &NullableTemplateResponseObject{value: val, isSet: true}
}

func (v NullableTemplateResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


