/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PipelineRequest1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineRequest1{}

// PipelineRequest1 struct for PipelineRequest1
type PipelineRequest1 struct {
	// The name of the pipeline
	Name *string `json:"name,omitempty"`
	DealProbability *float32 `json:"deal_probability,omitempty"`
	// Defines the order of pipelines. First order (`order_nr=0`) is the default pipeline.
	OrderNr *int32 `json:"order_nr,omitempty"`
	Active *float32 `json:"active,omitempty"`
}

// NewPipelineRequest1 instantiates a new PipelineRequest1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineRequest1() *PipelineRequest1 {
	this := PipelineRequest1{}
	return &this
}

// NewPipelineRequest1WithDefaults instantiates a new PipelineRequest1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineRequest1WithDefaults() *PipelineRequest1 {
	this := PipelineRequest1{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PipelineRequest1) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineRequest1) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PipelineRequest1) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PipelineRequest1) SetName(v string) {
	o.Name = &v
}

// GetDealProbability returns the DealProbability field value if set, zero value otherwise.
func (o *PipelineRequest1) GetDealProbability() float32 {
	if o == nil || IsNil(o.DealProbability) {
		var ret float32
		return ret
	}
	return *o.DealProbability
}

// GetDealProbabilityOk returns a tuple with the DealProbability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineRequest1) GetDealProbabilityOk() (*float32, bool) {
	if o == nil || IsNil(o.DealProbability) {
		return nil, false
	}
	return o.DealProbability, true
}

// HasDealProbability returns a boolean if a field has been set.
func (o *PipelineRequest1) HasDealProbability() bool {
	if o != nil && !IsNil(o.DealProbability) {
		return true
	}

	return false
}

// SetDealProbability gets a reference to the given float32 and assigns it to the DealProbability field.
func (o *PipelineRequest1) SetDealProbability(v float32) {
	o.DealProbability = &v
}

// GetOrderNr returns the OrderNr field value if set, zero value otherwise.
func (o *PipelineRequest1) GetOrderNr() int32 {
	if o == nil || IsNil(o.OrderNr) {
		var ret int32
		return ret
	}
	return *o.OrderNr
}

// GetOrderNrOk returns a tuple with the OrderNr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineRequest1) GetOrderNrOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderNr) {
		return nil, false
	}
	return o.OrderNr, true
}

// HasOrderNr returns a boolean if a field has been set.
func (o *PipelineRequest1) HasOrderNr() bool {
	if o != nil && !IsNil(o.OrderNr) {
		return true
	}

	return false
}

// SetOrderNr gets a reference to the given int32 and assigns it to the OrderNr field.
func (o *PipelineRequest1) SetOrderNr(v int32) {
	o.OrderNr = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PipelineRequest1) GetActive() float32 {
	if o == nil || IsNil(o.Active) {
		var ret float32
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineRequest1) GetActiveOk() (*float32, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PipelineRequest1) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given float32 and assigns it to the Active field.
func (o *PipelineRequest1) SetActive(v float32) {
	o.Active = &v
}

func (o PipelineRequest1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineRequest1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DealProbability) {
		toSerialize["deal_probability"] = o.DealProbability
	}
	if !IsNil(o.OrderNr) {
		toSerialize["order_nr"] = o.OrderNr
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	return toSerialize, nil
}

type NullablePipelineRequest1 struct {
	value *PipelineRequest1
	isSet bool
}

func (v NullablePipelineRequest1) Get() *PipelineRequest1 {
	return v.value
}

func (v *NullablePipelineRequest1) Set(val *PipelineRequest1) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineRequest1) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineRequest1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineRequest1(val *PipelineRequest1) *NullablePipelineRequest1 {
	return &NullablePipelineRequest1{value: val, isSet: true}
}

func (v NullablePipelineRequest1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineRequest1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


