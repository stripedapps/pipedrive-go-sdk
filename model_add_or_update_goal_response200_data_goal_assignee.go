/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddOrUpdateGoalResponse200DataGoalAssignee type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOrUpdateGoalResponse200DataGoalAssignee{}

// AddOrUpdateGoalResponse200DataGoalAssignee Who the goal is assigned to
type AddOrUpdateGoalResponse200DataGoalAssignee struct {
	// The ID of the goal assignee
	Id *int32 `json:"id,omitempty"`
	// The type of the assignee
	Type *string `json:"type,omitempty"`
}

// NewAddOrUpdateGoalResponse200DataGoalAssignee instantiates a new AddOrUpdateGoalResponse200DataGoalAssignee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOrUpdateGoalResponse200DataGoalAssignee() *AddOrUpdateGoalResponse200DataGoalAssignee {
	this := AddOrUpdateGoalResponse200DataGoalAssignee{}
	return &this
}

// NewAddOrUpdateGoalResponse200DataGoalAssigneeWithDefaults instantiates a new AddOrUpdateGoalResponse200DataGoalAssignee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOrUpdateGoalResponse200DataGoalAssigneeWithDefaults() *AddOrUpdateGoalResponse200DataGoalAssignee {
	this := AddOrUpdateGoalResponse200DataGoalAssignee{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoalAssignee) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoalAssignee) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoalAssignee) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AddOrUpdateGoalResponse200DataGoalAssignee) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoalAssignee) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoalAssignee) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoalAssignee) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AddOrUpdateGoalResponse200DataGoalAssignee) SetType(v string) {
	o.Type = &v
}

func (o AddOrUpdateGoalResponse200DataGoalAssignee) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOrUpdateGoalResponse200DataGoalAssignee) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAddOrUpdateGoalResponse200DataGoalAssignee struct {
	value *AddOrUpdateGoalResponse200DataGoalAssignee
	isSet bool
}

func (v NullableAddOrUpdateGoalResponse200DataGoalAssignee) Get() *AddOrUpdateGoalResponse200DataGoalAssignee {
	return v.value
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalAssignee) Set(val *AddOrUpdateGoalResponse200DataGoalAssignee) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOrUpdateGoalResponse200DataGoalAssignee) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalAssignee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOrUpdateGoalResponse200DataGoalAssignee(val *AddOrUpdateGoalResponse200DataGoalAssignee) *NullableAddOrUpdateGoalResponse200DataGoalAssignee {
	return &NullableAddOrUpdateGoalResponse200DataGoalAssignee{value: val, isSet: true}
}

func (v NullableAddOrUpdateGoalResponse200DataGoalAssignee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalAssignee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


