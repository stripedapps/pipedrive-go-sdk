/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UnathorizedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnathorizedResponse{}

// UnathorizedResponse struct for UnathorizedResponse
type UnathorizedResponse struct {
	// If the response is successful or not
	Success *bool `json:"success,omitempty"`
	// The error message
	Error *string `json:"error,omitempty"`
	// The response error code
	ErrorCode *int32 `json:"errorCode,omitempty"`
}

// NewUnathorizedResponse instantiates a new UnathorizedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnathorizedResponse() *UnathorizedResponse {
	this := UnathorizedResponse{}
	return &this
}

// NewUnathorizedResponseWithDefaults instantiates a new UnathorizedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnathorizedResponseWithDefaults() *UnathorizedResponse {
	this := UnathorizedResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UnathorizedResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnathorizedResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *UnathorizedResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *UnathorizedResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UnathorizedResponse) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnathorizedResponse) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *UnathorizedResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *UnathorizedResponse) SetError(v string) {
	o.Error = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *UnathorizedResponse) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnathorizedResponse) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *UnathorizedResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *UnathorizedResponse) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

func (o UnathorizedResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnathorizedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	return toSerialize, nil
}

type NullableUnathorizedResponse struct {
	value *UnathorizedResponse
	isSet bool
}

func (v NullableUnathorizedResponse) Get() *UnathorizedResponse {
	return v.value
}

func (v *NullableUnathorizedResponse) Set(val *UnathorizedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnathorizedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnathorizedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnathorizedResponse(val *UnathorizedResponse) *NullableUnathorizedResponse {
	return &NullableUnathorizedResponse{value: val, isSet: true}
}

func (v NullableUnathorizedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnathorizedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


