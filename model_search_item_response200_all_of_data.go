/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchItemResponse200AllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchItemResponse200AllOfData{}

// SearchItemResponse200AllOfData struct for SearchItemResponse200AllOfData
type SearchItemResponse200AllOfData struct {
	// The array of found items
	Items []SearchItemResponse200AllOfDataItemsInner `json:"items,omitempty"`
	// The array of related items if `search_for_related_items` was enabled
	RelatedItems []SearchItemResponse200AllOfDataItemsInner `json:"related_items,omitempty"`
}

// NewSearchItemResponse200AllOfData instantiates a new SearchItemResponse200AllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchItemResponse200AllOfData() *SearchItemResponse200AllOfData {
	this := SearchItemResponse200AllOfData{}
	return &this
}

// NewSearchItemResponse200AllOfDataWithDefaults instantiates a new SearchItemResponse200AllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchItemResponse200AllOfDataWithDefaults() *SearchItemResponse200AllOfData {
	this := SearchItemResponse200AllOfData{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *SearchItemResponse200AllOfData) GetItems() []SearchItemResponse200AllOfDataItemsInner {
	if o == nil || IsNil(o.Items) {
		var ret []SearchItemResponse200AllOfDataItemsInner
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchItemResponse200AllOfData) GetItemsOk() ([]SearchItemResponse200AllOfDataItemsInner, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *SearchItemResponse200AllOfData) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []SearchItemResponse200AllOfDataItemsInner and assigns it to the Items field.
func (o *SearchItemResponse200AllOfData) SetItems(v []SearchItemResponse200AllOfDataItemsInner) {
	o.Items = v
}

// GetRelatedItems returns the RelatedItems field value if set, zero value otherwise.
func (o *SearchItemResponse200AllOfData) GetRelatedItems() []SearchItemResponse200AllOfDataItemsInner {
	if o == nil || IsNil(o.RelatedItems) {
		var ret []SearchItemResponse200AllOfDataItemsInner
		return ret
	}
	return o.RelatedItems
}

// GetRelatedItemsOk returns a tuple with the RelatedItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchItemResponse200AllOfData) GetRelatedItemsOk() ([]SearchItemResponse200AllOfDataItemsInner, bool) {
	if o == nil || IsNil(o.RelatedItems) {
		return nil, false
	}
	return o.RelatedItems, true
}

// HasRelatedItems returns a boolean if a field has been set.
func (o *SearchItemResponse200AllOfData) HasRelatedItems() bool {
	if o != nil && !IsNil(o.RelatedItems) {
		return true
	}

	return false
}

// SetRelatedItems gets a reference to the given []SearchItemResponse200AllOfDataItemsInner and assigns it to the RelatedItems field.
func (o *SearchItemResponse200AllOfData) SetRelatedItems(v []SearchItemResponse200AllOfDataItemsInner) {
	o.RelatedItems = v
}

func (o SearchItemResponse200AllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchItemResponse200AllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.RelatedItems) {
		toSerialize["related_items"] = o.RelatedItems
	}
	return toSerialize, nil
}

type NullableSearchItemResponse200AllOfData struct {
	value *SearchItemResponse200AllOfData
	isSet bool
}

func (v NullableSearchItemResponse200AllOfData) Get() *SearchItemResponse200AllOfData {
	return v.value
}

func (v *NullableSearchItemResponse200AllOfData) Set(val *SearchItemResponse200AllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchItemResponse200AllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchItemResponse200AllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchItemResponse200AllOfData(val *SearchItemResponse200AllOfData) *NullableSearchItemResponse200AllOfData {
	return &NullableSearchItemResponse200AllOfData{value: val, isSet: true}
}

func (v NullableSearchItemResponse200AllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchItemResponse200AllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


