/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddOrganizationRelationshipRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOrganizationRelationshipRequest{}

// AddOrganizationRelationshipRequest struct for AddOrganizationRelationshipRequest
type AddOrganizationRelationshipRequest struct {
	// The ID of the base organization for the returned calculated values
	OrgId *int32 `json:"org_id,omitempty"`
	// The type of organization relationship
	Type string `json:"type"`
	// The owner of the relationship. If type is `parent`, then the owner is the parent and the linked organization is the daughter.
	RelOwnerOrgId int32 `json:"rel_owner_org_id"`
	// The linked organization in the relationship. If type is `parent`, then the linked organization is the daughter.
	RelLinkedOrgId int32 `json:"rel_linked_org_id"`
}

type _AddOrganizationRelationshipRequest AddOrganizationRelationshipRequest

// NewAddOrganizationRelationshipRequest instantiates a new AddOrganizationRelationshipRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOrganizationRelationshipRequest(type_ string, relOwnerOrgId int32, relLinkedOrgId int32) *AddOrganizationRelationshipRequest {
	this := AddOrganizationRelationshipRequest{}
	this.Type = type_
	this.RelOwnerOrgId = relOwnerOrgId
	this.RelLinkedOrgId = relLinkedOrgId
	return &this
}

// NewAddOrganizationRelationshipRequestWithDefaults instantiates a new AddOrganizationRelationshipRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOrganizationRelationshipRequestWithDefaults() *AddOrganizationRelationshipRequest {
	this := AddOrganizationRelationshipRequest{}
	return &this
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *AddOrganizationRelationshipRequest) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipRequest) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *AddOrganizationRelationshipRequest) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *AddOrganizationRelationshipRequest) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetType returns the Type field value
func (o *AddOrganizationRelationshipRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddOrganizationRelationshipRequest) SetType(v string) {
	o.Type = v
}

// GetRelOwnerOrgId returns the RelOwnerOrgId field value
func (o *AddOrganizationRelationshipRequest) GetRelOwnerOrgId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelOwnerOrgId
}

// GetRelOwnerOrgIdOk returns a tuple with the RelOwnerOrgId field value
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipRequest) GetRelOwnerOrgIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelOwnerOrgId, true
}

// SetRelOwnerOrgId sets field value
func (o *AddOrganizationRelationshipRequest) SetRelOwnerOrgId(v int32) {
	o.RelOwnerOrgId = v
}

// GetRelLinkedOrgId returns the RelLinkedOrgId field value
func (o *AddOrganizationRelationshipRequest) GetRelLinkedOrgId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelLinkedOrgId
}

// GetRelLinkedOrgIdOk returns a tuple with the RelLinkedOrgId field value
// and a boolean to check if the value has been set.
func (o *AddOrganizationRelationshipRequest) GetRelLinkedOrgIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelLinkedOrgId, true
}

// SetRelLinkedOrgId sets field value
func (o *AddOrganizationRelationshipRequest) SetRelLinkedOrgId(v int32) {
	o.RelLinkedOrgId = v
}

func (o AddOrganizationRelationshipRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOrganizationRelationshipRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	toSerialize["type"] = o.Type
	toSerialize["rel_owner_org_id"] = o.RelOwnerOrgId
	toSerialize["rel_linked_org_id"] = o.RelLinkedOrgId
	return toSerialize, nil
}

func (o *AddOrganizationRelationshipRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"rel_owner_org_id",
		"rel_linked_org_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddOrganizationRelationshipRequest := _AddOrganizationRelationshipRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddOrganizationRelationshipRequest)

	if err != nil {
		return err
	}

	*o = AddOrganizationRelationshipRequest(varAddOrganizationRelationshipRequest)

	return err
}

type NullableAddOrganizationRelationshipRequest struct {
	value *AddOrganizationRelationshipRequest
	isSet bool
}

func (v NullableAddOrganizationRelationshipRequest) Get() *AddOrganizationRelationshipRequest {
	return v.value
}

func (v *NullableAddOrganizationRelationshipRequest) Set(val *AddOrganizationRelationshipRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOrganizationRelationshipRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOrganizationRelationshipRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOrganizationRelationshipRequest(val *AddOrganizationRelationshipRequest) *NullableAddOrganizationRelationshipRequest {
	return &NullableAddOrganizationRelationshipRequest{value: val, isSet: true}
}

func (v NullableAddOrganizationRelationshipRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOrganizationRelationshipRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


