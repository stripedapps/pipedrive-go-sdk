/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddOrUpdateGoalResponse200DataGoalExpectedOutcome type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOrUpdateGoalResponse200DataGoalExpectedOutcome{}

// AddOrUpdateGoalResponse200DataGoalExpectedOutcome The expected outcome of the goal
type AddOrUpdateGoalResponse200DataGoalExpectedOutcome struct {
	// The numeric target of the goal
	Target *int32 `json:"target,omitempty"`
	// The tracking metric of the goal
	TrackingMetric *string `json:"tracking_metric,omitempty"`
}

// NewAddOrUpdateGoalResponse200DataGoalExpectedOutcome instantiates a new AddOrUpdateGoalResponse200DataGoalExpectedOutcome object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOrUpdateGoalResponse200DataGoalExpectedOutcome() *AddOrUpdateGoalResponse200DataGoalExpectedOutcome {
	this := AddOrUpdateGoalResponse200DataGoalExpectedOutcome{}
	return &this
}

// NewAddOrUpdateGoalResponse200DataGoalExpectedOutcomeWithDefaults instantiates a new AddOrUpdateGoalResponse200DataGoalExpectedOutcome object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOrUpdateGoalResponse200DataGoalExpectedOutcomeWithDefaults() *AddOrUpdateGoalResponse200DataGoalExpectedOutcome {
	this := AddOrUpdateGoalResponse200DataGoalExpectedOutcome{}
	return &this
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) GetTarget() int32 {
	if o == nil || IsNil(o.Target) {
		var ret int32
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) GetTargetOk() (*int32, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given int32 and assigns it to the Target field.
func (o *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) SetTarget(v int32) {
	o.Target = &v
}

// GetTrackingMetric returns the TrackingMetric field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) GetTrackingMetric() string {
	if o == nil || IsNil(o.TrackingMetric) {
		var ret string
		return ret
	}
	return *o.TrackingMetric
}

// GetTrackingMetricOk returns a tuple with the TrackingMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) GetTrackingMetricOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingMetric) {
		return nil, false
	}
	return o.TrackingMetric, true
}

// HasTrackingMetric returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) HasTrackingMetric() bool {
	if o != nil && !IsNil(o.TrackingMetric) {
		return true
	}

	return false
}

// SetTrackingMetric gets a reference to the given string and assigns it to the TrackingMetric field.
func (o *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) SetTrackingMetric(v string) {
	o.TrackingMetric = &v
}

func (o AddOrUpdateGoalResponse200DataGoalExpectedOutcome) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOrUpdateGoalResponse200DataGoalExpectedOutcome) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.TrackingMetric) {
		toSerialize["tracking_metric"] = o.TrackingMetric
	}
	return toSerialize, nil
}

type NullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome struct {
	value *AddOrUpdateGoalResponse200DataGoalExpectedOutcome
	isSet bool
}

func (v NullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome) Get() *AddOrUpdateGoalResponse200DataGoalExpectedOutcome {
	return v.value
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome) Set(val *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome(val *AddOrUpdateGoalResponse200DataGoalExpectedOutcome) *NullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome {
	return &NullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome{value: val, isSet: true}
}

func (v NullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalExpectedOutcome) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


