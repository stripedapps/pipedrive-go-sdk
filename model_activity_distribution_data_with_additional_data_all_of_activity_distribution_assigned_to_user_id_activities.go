/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities{}

// ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities The count of activities related to the user grouped by activity type
type ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities struct {
	// The count of activities related to a specific type
	ACTIVITY_TYPE_NAME *int32 `json:"ACTIVITY_TYPE_NAME,omitempty"`
}

// NewActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities instantiates a new ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities() *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities {
	this := ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities{}
	return &this
}

// NewActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivitiesWithDefaults instantiates a new ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivitiesWithDefaults() *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities {
	this := ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities{}
	return &this
}

// GetACTIVITY_TYPE_NAME returns the ACTIVITY_TYPE_NAME field value if set, zero value otherwise.
func (o *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) GetACTIVITY_TYPE_NAME() int32 {
	if o == nil || IsNil(o.ACTIVITY_TYPE_NAME) {
		var ret int32
		return ret
	}
	return *o.ACTIVITY_TYPE_NAME
}

// GetACTIVITY_TYPE_NAMEOk returns a tuple with the ACTIVITY_TYPE_NAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) GetACTIVITY_TYPE_NAMEOk() (*int32, bool) {
	if o == nil || IsNil(o.ACTIVITY_TYPE_NAME) {
		return nil, false
	}
	return o.ACTIVITY_TYPE_NAME, true
}

// HasACTIVITY_TYPE_NAME returns a boolean if a field has been set.
func (o *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) HasACTIVITY_TYPE_NAME() bool {
	if o != nil && !IsNil(o.ACTIVITY_TYPE_NAME) {
		return true
	}

	return false
}

// SetACTIVITY_TYPE_NAME gets a reference to the given int32 and assigns it to the ACTIVITY_TYPE_NAME field.
func (o *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) SetACTIVITY_TYPE_NAME(v int32) {
	o.ACTIVITY_TYPE_NAME = &v
}

func (o ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ACTIVITY_TYPE_NAME) {
		toSerialize["ACTIVITY_TYPE_NAME"] = o.ACTIVITY_TYPE_NAME
	}
	return toSerialize, nil
}

type NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities struct {
	value *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities
	isSet bool
}

func (v NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) Get() *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities {
	return v.value
}

func (v *NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) Set(val *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities(val *ActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) *NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities {
	return &NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities{value: val, isSet: true}
}

func (v NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityDistributionDataWithAdditionalDataAllOfActivityDistributionASSIGNEDTOUSERIDActivities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


