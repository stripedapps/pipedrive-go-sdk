/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddOrUpdateGoalResponse200DataGoalTypeParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOrUpdateGoalResponse200DataGoalTypeParams{}

// AddOrUpdateGoalResponse200DataGoalTypeParams The parameters that accompany the goal type
type AddOrUpdateGoalResponse200DataGoalTypeParams struct {
	// The IDs of pipelines of the goal
	PipelineId []int32 `json:"pipeline_id,omitempty"`
	// The IDs of activity types of the goal
	ActivityTypeId []int32 `json:"activity_type_id,omitempty"`
}

// NewAddOrUpdateGoalResponse200DataGoalTypeParams instantiates a new AddOrUpdateGoalResponse200DataGoalTypeParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOrUpdateGoalResponse200DataGoalTypeParams() *AddOrUpdateGoalResponse200DataGoalTypeParams {
	this := AddOrUpdateGoalResponse200DataGoalTypeParams{}
	return &this
}

// NewAddOrUpdateGoalResponse200DataGoalTypeParamsWithDefaults instantiates a new AddOrUpdateGoalResponse200DataGoalTypeParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOrUpdateGoalResponse200DataGoalTypeParamsWithDefaults() *AddOrUpdateGoalResponse200DataGoalTypeParams {
	this := AddOrUpdateGoalResponse200DataGoalTypeParams{}
	return &this
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoalTypeParams) GetPipelineId() []int32 {
	if o == nil || IsNil(o.PipelineId) {
		var ret []int32
		return ret
	}
	return o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoalTypeParams) GetPipelineIdOk() ([]int32, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoalTypeParams) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given []int32 and assigns it to the PipelineId field.
func (o *AddOrUpdateGoalResponse200DataGoalTypeParams) SetPipelineId(v []int32) {
	o.PipelineId = v
}

// GetActivityTypeId returns the ActivityTypeId field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoalTypeParams) GetActivityTypeId() []int32 {
	if o == nil || IsNil(o.ActivityTypeId) {
		var ret []int32
		return ret
	}
	return o.ActivityTypeId
}

// GetActivityTypeIdOk returns a tuple with the ActivityTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoalTypeParams) GetActivityTypeIdOk() ([]int32, bool) {
	if o == nil || IsNil(o.ActivityTypeId) {
		return nil, false
	}
	return o.ActivityTypeId, true
}

// HasActivityTypeId returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoalTypeParams) HasActivityTypeId() bool {
	if o != nil && !IsNil(o.ActivityTypeId) {
		return true
	}

	return false
}

// SetActivityTypeId gets a reference to the given []int32 and assigns it to the ActivityTypeId field.
func (o *AddOrUpdateGoalResponse200DataGoalTypeParams) SetActivityTypeId(v []int32) {
	o.ActivityTypeId = v
}

func (o AddOrUpdateGoalResponse200DataGoalTypeParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOrUpdateGoalResponse200DataGoalTypeParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PipelineId) {
		toSerialize["pipeline_id"] = o.PipelineId
	}
	if !IsNil(o.ActivityTypeId) {
		toSerialize["activity_type_id"] = o.ActivityTypeId
	}
	return toSerialize, nil
}

type NullableAddOrUpdateGoalResponse200DataGoalTypeParams struct {
	value *AddOrUpdateGoalResponse200DataGoalTypeParams
	isSet bool
}

func (v NullableAddOrUpdateGoalResponse200DataGoalTypeParams) Get() *AddOrUpdateGoalResponse200DataGoalTypeParams {
	return v.value
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalTypeParams) Set(val *AddOrUpdateGoalResponse200DataGoalTypeParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOrUpdateGoalResponse200DataGoalTypeParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalTypeParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOrUpdateGoalResponse200DataGoalTypeParams(val *AddOrUpdateGoalResponse200DataGoalTypeParams) *NullableAddOrUpdateGoalResponse200DataGoalTypeParams {
	return &NullableAddOrUpdateGoalResponse200DataGoalTypeParams{value: val, isSet: true}
}

func (v NullableAddOrUpdateGoalResponse200DataGoalTypeParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOrUpdateGoalResponse200DataGoalTypeParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


