/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddRoleAssignmentResponse200AllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddRoleAssignmentResponse200AllOfData{}

// AddRoleAssignmentResponse200AllOfData The response data
type AddRoleAssignmentResponse200AllOfData struct {
	// The ID of the user that was added to the role
	UserId *int32 `json:"user_id,omitempty"`
	// The ID of the role the user was added to
	RoleId *int32 `json:"role_id,omitempty"`
}

// NewAddRoleAssignmentResponse200AllOfData instantiates a new AddRoleAssignmentResponse200AllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddRoleAssignmentResponse200AllOfData() *AddRoleAssignmentResponse200AllOfData {
	this := AddRoleAssignmentResponse200AllOfData{}
	return &this
}

// NewAddRoleAssignmentResponse200AllOfDataWithDefaults instantiates a new AddRoleAssignmentResponse200AllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddRoleAssignmentResponse200AllOfDataWithDefaults() *AddRoleAssignmentResponse200AllOfData {
	this := AddRoleAssignmentResponse200AllOfData{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AddRoleAssignmentResponse200AllOfData) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRoleAssignmentResponse200AllOfData) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AddRoleAssignmentResponse200AllOfData) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *AddRoleAssignmentResponse200AllOfData) SetUserId(v int32) {
	o.UserId = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *AddRoleAssignmentResponse200AllOfData) GetRoleId() int32 {
	if o == nil || IsNil(o.RoleId) {
		var ret int32
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRoleAssignmentResponse200AllOfData) GetRoleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *AddRoleAssignmentResponse200AllOfData) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int32 and assigns it to the RoleId field.
func (o *AddRoleAssignmentResponse200AllOfData) SetRoleId(v int32) {
	o.RoleId = &v
}

func (o AddRoleAssignmentResponse200AllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddRoleAssignmentResponse200AllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.RoleId) {
		toSerialize["role_id"] = o.RoleId
	}
	return toSerialize, nil
}

type NullableAddRoleAssignmentResponse200AllOfData struct {
	value *AddRoleAssignmentResponse200AllOfData
	isSet bool
}

func (v NullableAddRoleAssignmentResponse200AllOfData) Get() *AddRoleAssignmentResponse200AllOfData {
	return v.value
}

func (v *NullableAddRoleAssignmentResponse200AllOfData) Set(val *AddRoleAssignmentResponse200AllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableAddRoleAssignmentResponse200AllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableAddRoleAssignmentResponse200AllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddRoleAssignmentResponse200AllOfData(val *AddRoleAssignmentResponse200AllOfData) *NullableAddRoleAssignmentResponse200AllOfData {
	return &NullableAddRoleAssignmentResponse200AllOfData{value: val, isSet: true}
}

func (v NullableAddRoleAssignmentResponse200AllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddRoleAssignmentResponse200AllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


