/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DealOrganizationDataWithId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DealOrganizationDataWithId{}

// DealOrganizationDataWithId struct for DealOrganizationDataWithId
type DealOrganizationDataWithId struct {
	// The name of the organization associated with the deal
	Name *string `json:"name,omitempty"`
	// The number of people connected with the organization that is associated with the deal
	PeopleCount *int32 `json:"people_count,omitempty"`
	// The ID of the owner of the organization that is associated with the deal
	OwnerId *int32 `json:"owner_id,omitempty"`
	// The address of the organization that is associated with the deal
	Address *string `json:"address,omitempty"`
	// Whether the associated organization is active or not
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// The BCC email of the organization associated with the deal
	CcEmail *string `json:"cc_email,omitempty"`
	// The ID of the organization associated with the deal
	Value *int32 `json:"value,omitempty"`
}

// NewDealOrganizationDataWithId instantiates a new DealOrganizationDataWithId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDealOrganizationDataWithId() *DealOrganizationDataWithId {
	this := DealOrganizationDataWithId{}
	return &this
}

// NewDealOrganizationDataWithIdWithDefaults instantiates a new DealOrganizationDataWithId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDealOrganizationDataWithIdWithDefaults() *DealOrganizationDataWithId {
	this := DealOrganizationDataWithId{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DealOrganizationDataWithId) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealOrganizationDataWithId) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DealOrganizationDataWithId) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DealOrganizationDataWithId) SetName(v string) {
	o.Name = &v
}

// GetPeopleCount returns the PeopleCount field value if set, zero value otherwise.
func (o *DealOrganizationDataWithId) GetPeopleCount() int32 {
	if o == nil || IsNil(o.PeopleCount) {
		var ret int32
		return ret
	}
	return *o.PeopleCount
}

// GetPeopleCountOk returns a tuple with the PeopleCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealOrganizationDataWithId) GetPeopleCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PeopleCount) {
		return nil, false
	}
	return o.PeopleCount, true
}

// HasPeopleCount returns a boolean if a field has been set.
func (o *DealOrganizationDataWithId) HasPeopleCount() bool {
	if o != nil && !IsNil(o.PeopleCount) {
		return true
	}

	return false
}

// SetPeopleCount gets a reference to the given int32 and assigns it to the PeopleCount field.
func (o *DealOrganizationDataWithId) SetPeopleCount(v int32) {
	o.PeopleCount = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *DealOrganizationDataWithId) GetOwnerId() int32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealOrganizationDataWithId) GetOwnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *DealOrganizationDataWithId) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *DealOrganizationDataWithId) SetOwnerId(v int32) {
	o.OwnerId = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DealOrganizationDataWithId) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealOrganizationDataWithId) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DealOrganizationDataWithId) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *DealOrganizationDataWithId) SetAddress(v string) {
	o.Address = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *DealOrganizationDataWithId) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealOrganizationDataWithId) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *DealOrganizationDataWithId) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *DealOrganizationDataWithId) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetCcEmail returns the CcEmail field value if set, zero value otherwise.
func (o *DealOrganizationDataWithId) GetCcEmail() string {
	if o == nil || IsNil(o.CcEmail) {
		var ret string
		return ret
	}
	return *o.CcEmail
}

// GetCcEmailOk returns a tuple with the CcEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealOrganizationDataWithId) GetCcEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CcEmail) {
		return nil, false
	}
	return o.CcEmail, true
}

// HasCcEmail returns a boolean if a field has been set.
func (o *DealOrganizationDataWithId) HasCcEmail() bool {
	if o != nil && !IsNil(o.CcEmail) {
		return true
	}

	return false
}

// SetCcEmail gets a reference to the given string and assigns it to the CcEmail field.
func (o *DealOrganizationDataWithId) SetCcEmail(v string) {
	o.CcEmail = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DealOrganizationDataWithId) GetValue() int32 {
	if o == nil || IsNil(o.Value) {
		var ret int32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealOrganizationDataWithId) GetValueOk() (*int32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DealOrganizationDataWithId) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given int32 and assigns it to the Value field.
func (o *DealOrganizationDataWithId) SetValue(v int32) {
	o.Value = &v
}

func (o DealOrganizationDataWithId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DealOrganizationDataWithId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PeopleCount) {
		toSerialize["people_count"] = o.PeopleCount
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.CcEmail) {
		toSerialize["cc_email"] = o.CcEmail
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableDealOrganizationDataWithId struct {
	value *DealOrganizationDataWithId
	isSet bool
}

func (v NullableDealOrganizationDataWithId) Get() *DealOrganizationDataWithId {
	return v.value
}

func (v *NullableDealOrganizationDataWithId) Set(val *DealOrganizationDataWithId) {
	v.value = val
	v.isSet = true
}

func (v NullableDealOrganizationDataWithId) IsSet() bool {
	return v.isSet
}

func (v *NullableDealOrganizationDataWithId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDealOrganizationDataWithId(val *DealOrganizationDataWithId) *NullableDealOrganizationDataWithId {
	return &NullableDealOrganizationDataWithId{value: val, isSet: true}
}

func (v NullableDealOrganizationDataWithId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDealOrganizationDataWithId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


