/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateLeadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLeadRequest{}

// UpdateLeadRequest struct for UpdateLeadRequest
type UpdateLeadRequest struct {
	// The name of the lead
	Title NullableString `json:"title,omitempty"`
	// The ID of the user which will be the owner of the created lead. If not provided, the user making the request will be used.
	OwnerId *int32 `json:"owner_id,omitempty"`
	// The IDs of the lead labels which will be associated with the lead
	LabelIds []string `json:"label_ids,omitempty"`
	// The ID of a person which this lead will be linked to. If the person does not exist yet, it needs to be created first. A lead always has to be linked to a person or organization or both. 
	PersonId NullableInt32 `json:"person_id,omitempty"`
	// The ID of an organization which this lead will be linked to. If the organization does not exist yet, it needs to be created first. A lead always has to be linked to a person or organization or both.
	OrganizationId NullableInt32 `json:"organization_id,omitempty"`
	// A flag indicating whether the lead is archived or not
	IsArchived *bool `json:"is_archived,omitempty"`
	Value NullableGetLeadsResponse200DataInnerValue `json:"value,omitempty"`
	// The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.
	ExpectedCloseDate NullableString `json:"expected_close_date,omitempty"`
	VisibleTo *string `json:"visible_to,omitempty"`
	// A flag indicating whether the lead was seen by someone in the Pipedrive UI
	WasSeen *bool `json:"was_seen,omitempty"`
	// The ID of Marketing channel this lead was created from. Provided value must be one of the channels configured for your company which you can fetch with <a href=\"https://developers.pipedrive.com/docs/api/v1/DealFields#getDealField\" target=\"_blank\" rel=\"noopener noreferrer\">GET /v1/dealFields</a>.
	Channel NullableInt32 `json:"channel,omitempty"`
	// The optional ID to further distinguish the Marketing channel.
	ChannelId NullableString `json:"channel_id,omitempty"`
}

// NewUpdateLeadRequest instantiates a new UpdateLeadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLeadRequest() *UpdateLeadRequest {
	this := UpdateLeadRequest{}
	return &this
}

// NewUpdateLeadRequestWithDefaults instantiates a new UpdateLeadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLeadRequestWithDefaults() *UpdateLeadRequest {
	this := UpdateLeadRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLeadRequest) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLeadRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *UpdateLeadRequest) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *UpdateLeadRequest) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *UpdateLeadRequest) UnsetTitle() {
	o.Title.Unset()
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *UpdateLeadRequest) GetOwnerId() int32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLeadRequest) GetOwnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *UpdateLeadRequest) SetOwnerId(v int32) {
	o.OwnerId = &v
}

// GetLabelIds returns the LabelIds field value if set, zero value otherwise.
func (o *UpdateLeadRequest) GetLabelIds() []string {
	if o == nil || IsNil(o.LabelIds) {
		var ret []string
		return ret
	}
	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLeadRequest) GetLabelIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.LabelIds) {
		return nil, false
	}
	return o.LabelIds, true
}

// HasLabelIds returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasLabelIds() bool {
	if o != nil && !IsNil(o.LabelIds) {
		return true
	}

	return false
}

// SetLabelIds gets a reference to the given []string and assigns it to the LabelIds field.
func (o *UpdateLeadRequest) SetLabelIds(v []string) {
	o.LabelIds = v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLeadRequest) GetPersonId() int32 {
	if o == nil || IsNil(o.PersonId.Get()) {
		var ret int32
		return ret
	}
	return *o.PersonId.Get()
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLeadRequest) GetPersonIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PersonId.Get(), o.PersonId.IsSet()
}

// HasPersonId returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasPersonId() bool {
	if o != nil && o.PersonId.IsSet() {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given NullableInt32 and assigns it to the PersonId field.
func (o *UpdateLeadRequest) SetPersonId(v int32) {
	o.PersonId.Set(&v)
}
// SetPersonIdNil sets the value for PersonId to be an explicit nil
func (o *UpdateLeadRequest) SetPersonIdNil() {
	o.PersonId.Set(nil)
}

// UnsetPersonId ensures that no value is present for PersonId, not even an explicit nil
func (o *UpdateLeadRequest) UnsetPersonId() {
	o.PersonId.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLeadRequest) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLeadRequest) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *UpdateLeadRequest) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *UpdateLeadRequest) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *UpdateLeadRequest) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *UpdateLeadRequest) GetIsArchived() bool {
	if o == nil || IsNil(o.IsArchived) {
		var ret bool
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLeadRequest) GetIsArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasIsArchived() bool {
	if o != nil && !IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given bool and assigns it to the IsArchived field.
func (o *UpdateLeadRequest) SetIsArchived(v bool) {
	o.IsArchived = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLeadRequest) GetValue() GetLeadsResponse200DataInnerValue {
	if o == nil || IsNil(o.Value.Get()) {
		var ret GetLeadsResponse200DataInnerValue
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLeadRequest) GetValueOk() (*GetLeadsResponse200DataInnerValue, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableGetLeadsResponse200DataInnerValue and assigns it to the Value field.
func (o *UpdateLeadRequest) SetValue(v GetLeadsResponse200DataInnerValue) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *UpdateLeadRequest) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *UpdateLeadRequest) UnsetValue() {
	o.Value.Unset()
}

// GetExpectedCloseDate returns the ExpectedCloseDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLeadRequest) GetExpectedCloseDate() string {
	if o == nil || IsNil(o.ExpectedCloseDate.Get()) {
		var ret string
		return ret
	}
	return *o.ExpectedCloseDate.Get()
}

// GetExpectedCloseDateOk returns a tuple with the ExpectedCloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLeadRequest) GetExpectedCloseDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpectedCloseDate.Get(), o.ExpectedCloseDate.IsSet()
}

// HasExpectedCloseDate returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasExpectedCloseDate() bool {
	if o != nil && o.ExpectedCloseDate.IsSet() {
		return true
	}

	return false
}

// SetExpectedCloseDate gets a reference to the given NullableString and assigns it to the ExpectedCloseDate field.
func (o *UpdateLeadRequest) SetExpectedCloseDate(v string) {
	o.ExpectedCloseDate.Set(&v)
}
// SetExpectedCloseDateNil sets the value for ExpectedCloseDate to be an explicit nil
func (o *UpdateLeadRequest) SetExpectedCloseDateNil() {
	o.ExpectedCloseDate.Set(nil)
}

// UnsetExpectedCloseDate ensures that no value is present for ExpectedCloseDate, not even an explicit nil
func (o *UpdateLeadRequest) UnsetExpectedCloseDate() {
	o.ExpectedCloseDate.Unset()
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *UpdateLeadRequest) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLeadRequest) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *UpdateLeadRequest) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

// GetWasSeen returns the WasSeen field value if set, zero value otherwise.
func (o *UpdateLeadRequest) GetWasSeen() bool {
	if o == nil || IsNil(o.WasSeen) {
		var ret bool
		return ret
	}
	return *o.WasSeen
}

// GetWasSeenOk returns a tuple with the WasSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLeadRequest) GetWasSeenOk() (*bool, bool) {
	if o == nil || IsNil(o.WasSeen) {
		return nil, false
	}
	return o.WasSeen, true
}

// HasWasSeen returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasWasSeen() bool {
	if o != nil && !IsNil(o.WasSeen) {
		return true
	}

	return false
}

// SetWasSeen gets a reference to the given bool and assigns it to the WasSeen field.
func (o *UpdateLeadRequest) SetWasSeen(v bool) {
	o.WasSeen = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLeadRequest) GetChannel() int32 {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret int32
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLeadRequest) GetChannelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableInt32 and assigns it to the Channel field.
func (o *UpdateLeadRequest) SetChannel(v int32) {
	o.Channel.Set(&v)
}
// SetChannelNil sets the value for Channel to be an explicit nil
func (o *UpdateLeadRequest) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *UpdateLeadRequest) UnsetChannel() {
	o.Channel.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLeadRequest) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLeadRequest) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *UpdateLeadRequest) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *UpdateLeadRequest) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *UpdateLeadRequest) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *UpdateLeadRequest) UnsetChannelId() {
	o.ChannelId.Unset()
}

func (o UpdateLeadRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLeadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.LabelIds) {
		toSerialize["label_ids"] = o.LabelIds
	}
	if o.PersonId.IsSet() {
		toSerialize["person_id"] = o.PersonId.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organization_id"] = o.OrganizationId.Get()
	}
	if !IsNil(o.IsArchived) {
		toSerialize["is_archived"] = o.IsArchived
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if o.ExpectedCloseDate.IsSet() {
		toSerialize["expected_close_date"] = o.ExpectedCloseDate.Get()
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	if !IsNil(o.WasSeen) {
		toSerialize["was_seen"] = o.WasSeen
	}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["channel_id"] = o.ChannelId.Get()
	}
	return toSerialize, nil
}

type NullableUpdateLeadRequest struct {
	value *UpdateLeadRequest
	isSet bool
}

func (v NullableUpdateLeadRequest) Get() *UpdateLeadRequest {
	return v.value
}

func (v *NullableUpdateLeadRequest) Set(val *UpdateLeadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLeadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLeadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLeadRequest(val *UpdateLeadRequest) *NullableUpdateLeadRequest {
	return &NullableUpdateLeadRequest{value: val, isSet: true}
}

func (v NullableUpdateLeadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLeadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


