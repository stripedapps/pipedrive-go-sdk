/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchDealsResponse200AllOfDataItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchDealsResponse200AllOfDataItemsInner{}

// SearchDealsResponse200AllOfDataItemsInner struct for SearchDealsResponse200AllOfDataItemsInner
type SearchDealsResponse200AllOfDataItemsInner struct {
	// Search result relevancy
	ResultScore *float32 `json:"result_score,omitempty"`
	Item *SearchDealsResponse200AllOfDataItemsInnerItem `json:"item,omitempty"`
}

// NewSearchDealsResponse200AllOfDataItemsInner instantiates a new SearchDealsResponse200AllOfDataItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchDealsResponse200AllOfDataItemsInner() *SearchDealsResponse200AllOfDataItemsInner {
	this := SearchDealsResponse200AllOfDataItemsInner{}
	return &this
}

// NewSearchDealsResponse200AllOfDataItemsInnerWithDefaults instantiates a new SearchDealsResponse200AllOfDataItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchDealsResponse200AllOfDataItemsInnerWithDefaults() *SearchDealsResponse200AllOfDataItemsInner {
	this := SearchDealsResponse200AllOfDataItemsInner{}
	return &this
}

// GetResultScore returns the ResultScore field value if set, zero value otherwise.
func (o *SearchDealsResponse200AllOfDataItemsInner) GetResultScore() float32 {
	if o == nil || IsNil(o.ResultScore) {
		var ret float32
		return ret
	}
	return *o.ResultScore
}

// GetResultScoreOk returns a tuple with the ResultScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDealsResponse200AllOfDataItemsInner) GetResultScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.ResultScore) {
		return nil, false
	}
	return o.ResultScore, true
}

// HasResultScore returns a boolean if a field has been set.
func (o *SearchDealsResponse200AllOfDataItemsInner) HasResultScore() bool {
	if o != nil && !IsNil(o.ResultScore) {
		return true
	}

	return false
}

// SetResultScore gets a reference to the given float32 and assigns it to the ResultScore field.
func (o *SearchDealsResponse200AllOfDataItemsInner) SetResultScore(v float32) {
	o.ResultScore = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *SearchDealsResponse200AllOfDataItemsInner) GetItem() SearchDealsResponse200AllOfDataItemsInnerItem {
	if o == nil || IsNil(o.Item) {
		var ret SearchDealsResponse200AllOfDataItemsInnerItem
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDealsResponse200AllOfDataItemsInner) GetItemOk() (*SearchDealsResponse200AllOfDataItemsInnerItem, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *SearchDealsResponse200AllOfDataItemsInner) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given SearchDealsResponse200AllOfDataItemsInnerItem and assigns it to the Item field.
func (o *SearchDealsResponse200AllOfDataItemsInner) SetItem(v SearchDealsResponse200AllOfDataItemsInnerItem) {
	o.Item = &v
}

func (o SearchDealsResponse200AllOfDataItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchDealsResponse200AllOfDataItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResultScore) {
		toSerialize["result_score"] = o.ResultScore
	}
	if !IsNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	return toSerialize, nil
}

type NullableSearchDealsResponse200AllOfDataItemsInner struct {
	value *SearchDealsResponse200AllOfDataItemsInner
	isSet bool
}

func (v NullableSearchDealsResponse200AllOfDataItemsInner) Get() *SearchDealsResponse200AllOfDataItemsInner {
	return v.value
}

func (v *NullableSearchDealsResponse200AllOfDataItemsInner) Set(val *SearchDealsResponse200AllOfDataItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchDealsResponse200AllOfDataItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchDealsResponse200AllOfDataItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchDealsResponse200AllOfDataItemsInner(val *SearchDealsResponse200AllOfDataItemsInner) *NullableSearchDealsResponse200AllOfDataItemsInner {
	return &NullableSearchDealsResponse200AllOfDataItemsInner{value: val, isSet: true}
}

func (v NullableSearchDealsResponse200AllOfDataItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchDealsResponse200AllOfDataItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


