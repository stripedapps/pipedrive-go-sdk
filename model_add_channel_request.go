/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddChannelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddChannelRequest{}

// AddChannelRequest struct for AddChannelRequest
type AddChannelRequest struct {
	// The name of the channel
	Name string `json:"name"`
	// The channel ID
	ProviderChannelId string `json:"provider_channel_id"`
	// The URL for an icon that represents your channel
	AvatarUrl *string `json:"avatar_url,omitempty"`
	// If true, enables templates logic on UI. Requires getTemplates endpoint implemented. Find out more [here](https://pipedrive.readme.io/docs/implementing-messaging-app-extension).
	TemplateSupport *bool `json:"template_support,omitempty"`
	// It controls the icons (like the icon next to the conversation)
	ProviderType *string `json:"provider_type,omitempty"`
}

// NewAddChannelRequest instantiates a new AddChannelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddChannelRequest(name string, providerChannelId string) *AddChannelRequest {
	this := AddChannelRequest{}
	this.Name = name
	this.ProviderChannelId = providerChannelId
	var templateSupport bool = false
	this.TemplateSupport = &templateSupport
	var providerType string = "other"
	this.ProviderType = &providerType
	return &this
}

// NewAddChannelRequestWithDefaults instantiates a new AddChannelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddChannelRequestWithDefaults() *AddChannelRequest {
	this := AddChannelRequest{}
	var templateSupport bool = false
	this.TemplateSupport = &templateSupport
	var providerType string = "other"
	this.ProviderType = &providerType
	return &this
}

// GetName returns the Name field value
func (o *AddChannelRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddChannelRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddChannelRequest) SetName(v string) {
	o.Name = v
}

// GetProviderChannelId returns the ProviderChannelId field value
func (o *AddChannelRequest) GetProviderChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderChannelId
}

// GetProviderChannelIdOk returns a tuple with the ProviderChannelId field value
// and a boolean to check if the value has been set.
func (o *AddChannelRequest) GetProviderChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderChannelId, true
}

// SetProviderChannelId sets field value
func (o *AddChannelRequest) SetProviderChannelId(v string) {
	o.ProviderChannelId = v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *AddChannelRequest) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChannelRequest) GetAvatarUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *AddChannelRequest) HasAvatarUrl() bool {
	if o != nil && !IsNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *AddChannelRequest) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetTemplateSupport returns the TemplateSupport field value if set, zero value otherwise.
func (o *AddChannelRequest) GetTemplateSupport() bool {
	if o == nil || IsNil(o.TemplateSupport) {
		var ret bool
		return ret
	}
	return *o.TemplateSupport
}

// GetTemplateSupportOk returns a tuple with the TemplateSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChannelRequest) GetTemplateSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.TemplateSupport) {
		return nil, false
	}
	return o.TemplateSupport, true
}

// HasTemplateSupport returns a boolean if a field has been set.
func (o *AddChannelRequest) HasTemplateSupport() bool {
	if o != nil && !IsNil(o.TemplateSupport) {
		return true
	}

	return false
}

// SetTemplateSupport gets a reference to the given bool and assigns it to the TemplateSupport field.
func (o *AddChannelRequest) SetTemplateSupport(v bool) {
	o.TemplateSupport = &v
}

// GetProviderType returns the ProviderType field value if set, zero value otherwise.
func (o *AddChannelRequest) GetProviderType() string {
	if o == nil || IsNil(o.ProviderType) {
		var ret string
		return ret
	}
	return *o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChannelRequest) GetProviderTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderType) {
		return nil, false
	}
	return o.ProviderType, true
}

// HasProviderType returns a boolean if a field has been set.
func (o *AddChannelRequest) HasProviderType() bool {
	if o != nil && !IsNil(o.ProviderType) {
		return true
	}

	return false
}

// SetProviderType gets a reference to the given string and assigns it to the ProviderType field.
func (o *AddChannelRequest) SetProviderType(v string) {
	o.ProviderType = &v
}

func (o AddChannelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddChannelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["provider_channel_id"] = o.ProviderChannelId
	if !IsNil(o.AvatarUrl) {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if !IsNil(o.TemplateSupport) {
		toSerialize["template_support"] = o.TemplateSupport
	}
	if !IsNil(o.ProviderType) {
		toSerialize["provider_type"] = o.ProviderType
	}
	return toSerialize, nil
}

type NullableAddChannelRequest struct {
	value *AddChannelRequest
	isSet bool
}

func (v NullableAddChannelRequest) Get() *AddChannelRequest {
	return v.value
}

func (v *NullableAddChannelRequest) Set(val *AddChannelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddChannelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddChannelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddChannelRequest(val *AddChannelRequest) *NullableAddChannelRequest {
	return &NullableAddChannelRequest{value: val, isSet: true}
}

func (v NullableAddChannelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddChannelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


