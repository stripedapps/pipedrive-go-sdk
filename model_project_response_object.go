/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjectResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectResponseObject{}

// ProjectResponseObject struct for ProjectResponseObject
type ProjectResponseObject struct {
	// The ID of the project, generated when the task was created
	Id *int32 `json:"id,omitempty"`
	// The title of the project
	Title *string `json:"title,omitempty"`
	// The ID of the board this project is associated with
	BoardId *float32 `json:"board_id,omitempty"`
	// The ID of the phase this project is associated with
	PhaseId *float32 `json:"phase_id,omitempty"`
	// The description of the project
	Description *string `json:"description,omitempty"`
	// The status of the project
	Status *string `json:"status,omitempty"`
	// The ID of a project owner
	OwnerId *float32 `json:"owner_id,omitempty"`
	// The start date of the project. Format: YYYY-MM-DD.
	StartDate *string `json:"start_date,omitempty"`
	// The end date of the project. Format: YYYY-MM-DD.
	EndDate *string `json:"end_date,omitempty"`
	// An array of IDs of the deals this project is associated with
	DealIds []int32 `json:"deal_ids,omitempty"`
	// The ID of the organization this project is associated with
	OrgId *float32 `json:"org_id,omitempty"`
	// The ID of the person this project is associated with
	PersonId *float32 `json:"person_id,omitempty"`
	// An array of IDs of the labels this project has
	Labels []int32 `json:"labels,omitempty"`
	// The creation date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
	AddTime *string `json:"add_time,omitempty"`
	// The update date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
	UpdateTime *string `json:"update_time,omitempty"`
	// The status changed date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
	StatusChangeTime *string `json:"status_change_time,omitempty"`
	// The archived date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS. If not archived then 'null'.
	ArchiveTime *string `json:"archive_time,omitempty"`
}

// NewProjectResponseObject instantiates a new ProjectResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectResponseObject() *ProjectResponseObject {
	this := ProjectResponseObject{}
	return &this
}

// NewProjectResponseObjectWithDefaults instantiates a new ProjectResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectResponseObjectWithDefaults() *ProjectResponseObject {
	this := ProjectResponseObject{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectResponseObject) SetId(v int32) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ProjectResponseObject) SetTitle(v string) {
	o.Title = &v
}

// GetBoardId returns the BoardId field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetBoardId() float32 {
	if o == nil || IsNil(o.BoardId) {
		var ret float32
		return ret
	}
	return *o.BoardId
}

// GetBoardIdOk returns a tuple with the BoardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetBoardIdOk() (*float32, bool) {
	if o == nil || IsNil(o.BoardId) {
		return nil, false
	}
	return o.BoardId, true
}

// HasBoardId returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasBoardId() bool {
	if o != nil && !IsNil(o.BoardId) {
		return true
	}

	return false
}

// SetBoardId gets a reference to the given float32 and assigns it to the BoardId field.
func (o *ProjectResponseObject) SetBoardId(v float32) {
	o.BoardId = &v
}

// GetPhaseId returns the PhaseId field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetPhaseId() float32 {
	if o == nil || IsNil(o.PhaseId) {
		var ret float32
		return ret
	}
	return *o.PhaseId
}

// GetPhaseIdOk returns a tuple with the PhaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetPhaseIdOk() (*float32, bool) {
	if o == nil || IsNil(o.PhaseId) {
		return nil, false
	}
	return o.PhaseId, true
}

// HasPhaseId returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasPhaseId() bool {
	if o != nil && !IsNil(o.PhaseId) {
		return true
	}

	return false
}

// SetPhaseId gets a reference to the given float32 and assigns it to the PhaseId field.
func (o *ProjectResponseObject) SetPhaseId(v float32) {
	o.PhaseId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectResponseObject) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProjectResponseObject) SetStatus(v string) {
	o.Status = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetOwnerId() float32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret float32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetOwnerIdOk() (*float32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given float32 and assigns it to the OwnerId field.
func (o *ProjectResponseObject) SetOwnerId(v float32) {
	o.OwnerId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ProjectResponseObject) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ProjectResponseObject) SetEndDate(v string) {
	o.EndDate = &v
}

// GetDealIds returns the DealIds field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetDealIds() []int32 {
	if o == nil || IsNil(o.DealIds) {
		var ret []int32
		return ret
	}
	return o.DealIds
}

// GetDealIdsOk returns a tuple with the DealIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetDealIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.DealIds) {
		return nil, false
	}
	return o.DealIds, true
}

// HasDealIds returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasDealIds() bool {
	if o != nil && !IsNil(o.DealIds) {
		return true
	}

	return false
}

// SetDealIds gets a reference to the given []int32 and assigns it to the DealIds field.
func (o *ProjectResponseObject) SetDealIds(v []int32) {
	o.DealIds = v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetOrgId() float32 {
	if o == nil || IsNil(o.OrgId) {
		var ret float32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetOrgIdOk() (*float32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given float32 and assigns it to the OrgId field.
func (o *ProjectResponseObject) SetOrgId(v float32) {
	o.OrgId = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetPersonId() float32 {
	if o == nil || IsNil(o.PersonId) {
		var ret float32
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetPersonIdOk() (*float32, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given float32 and assigns it to the PersonId field.
func (o *ProjectResponseObject) SetPersonId(v float32) {
	o.PersonId = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetLabels() []int32 {
	if o == nil || IsNil(o.Labels) {
		var ret []int32
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetLabelsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []int32 and assigns it to the Labels field.
func (o *ProjectResponseObject) SetLabels(v []int32) {
	o.Labels = v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *ProjectResponseObject) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *ProjectResponseObject) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetStatusChangeTime returns the StatusChangeTime field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetStatusChangeTime() string {
	if o == nil || IsNil(o.StatusChangeTime) {
		var ret string
		return ret
	}
	return *o.StatusChangeTime
}

// GetStatusChangeTimeOk returns a tuple with the StatusChangeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetStatusChangeTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusChangeTime) {
		return nil, false
	}
	return o.StatusChangeTime, true
}

// HasStatusChangeTime returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasStatusChangeTime() bool {
	if o != nil && !IsNil(o.StatusChangeTime) {
		return true
	}

	return false
}

// SetStatusChangeTime gets a reference to the given string and assigns it to the StatusChangeTime field.
func (o *ProjectResponseObject) SetStatusChangeTime(v string) {
	o.StatusChangeTime = &v
}

// GetArchiveTime returns the ArchiveTime field value if set, zero value otherwise.
func (o *ProjectResponseObject) GetArchiveTime() string {
	if o == nil || IsNil(o.ArchiveTime) {
		var ret string
		return ret
	}
	return *o.ArchiveTime
}

// GetArchiveTimeOk returns a tuple with the ArchiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectResponseObject) GetArchiveTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ArchiveTime) {
		return nil, false
	}
	return o.ArchiveTime, true
}

// HasArchiveTime returns a boolean if a field has been set.
func (o *ProjectResponseObject) HasArchiveTime() bool {
	if o != nil && !IsNil(o.ArchiveTime) {
		return true
	}

	return false
}

// SetArchiveTime gets a reference to the given string and assigns it to the ArchiveTime field.
func (o *ProjectResponseObject) SetArchiveTime(v string) {
	o.ArchiveTime = &v
}

func (o ProjectResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.BoardId) {
		toSerialize["board_id"] = o.BoardId
	}
	if !IsNil(o.PhaseId) {
		toSerialize["phase_id"] = o.PhaseId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.DealIds) {
		toSerialize["deal_ids"] = o.DealIds
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.StatusChangeTime) {
		toSerialize["status_change_time"] = o.StatusChangeTime
	}
	if !IsNil(o.ArchiveTime) {
		toSerialize["archive_time"] = o.ArchiveTime
	}
	return toSerialize, nil
}

type NullableProjectResponseObject struct {
	value *ProjectResponseObject
	isSet bool
}

func (v NullableProjectResponseObject) Get() *ProjectResponseObject {
	return v.value
}

func (v *NullableProjectResponseObject) Set(val *ProjectResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectResponseObject(val *ProjectResponseObject) *NullableProjectResponseObject {
	return &NullableProjectResponseObject{value: val, isSet: true}
}

func (v NullableProjectResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


