/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DealCollectionResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DealCollectionResponseObject{}

// DealCollectionResponseObject struct for DealCollectionResponseObject
type DealCollectionResponseObject struct {
	// The ID of the deal
	Id *int32 `json:"id,omitempty"`
	// The ID of the deal creator
	CreatorUserId *int32 `json:"creator_user_id,omitempty"`
	// The ID of the user
	UserId *int32 `json:"user_id,omitempty"`
	// The ID of the person associated with the deal
	PersonId *int32 `json:"person_id,omitempty"`
	// The ID of the organization associated with the deal
	OrgId *int32 `json:"org_id,omitempty"`
	// The ID of the deal stage
	StageId *int32 `json:"stage_id,omitempty"`
	// The title of the deal
	Title *string `json:"title,omitempty"`
	// The value of the deal
	Value *float32 `json:"value,omitempty"`
	// The currency associated with the deal
	Currency *string `json:"currency,omitempty"`
	// The creation date and time of the deal in UTC. Format: YYYY-MM-DD HH:MM:SS.
	AddTime *string `json:"add_time,omitempty"`
	// The last update date and time of the deal in UTC. Format: YYYY-MM-DD HH:MM:SS.
	UpdateTime *string `json:"update_time,omitempty"`
	// The status of the deal
	Status *string `json:"status,omitempty"`
	// The success probability percentage of the deal
	Probability NullableFloat32 `json:"probability,omitempty"`
	// The reason for losing the deal
	LostReason NullableString `json:"lost_reason,omitempty"`
	// The visibility of the deal
	VisibleTo *string `json:"visible_to,omitempty"`
	// The date and time of closing the deal in UTC. Format: YYYY-MM-DD HH:MM:SS.
	CloseTime NullableString `json:"close_time,omitempty"`
	// The ID of the pipeline associated with the deal
	PipelineId *int32 `json:"pipeline_id,omitempty"`
	// The date and time of changing the deal status to won in UTC. Format: YYYY-MM-DD HH:MM:SS.
	WonTime *string `json:"won_time,omitempty"`
	// The date and time of changing the deal status to lost in UTC. Format: YYYY-MM-DD HH:MM:SS.
	LostTime *string `json:"lost_time,omitempty"`
	// The expected close date of the deal
	ExpectedCloseDate *string `json:"expected_close_date,omitempty"`
	// The label or multiple labels assigned to the deal
	Label *string `json:"label,omitempty"`
}

// NewDealCollectionResponseObject instantiates a new DealCollectionResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDealCollectionResponseObject() *DealCollectionResponseObject {
	this := DealCollectionResponseObject{}
	return &this
}

// NewDealCollectionResponseObjectWithDefaults instantiates a new DealCollectionResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDealCollectionResponseObjectWithDefaults() *DealCollectionResponseObject {
	this := DealCollectionResponseObject{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DealCollectionResponseObject) SetId(v int32) {
	o.Id = &v
}

// GetCreatorUserId returns the CreatorUserId field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetCreatorUserId() int32 {
	if o == nil || IsNil(o.CreatorUserId) {
		var ret int32
		return ret
	}
	return *o.CreatorUserId
}

// GetCreatorUserIdOk returns a tuple with the CreatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetCreatorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatorUserId) {
		return nil, false
	}
	return o.CreatorUserId, true
}

// HasCreatorUserId returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasCreatorUserId() bool {
	if o != nil && !IsNil(o.CreatorUserId) {
		return true
	}

	return false
}

// SetCreatorUserId gets a reference to the given int32 and assigns it to the CreatorUserId field.
func (o *DealCollectionResponseObject) SetCreatorUserId(v int32) {
	o.CreatorUserId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *DealCollectionResponseObject) SetUserId(v int32) {
	o.UserId = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetPersonId() int32 {
	if o == nil || IsNil(o.PersonId) {
		var ret int32
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetPersonIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given int32 and assigns it to the PersonId field.
func (o *DealCollectionResponseObject) SetPersonId(v int32) {
	o.PersonId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *DealCollectionResponseObject) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetStageId() int32 {
	if o == nil || IsNil(o.StageId) {
		var ret int32
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetStageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given int32 and assigns it to the StageId field.
func (o *DealCollectionResponseObject) SetStageId(v int32) {
	o.StageId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *DealCollectionResponseObject) SetTitle(v string) {
	o.Title = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *DealCollectionResponseObject) SetValue(v float32) {
	o.Value = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *DealCollectionResponseObject) SetCurrency(v string) {
	o.Currency = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *DealCollectionResponseObject) SetAddTime(v string) {
	o.AddTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *DealCollectionResponseObject) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DealCollectionResponseObject) SetStatus(v string) {
	o.Status = &v
}

// GetProbability returns the Probability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealCollectionResponseObject) GetProbability() float32 {
	if o == nil || IsNil(o.Probability.Get()) {
		var ret float32
		return ret
	}
	return *o.Probability.Get()
}

// GetProbabilityOk returns a tuple with the Probability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealCollectionResponseObject) GetProbabilityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Probability.Get(), o.Probability.IsSet()
}

// HasProbability returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasProbability() bool {
	if o != nil && o.Probability.IsSet() {
		return true
	}

	return false
}

// SetProbability gets a reference to the given NullableFloat32 and assigns it to the Probability field.
func (o *DealCollectionResponseObject) SetProbability(v float32) {
	o.Probability.Set(&v)
}
// SetProbabilityNil sets the value for Probability to be an explicit nil
func (o *DealCollectionResponseObject) SetProbabilityNil() {
	o.Probability.Set(nil)
}

// UnsetProbability ensures that no value is present for Probability, not even an explicit nil
func (o *DealCollectionResponseObject) UnsetProbability() {
	o.Probability.Unset()
}

// GetLostReason returns the LostReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealCollectionResponseObject) GetLostReason() string {
	if o == nil || IsNil(o.LostReason.Get()) {
		var ret string
		return ret
	}
	return *o.LostReason.Get()
}

// GetLostReasonOk returns a tuple with the LostReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealCollectionResponseObject) GetLostReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LostReason.Get(), o.LostReason.IsSet()
}

// HasLostReason returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasLostReason() bool {
	if o != nil && o.LostReason.IsSet() {
		return true
	}

	return false
}

// SetLostReason gets a reference to the given NullableString and assigns it to the LostReason field.
func (o *DealCollectionResponseObject) SetLostReason(v string) {
	o.LostReason.Set(&v)
}
// SetLostReasonNil sets the value for LostReason to be an explicit nil
func (o *DealCollectionResponseObject) SetLostReasonNil() {
	o.LostReason.Set(nil)
}

// UnsetLostReason ensures that no value is present for LostReason, not even an explicit nil
func (o *DealCollectionResponseObject) UnsetLostReason() {
	o.LostReason.Unset()
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *DealCollectionResponseObject) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

// GetCloseTime returns the CloseTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DealCollectionResponseObject) GetCloseTime() string {
	if o == nil || IsNil(o.CloseTime.Get()) {
		var ret string
		return ret
	}
	return *o.CloseTime.Get()
}

// GetCloseTimeOk returns a tuple with the CloseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DealCollectionResponseObject) GetCloseTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloseTime.Get(), o.CloseTime.IsSet()
}

// HasCloseTime returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasCloseTime() bool {
	if o != nil && o.CloseTime.IsSet() {
		return true
	}

	return false
}

// SetCloseTime gets a reference to the given NullableString and assigns it to the CloseTime field.
func (o *DealCollectionResponseObject) SetCloseTime(v string) {
	o.CloseTime.Set(&v)
}
// SetCloseTimeNil sets the value for CloseTime to be an explicit nil
func (o *DealCollectionResponseObject) SetCloseTimeNil() {
	o.CloseTime.Set(nil)
}

// UnsetCloseTime ensures that no value is present for CloseTime, not even an explicit nil
func (o *DealCollectionResponseObject) UnsetCloseTime() {
	o.CloseTime.Unset()
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetPipelineId() int32 {
	if o == nil || IsNil(o.PipelineId) {
		var ret int32
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetPipelineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given int32 and assigns it to the PipelineId field.
func (o *DealCollectionResponseObject) SetPipelineId(v int32) {
	o.PipelineId = &v
}

// GetWonTime returns the WonTime field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetWonTime() string {
	if o == nil || IsNil(o.WonTime) {
		var ret string
		return ret
	}
	return *o.WonTime
}

// GetWonTimeOk returns a tuple with the WonTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetWonTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WonTime) {
		return nil, false
	}
	return o.WonTime, true
}

// HasWonTime returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasWonTime() bool {
	if o != nil && !IsNil(o.WonTime) {
		return true
	}

	return false
}

// SetWonTime gets a reference to the given string and assigns it to the WonTime field.
func (o *DealCollectionResponseObject) SetWonTime(v string) {
	o.WonTime = &v
}

// GetLostTime returns the LostTime field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetLostTime() string {
	if o == nil || IsNil(o.LostTime) {
		var ret string
		return ret
	}
	return *o.LostTime
}

// GetLostTimeOk returns a tuple with the LostTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetLostTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LostTime) {
		return nil, false
	}
	return o.LostTime, true
}

// HasLostTime returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasLostTime() bool {
	if o != nil && !IsNil(o.LostTime) {
		return true
	}

	return false
}

// SetLostTime gets a reference to the given string and assigns it to the LostTime field.
func (o *DealCollectionResponseObject) SetLostTime(v string) {
	o.LostTime = &v
}

// GetExpectedCloseDate returns the ExpectedCloseDate field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetExpectedCloseDate() string {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		var ret string
		return ret
	}
	return *o.ExpectedCloseDate
}

// GetExpectedCloseDateOk returns a tuple with the ExpectedCloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetExpectedCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		return nil, false
	}
	return o.ExpectedCloseDate, true
}

// HasExpectedCloseDate returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasExpectedCloseDate() bool {
	if o != nil && !IsNil(o.ExpectedCloseDate) {
		return true
	}

	return false
}

// SetExpectedCloseDate gets a reference to the given string and assigns it to the ExpectedCloseDate field.
func (o *DealCollectionResponseObject) SetExpectedCloseDate(v string) {
	o.ExpectedCloseDate = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *DealCollectionResponseObject) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DealCollectionResponseObject) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *DealCollectionResponseObject) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *DealCollectionResponseObject) SetLabel(v string) {
	o.Label = &v
}

func (o DealCollectionResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DealCollectionResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatorUserId) {
		toSerialize["creator_user_id"] = o.CreatorUserId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.StageId) {
		toSerialize["stage_id"] = o.StageId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Probability.IsSet() {
		toSerialize["probability"] = o.Probability.Get()
	}
	if o.LostReason.IsSet() {
		toSerialize["lost_reason"] = o.LostReason.Get()
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	if o.CloseTime.IsSet() {
		toSerialize["close_time"] = o.CloseTime.Get()
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipeline_id"] = o.PipelineId
	}
	if !IsNil(o.WonTime) {
		toSerialize["won_time"] = o.WonTime
	}
	if !IsNil(o.LostTime) {
		toSerialize["lost_time"] = o.LostTime
	}
	if !IsNil(o.ExpectedCloseDate) {
		toSerialize["expected_close_date"] = o.ExpectedCloseDate
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	return toSerialize, nil
}

type NullableDealCollectionResponseObject struct {
	value *DealCollectionResponseObject
	isSet bool
}

func (v NullableDealCollectionResponseObject) Get() *DealCollectionResponseObject {
	return v.value
}

func (v *NullableDealCollectionResponseObject) Set(val *DealCollectionResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableDealCollectionResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableDealCollectionResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDealCollectionResponseObject(val *DealCollectionResponseObject) *NullableDealCollectionResponseObject {
	return &NullableDealCollectionResponseObject{value: val, isSet: true}
}

func (v NullableDealCollectionResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDealCollectionResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


