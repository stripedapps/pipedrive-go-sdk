/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeleteFiltersResponse200 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteFiltersResponse200{}

// DeleteFiltersResponse200 struct for DeleteFiltersResponse200
type DeleteFiltersResponse200 struct {
	// If the response is successful or not
	Success *bool `json:"success,omitempty"`
	Data *DeleteFiltersResponse200AllOfData `json:"data,omitempty"`
}

// NewDeleteFiltersResponse200 instantiates a new DeleteFiltersResponse200 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteFiltersResponse200() *DeleteFiltersResponse200 {
	this := DeleteFiltersResponse200{}
	return &this
}

// NewDeleteFiltersResponse200WithDefaults instantiates a new DeleteFiltersResponse200 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteFiltersResponse200WithDefaults() *DeleteFiltersResponse200 {
	this := DeleteFiltersResponse200{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *DeleteFiltersResponse200) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteFiltersResponse200) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *DeleteFiltersResponse200) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *DeleteFiltersResponse200) SetSuccess(v bool) {
	o.Success = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *DeleteFiltersResponse200) GetData() DeleteFiltersResponse200AllOfData {
	if o == nil || IsNil(o.Data) {
		var ret DeleteFiltersResponse200AllOfData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteFiltersResponse200) GetDataOk() (*DeleteFiltersResponse200AllOfData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *DeleteFiltersResponse200) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given DeleteFiltersResponse200AllOfData and assigns it to the Data field.
func (o *DeleteFiltersResponse200) SetData(v DeleteFiltersResponse200AllOfData) {
	o.Data = &v
}

func (o DeleteFiltersResponse200) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteFiltersResponse200) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableDeleteFiltersResponse200 struct {
	value *DeleteFiltersResponse200
	isSet bool
}

func (v NullableDeleteFiltersResponse200) Get() *DeleteFiltersResponse200 {
	return v.value
}

func (v *NullableDeleteFiltersResponse200) Set(val *DeleteFiltersResponse200) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteFiltersResponse200) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteFiltersResponse200) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteFiltersResponse200(val *DeleteFiltersResponse200) *NullableDeleteFiltersResponse200 {
	return &NullableDeleteFiltersResponse200{value: val, isSet: true}
}

func (v NullableDeleteFiltersResponse200) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteFiltersResponse200) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


