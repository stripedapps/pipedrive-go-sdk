/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetNotesResponse200DataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNotesResponse200DataInner{}

// GetNotesResponse200DataInner struct for GetNotesResponse200DataInner
type GetNotesResponse200DataInner struct {
	// The ID of the note
	Id *int32 `json:"id,omitempty"`
	// Whether the note is active or deleted
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// The creation date and time of the note
	AddTime *string `json:"add_time,omitempty"`
	// The content of the note in HTML format. Subject to sanitization on the back-end.
	Content *string `json:"content,omitempty"`
	Deal *GetNotesResponse200DataInnerDeal `json:"deal,omitempty"`
	// The ID of the lead the note is attached to
	LeadId *string `json:"lead_id,omitempty"`
	// The ID of the deal the note is attached to
	DealId *int32 `json:"deal_id,omitempty"`
	// The ID of the user who last updated the note
	LastUpdateUserId *int32 `json:"last_update_user_id,omitempty"`
	// The ID of the organization the note is attached to
	OrgId *int32 `json:"org_id,omitempty"`
	Organization *GetNotesResponse200DataInnerOrganization `json:"organization,omitempty"`
	Person *GetNotesResponse200DataInnerPerson `json:"person,omitempty"`
	// The ID of the person the note is attached to
	PersonId *int32 `json:"person_id,omitempty"`
	// If true, the results are filtered by note to deal pinning state
	PinnedToDealFlag *bool `json:"pinned_to_deal_flag,omitempty"`
	// If true, the results are filtered by note to organization pinning state
	PinnedToOrganizationFlag *bool `json:"pinned_to_organization_flag,omitempty"`
	// If true, the results are filtered by note to person pinning state
	PinnedToPersonFlag *bool `json:"pinned_to_person_flag,omitempty"`
	// The last updated date and time of the note
	UpdateTime *string `json:"update_time,omitempty"`
	User *GetNotesResponse200DataInnerUser `json:"user,omitempty"`
	// The ID of the note creator
	UserId *int32 `json:"user_id,omitempty"`
}

// NewGetNotesResponse200DataInner instantiates a new GetNotesResponse200DataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNotesResponse200DataInner() *GetNotesResponse200DataInner {
	this := GetNotesResponse200DataInner{}
	return &this
}

// NewGetNotesResponse200DataInnerWithDefaults instantiates a new GetNotesResponse200DataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNotesResponse200DataInnerWithDefaults() *GetNotesResponse200DataInner {
	this := GetNotesResponse200DataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetNotesResponse200DataInner) SetId(v int32) {
	o.Id = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *GetNotesResponse200DataInner) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *GetNotesResponse200DataInner) SetAddTime(v string) {
	o.AddTime = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *GetNotesResponse200DataInner) SetContent(v string) {
	o.Content = &v
}

// GetDeal returns the Deal field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetDeal() GetNotesResponse200DataInnerDeal {
	if o == nil || IsNil(o.Deal) {
		var ret GetNotesResponse200DataInnerDeal
		return ret
	}
	return *o.Deal
}

// GetDealOk returns a tuple with the Deal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetDealOk() (*GetNotesResponse200DataInnerDeal, bool) {
	if o == nil || IsNil(o.Deal) {
		return nil, false
	}
	return o.Deal, true
}

// HasDeal returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasDeal() bool {
	if o != nil && !IsNil(o.Deal) {
		return true
	}

	return false
}

// SetDeal gets a reference to the given GetNotesResponse200DataInnerDeal and assigns it to the Deal field.
func (o *GetNotesResponse200DataInner) SetDeal(v GetNotesResponse200DataInnerDeal) {
	o.Deal = &v
}

// GetLeadId returns the LeadId field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetLeadId() string {
	if o == nil || IsNil(o.LeadId) {
		var ret string
		return ret
	}
	return *o.LeadId
}

// GetLeadIdOk returns a tuple with the LeadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetLeadIdOk() (*string, bool) {
	if o == nil || IsNil(o.LeadId) {
		return nil, false
	}
	return o.LeadId, true
}

// HasLeadId returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasLeadId() bool {
	if o != nil && !IsNil(o.LeadId) {
		return true
	}

	return false
}

// SetLeadId gets a reference to the given string and assigns it to the LeadId field.
func (o *GetNotesResponse200DataInner) SetLeadId(v string) {
	o.LeadId = &v
}

// GetDealId returns the DealId field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetDealId() int32 {
	if o == nil || IsNil(o.DealId) {
		var ret int32
		return ret
	}
	return *o.DealId
}

// GetDealIdOk returns a tuple with the DealId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetDealIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DealId) {
		return nil, false
	}
	return o.DealId, true
}

// HasDealId returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasDealId() bool {
	if o != nil && !IsNil(o.DealId) {
		return true
	}

	return false
}

// SetDealId gets a reference to the given int32 and assigns it to the DealId field.
func (o *GetNotesResponse200DataInner) SetDealId(v int32) {
	o.DealId = &v
}

// GetLastUpdateUserId returns the LastUpdateUserId field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetLastUpdateUserId() int32 {
	if o == nil || IsNil(o.LastUpdateUserId) {
		var ret int32
		return ret
	}
	return *o.LastUpdateUserId
}

// GetLastUpdateUserIdOk returns a tuple with the LastUpdateUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetLastUpdateUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LastUpdateUserId) {
		return nil, false
	}
	return o.LastUpdateUserId, true
}

// HasLastUpdateUserId returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasLastUpdateUserId() bool {
	if o != nil && !IsNil(o.LastUpdateUserId) {
		return true
	}

	return false
}

// SetLastUpdateUserId gets a reference to the given int32 and assigns it to the LastUpdateUserId field.
func (o *GetNotesResponse200DataInner) SetLastUpdateUserId(v int32) {
	o.LastUpdateUserId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *GetNotesResponse200DataInner) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetOrganization() GetNotesResponse200DataInnerOrganization {
	if o == nil || IsNil(o.Organization) {
		var ret GetNotesResponse200DataInnerOrganization
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetOrganizationOk() (*GetNotesResponse200DataInnerOrganization, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given GetNotesResponse200DataInnerOrganization and assigns it to the Organization field.
func (o *GetNotesResponse200DataInner) SetOrganization(v GetNotesResponse200DataInnerOrganization) {
	o.Organization = &v
}

// GetPerson returns the Person field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetPerson() GetNotesResponse200DataInnerPerson {
	if o == nil || IsNil(o.Person) {
		var ret GetNotesResponse200DataInnerPerson
		return ret
	}
	return *o.Person
}

// GetPersonOk returns a tuple with the Person field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetPersonOk() (*GetNotesResponse200DataInnerPerson, bool) {
	if o == nil || IsNil(o.Person) {
		return nil, false
	}
	return o.Person, true
}

// HasPerson returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasPerson() bool {
	if o != nil && !IsNil(o.Person) {
		return true
	}

	return false
}

// SetPerson gets a reference to the given GetNotesResponse200DataInnerPerson and assigns it to the Person field.
func (o *GetNotesResponse200DataInner) SetPerson(v GetNotesResponse200DataInnerPerson) {
	o.Person = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetPersonId() int32 {
	if o == nil || IsNil(o.PersonId) {
		var ret int32
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetPersonIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given int32 and assigns it to the PersonId field.
func (o *GetNotesResponse200DataInner) SetPersonId(v int32) {
	o.PersonId = &v
}

// GetPinnedToDealFlag returns the PinnedToDealFlag field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetPinnedToDealFlag() bool {
	if o == nil || IsNil(o.PinnedToDealFlag) {
		var ret bool
		return ret
	}
	return *o.PinnedToDealFlag
}

// GetPinnedToDealFlagOk returns a tuple with the PinnedToDealFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetPinnedToDealFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.PinnedToDealFlag) {
		return nil, false
	}
	return o.PinnedToDealFlag, true
}

// HasPinnedToDealFlag returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasPinnedToDealFlag() bool {
	if o != nil && !IsNil(o.PinnedToDealFlag) {
		return true
	}

	return false
}

// SetPinnedToDealFlag gets a reference to the given bool and assigns it to the PinnedToDealFlag field.
func (o *GetNotesResponse200DataInner) SetPinnedToDealFlag(v bool) {
	o.PinnedToDealFlag = &v
}

// GetPinnedToOrganizationFlag returns the PinnedToOrganizationFlag field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetPinnedToOrganizationFlag() bool {
	if o == nil || IsNil(o.PinnedToOrganizationFlag) {
		var ret bool
		return ret
	}
	return *o.PinnedToOrganizationFlag
}

// GetPinnedToOrganizationFlagOk returns a tuple with the PinnedToOrganizationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetPinnedToOrganizationFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.PinnedToOrganizationFlag) {
		return nil, false
	}
	return o.PinnedToOrganizationFlag, true
}

// HasPinnedToOrganizationFlag returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasPinnedToOrganizationFlag() bool {
	if o != nil && !IsNil(o.PinnedToOrganizationFlag) {
		return true
	}

	return false
}

// SetPinnedToOrganizationFlag gets a reference to the given bool and assigns it to the PinnedToOrganizationFlag field.
func (o *GetNotesResponse200DataInner) SetPinnedToOrganizationFlag(v bool) {
	o.PinnedToOrganizationFlag = &v
}

// GetPinnedToPersonFlag returns the PinnedToPersonFlag field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetPinnedToPersonFlag() bool {
	if o == nil || IsNil(o.PinnedToPersonFlag) {
		var ret bool
		return ret
	}
	return *o.PinnedToPersonFlag
}

// GetPinnedToPersonFlagOk returns a tuple with the PinnedToPersonFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetPinnedToPersonFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.PinnedToPersonFlag) {
		return nil, false
	}
	return o.PinnedToPersonFlag, true
}

// HasPinnedToPersonFlag returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasPinnedToPersonFlag() bool {
	if o != nil && !IsNil(o.PinnedToPersonFlag) {
		return true
	}

	return false
}

// SetPinnedToPersonFlag gets a reference to the given bool and assigns it to the PinnedToPersonFlag field.
func (o *GetNotesResponse200DataInner) SetPinnedToPersonFlag(v bool) {
	o.PinnedToPersonFlag = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *GetNotesResponse200DataInner) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetUser() GetNotesResponse200DataInnerUser {
	if o == nil || IsNil(o.User) {
		var ret GetNotesResponse200DataInnerUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetUserOk() (*GetNotesResponse200DataInnerUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given GetNotesResponse200DataInnerUser and assigns it to the User field.
func (o *GetNotesResponse200DataInner) SetUser(v GetNotesResponse200DataInnerUser) {
	o.User = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetNotesResponse200DataInner) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotesResponse200DataInner) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetNotesResponse200DataInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *GetNotesResponse200DataInner) SetUserId(v int32) {
	o.UserId = &v
}

func (o GetNotesResponse200DataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNotesResponse200DataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Deal) {
		toSerialize["deal"] = o.Deal
	}
	if !IsNil(o.LeadId) {
		toSerialize["lead_id"] = o.LeadId
	}
	if !IsNil(o.DealId) {
		toSerialize["deal_id"] = o.DealId
	}
	if !IsNil(o.LastUpdateUserId) {
		toSerialize["last_update_user_id"] = o.LastUpdateUserId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Person) {
		toSerialize["person"] = o.Person
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	if !IsNil(o.PinnedToDealFlag) {
		toSerialize["pinned_to_deal_flag"] = o.PinnedToDealFlag
	}
	if !IsNil(o.PinnedToOrganizationFlag) {
		toSerialize["pinned_to_organization_flag"] = o.PinnedToOrganizationFlag
	}
	if !IsNil(o.PinnedToPersonFlag) {
		toSerialize["pinned_to_person_flag"] = o.PinnedToPersonFlag
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableGetNotesResponse200DataInner struct {
	value *GetNotesResponse200DataInner
	isSet bool
}

func (v NullableGetNotesResponse200DataInner) Get() *GetNotesResponse200DataInner {
	return v.value
}

func (v *NullableGetNotesResponse200DataInner) Set(val *GetNotesResponse200DataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNotesResponse200DataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNotesResponse200DataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNotesResponse200DataInner(val *GetNotesResponse200DataInner) *NullableGetNotesResponse200DataInner {
	return &NullableGetNotesResponse200DataInner{value: val, isSet: true}
}

func (v NullableGetNotesResponse200DataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNotesResponse200DataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


