/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddActivityResponse200AdditionalData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddActivityResponse200AdditionalData{}

// AddActivityResponse200AdditionalData struct for AddActivityResponse200AdditionalData
type AddActivityResponse200AdditionalData struct {
	// This field will be deprecated
	UpdatesStoryId *int32 `json:"updates_story_id,omitempty"`
}

// NewAddActivityResponse200AdditionalData instantiates a new AddActivityResponse200AdditionalData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddActivityResponse200AdditionalData() *AddActivityResponse200AdditionalData {
	this := AddActivityResponse200AdditionalData{}
	return &this
}

// NewAddActivityResponse200AdditionalDataWithDefaults instantiates a new AddActivityResponse200AdditionalData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddActivityResponse200AdditionalDataWithDefaults() *AddActivityResponse200AdditionalData {
	this := AddActivityResponse200AdditionalData{}
	return &this
}

// GetUpdatesStoryId returns the UpdatesStoryId field value if set, zero value otherwise.
func (o *AddActivityResponse200AdditionalData) GetUpdatesStoryId() int32 {
	if o == nil || IsNil(o.UpdatesStoryId) {
		var ret int32
		return ret
	}
	return *o.UpdatesStoryId
}

// GetUpdatesStoryIdOk returns a tuple with the UpdatesStoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddActivityResponse200AdditionalData) GetUpdatesStoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatesStoryId) {
		return nil, false
	}
	return o.UpdatesStoryId, true
}

// HasUpdatesStoryId returns a boolean if a field has been set.
func (o *AddActivityResponse200AdditionalData) HasUpdatesStoryId() bool {
	if o != nil && !IsNil(o.UpdatesStoryId) {
		return true
	}

	return false
}

// SetUpdatesStoryId gets a reference to the given int32 and assigns it to the UpdatesStoryId field.
func (o *AddActivityResponse200AdditionalData) SetUpdatesStoryId(v int32) {
	o.UpdatesStoryId = &v
}

func (o AddActivityResponse200AdditionalData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddActivityResponse200AdditionalData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UpdatesStoryId) {
		toSerialize["updates_story_id"] = o.UpdatesStoryId
	}
	return toSerialize, nil
}

type NullableAddActivityResponse200AdditionalData struct {
	value *AddActivityResponse200AdditionalData
	isSet bool
}

func (v NullableAddActivityResponse200AdditionalData) Get() *AddActivityResponse200AdditionalData {
	return v.value
}

func (v *NullableAddActivityResponse200AdditionalData) Set(val *AddActivityResponse200AdditionalData) {
	v.value = val
	v.isSet = true
}

func (v NullableAddActivityResponse200AdditionalData) IsSet() bool {
	return v.isSet
}

func (v *NullableAddActivityResponse200AdditionalData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddActivityResponse200AdditionalData(val *AddActivityResponse200AdditionalData) *NullableAddActivityResponse200AdditionalData {
	return &NullableAddActivityResponse200AdditionalData{value: val, isSet: true}
}

func (v NullableAddActivityResponse200AdditionalData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddActivityResponse200AdditionalData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


