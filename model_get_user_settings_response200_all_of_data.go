/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetUserSettingsResponse200AllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserSettingsResponse200AllOfData{}

// GetUserSettingsResponse200AllOfData struct for GetUserSettingsResponse200AllOfData
type GetUserSettingsResponse200AllOfData struct {
	// If the vendors are allowed to install custom Marketplace apps with functionality and content in the Pipedrive UI or not
	MarketplaceAllowCustomInstallUrl *bool `json:"marketplace_allow_custom_install_url,omitempty"`
	// If the vendors are allowed to extend their Marketplace apps with functionality and content in the Pipedrive UI or not
	MarketplaceAppExtensionsVendor *bool `json:"marketplace_app_extensions_vendor,omitempty"`
	// If the vendors are allowed to be part of the Marketplace team or not
	MarketplaceTeam *bool `json:"marketplace_team,omitempty"`
	// The number of results shown in list by default
	ListLimit *float32 `json:"list_limit,omitempty"`
	// Whether beta app is enabled
	BetaApp *bool `json:"beta_app,omitempty"`
	// Prevent salesphone call to override
	PreventSalesphoneCalltoOverride *bool `json:"prevent_salesphone_callto_override,omitempty"`
	// The destination of file upload
	FileUploadDestination *string `json:"file_upload_destination,omitempty"`
	// The call to link syntax
	CalltoLinkSyntax *string `json:"callto_link_syntax,omitempty"`
	// Whether the expected close date of the deal is filled automatically or not
	AutofillDealExpectedCloseDate *bool `json:"autofill_deal_expected_close_date,omitempty"`
	// Allow the vendors to duplicate a person
	PersonDuplicateCondition *string `json:"person_duplicate_condition,omitempty"`
}

// NewGetUserSettingsResponse200AllOfData instantiates a new GetUserSettingsResponse200AllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserSettingsResponse200AllOfData() *GetUserSettingsResponse200AllOfData {
	this := GetUserSettingsResponse200AllOfData{}
	return &this
}

// NewGetUserSettingsResponse200AllOfDataWithDefaults instantiates a new GetUserSettingsResponse200AllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserSettingsResponse200AllOfDataWithDefaults() *GetUserSettingsResponse200AllOfData {
	this := GetUserSettingsResponse200AllOfData{}
	return &this
}

// GetMarketplaceAllowCustomInstallUrl returns the MarketplaceAllowCustomInstallUrl field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetMarketplaceAllowCustomInstallUrl() bool {
	if o == nil || IsNil(o.MarketplaceAllowCustomInstallUrl) {
		var ret bool
		return ret
	}
	return *o.MarketplaceAllowCustomInstallUrl
}

// GetMarketplaceAllowCustomInstallUrlOk returns a tuple with the MarketplaceAllowCustomInstallUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetMarketplaceAllowCustomInstallUrlOk() (*bool, bool) {
	if o == nil || IsNil(o.MarketplaceAllowCustomInstallUrl) {
		return nil, false
	}
	return o.MarketplaceAllowCustomInstallUrl, true
}

// HasMarketplaceAllowCustomInstallUrl returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasMarketplaceAllowCustomInstallUrl() bool {
	if o != nil && !IsNil(o.MarketplaceAllowCustomInstallUrl) {
		return true
	}

	return false
}

// SetMarketplaceAllowCustomInstallUrl gets a reference to the given bool and assigns it to the MarketplaceAllowCustomInstallUrl field.
func (o *GetUserSettingsResponse200AllOfData) SetMarketplaceAllowCustomInstallUrl(v bool) {
	o.MarketplaceAllowCustomInstallUrl = &v
}

// GetMarketplaceAppExtensionsVendor returns the MarketplaceAppExtensionsVendor field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetMarketplaceAppExtensionsVendor() bool {
	if o == nil || IsNil(o.MarketplaceAppExtensionsVendor) {
		var ret bool
		return ret
	}
	return *o.MarketplaceAppExtensionsVendor
}

// GetMarketplaceAppExtensionsVendorOk returns a tuple with the MarketplaceAppExtensionsVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetMarketplaceAppExtensionsVendorOk() (*bool, bool) {
	if o == nil || IsNil(o.MarketplaceAppExtensionsVendor) {
		return nil, false
	}
	return o.MarketplaceAppExtensionsVendor, true
}

// HasMarketplaceAppExtensionsVendor returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasMarketplaceAppExtensionsVendor() bool {
	if o != nil && !IsNil(o.MarketplaceAppExtensionsVendor) {
		return true
	}

	return false
}

// SetMarketplaceAppExtensionsVendor gets a reference to the given bool and assigns it to the MarketplaceAppExtensionsVendor field.
func (o *GetUserSettingsResponse200AllOfData) SetMarketplaceAppExtensionsVendor(v bool) {
	o.MarketplaceAppExtensionsVendor = &v
}

// GetMarketplaceTeam returns the MarketplaceTeam field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetMarketplaceTeam() bool {
	if o == nil || IsNil(o.MarketplaceTeam) {
		var ret bool
		return ret
	}
	return *o.MarketplaceTeam
}

// GetMarketplaceTeamOk returns a tuple with the MarketplaceTeam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetMarketplaceTeamOk() (*bool, bool) {
	if o == nil || IsNil(o.MarketplaceTeam) {
		return nil, false
	}
	return o.MarketplaceTeam, true
}

// HasMarketplaceTeam returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasMarketplaceTeam() bool {
	if o != nil && !IsNil(o.MarketplaceTeam) {
		return true
	}

	return false
}

// SetMarketplaceTeam gets a reference to the given bool and assigns it to the MarketplaceTeam field.
func (o *GetUserSettingsResponse200AllOfData) SetMarketplaceTeam(v bool) {
	o.MarketplaceTeam = &v
}

// GetListLimit returns the ListLimit field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetListLimit() float32 {
	if o == nil || IsNil(o.ListLimit) {
		var ret float32
		return ret
	}
	return *o.ListLimit
}

// GetListLimitOk returns a tuple with the ListLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetListLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.ListLimit) {
		return nil, false
	}
	return o.ListLimit, true
}

// HasListLimit returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasListLimit() bool {
	if o != nil && !IsNil(o.ListLimit) {
		return true
	}

	return false
}

// SetListLimit gets a reference to the given float32 and assigns it to the ListLimit field.
func (o *GetUserSettingsResponse200AllOfData) SetListLimit(v float32) {
	o.ListLimit = &v
}

// GetBetaApp returns the BetaApp field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetBetaApp() bool {
	if o == nil || IsNil(o.BetaApp) {
		var ret bool
		return ret
	}
	return *o.BetaApp
}

// GetBetaAppOk returns a tuple with the BetaApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetBetaAppOk() (*bool, bool) {
	if o == nil || IsNil(o.BetaApp) {
		return nil, false
	}
	return o.BetaApp, true
}

// HasBetaApp returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasBetaApp() bool {
	if o != nil && !IsNil(o.BetaApp) {
		return true
	}

	return false
}

// SetBetaApp gets a reference to the given bool and assigns it to the BetaApp field.
func (o *GetUserSettingsResponse200AllOfData) SetBetaApp(v bool) {
	o.BetaApp = &v
}

// GetPreventSalesphoneCalltoOverride returns the PreventSalesphoneCalltoOverride field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetPreventSalesphoneCalltoOverride() bool {
	if o == nil || IsNil(o.PreventSalesphoneCalltoOverride) {
		var ret bool
		return ret
	}
	return *o.PreventSalesphoneCalltoOverride
}

// GetPreventSalesphoneCalltoOverrideOk returns a tuple with the PreventSalesphoneCalltoOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetPreventSalesphoneCalltoOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.PreventSalesphoneCalltoOverride) {
		return nil, false
	}
	return o.PreventSalesphoneCalltoOverride, true
}

// HasPreventSalesphoneCalltoOverride returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasPreventSalesphoneCalltoOverride() bool {
	if o != nil && !IsNil(o.PreventSalesphoneCalltoOverride) {
		return true
	}

	return false
}

// SetPreventSalesphoneCalltoOverride gets a reference to the given bool and assigns it to the PreventSalesphoneCalltoOverride field.
func (o *GetUserSettingsResponse200AllOfData) SetPreventSalesphoneCalltoOverride(v bool) {
	o.PreventSalesphoneCalltoOverride = &v
}

// GetFileUploadDestination returns the FileUploadDestination field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetFileUploadDestination() string {
	if o == nil || IsNil(o.FileUploadDestination) {
		var ret string
		return ret
	}
	return *o.FileUploadDestination
}

// GetFileUploadDestinationOk returns a tuple with the FileUploadDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetFileUploadDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.FileUploadDestination) {
		return nil, false
	}
	return o.FileUploadDestination, true
}

// HasFileUploadDestination returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasFileUploadDestination() bool {
	if o != nil && !IsNil(o.FileUploadDestination) {
		return true
	}

	return false
}

// SetFileUploadDestination gets a reference to the given string and assigns it to the FileUploadDestination field.
func (o *GetUserSettingsResponse200AllOfData) SetFileUploadDestination(v string) {
	o.FileUploadDestination = &v
}

// GetCalltoLinkSyntax returns the CalltoLinkSyntax field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetCalltoLinkSyntax() string {
	if o == nil || IsNil(o.CalltoLinkSyntax) {
		var ret string
		return ret
	}
	return *o.CalltoLinkSyntax
}

// GetCalltoLinkSyntaxOk returns a tuple with the CalltoLinkSyntax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetCalltoLinkSyntaxOk() (*string, bool) {
	if o == nil || IsNil(o.CalltoLinkSyntax) {
		return nil, false
	}
	return o.CalltoLinkSyntax, true
}

// HasCalltoLinkSyntax returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasCalltoLinkSyntax() bool {
	if o != nil && !IsNil(o.CalltoLinkSyntax) {
		return true
	}

	return false
}

// SetCalltoLinkSyntax gets a reference to the given string and assigns it to the CalltoLinkSyntax field.
func (o *GetUserSettingsResponse200AllOfData) SetCalltoLinkSyntax(v string) {
	o.CalltoLinkSyntax = &v
}

// GetAutofillDealExpectedCloseDate returns the AutofillDealExpectedCloseDate field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetAutofillDealExpectedCloseDate() bool {
	if o == nil || IsNil(o.AutofillDealExpectedCloseDate) {
		var ret bool
		return ret
	}
	return *o.AutofillDealExpectedCloseDate
}

// GetAutofillDealExpectedCloseDateOk returns a tuple with the AutofillDealExpectedCloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetAutofillDealExpectedCloseDateOk() (*bool, bool) {
	if o == nil || IsNil(o.AutofillDealExpectedCloseDate) {
		return nil, false
	}
	return o.AutofillDealExpectedCloseDate, true
}

// HasAutofillDealExpectedCloseDate returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasAutofillDealExpectedCloseDate() bool {
	if o != nil && !IsNil(o.AutofillDealExpectedCloseDate) {
		return true
	}

	return false
}

// SetAutofillDealExpectedCloseDate gets a reference to the given bool and assigns it to the AutofillDealExpectedCloseDate field.
func (o *GetUserSettingsResponse200AllOfData) SetAutofillDealExpectedCloseDate(v bool) {
	o.AutofillDealExpectedCloseDate = &v
}

// GetPersonDuplicateCondition returns the PersonDuplicateCondition field value if set, zero value otherwise.
func (o *GetUserSettingsResponse200AllOfData) GetPersonDuplicateCondition() string {
	if o == nil || IsNil(o.PersonDuplicateCondition) {
		var ret string
		return ret
	}
	return *o.PersonDuplicateCondition
}

// GetPersonDuplicateConditionOk returns a tuple with the PersonDuplicateCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsResponse200AllOfData) GetPersonDuplicateConditionOk() (*string, bool) {
	if o == nil || IsNil(o.PersonDuplicateCondition) {
		return nil, false
	}
	return o.PersonDuplicateCondition, true
}

// HasPersonDuplicateCondition returns a boolean if a field has been set.
func (o *GetUserSettingsResponse200AllOfData) HasPersonDuplicateCondition() bool {
	if o != nil && !IsNil(o.PersonDuplicateCondition) {
		return true
	}

	return false
}

// SetPersonDuplicateCondition gets a reference to the given string and assigns it to the PersonDuplicateCondition field.
func (o *GetUserSettingsResponse200AllOfData) SetPersonDuplicateCondition(v string) {
	o.PersonDuplicateCondition = &v
}

func (o GetUserSettingsResponse200AllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserSettingsResponse200AllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarketplaceAllowCustomInstallUrl) {
		toSerialize["marketplace_allow_custom_install_url"] = o.MarketplaceAllowCustomInstallUrl
	}
	if !IsNil(o.MarketplaceAppExtensionsVendor) {
		toSerialize["marketplace_app_extensions_vendor"] = o.MarketplaceAppExtensionsVendor
	}
	if !IsNil(o.MarketplaceTeam) {
		toSerialize["marketplace_team"] = o.MarketplaceTeam
	}
	if !IsNil(o.ListLimit) {
		toSerialize["list_limit"] = o.ListLimit
	}
	if !IsNil(o.BetaApp) {
		toSerialize["beta_app"] = o.BetaApp
	}
	if !IsNil(o.PreventSalesphoneCalltoOverride) {
		toSerialize["prevent_salesphone_callto_override"] = o.PreventSalesphoneCalltoOverride
	}
	if !IsNil(o.FileUploadDestination) {
		toSerialize["file_upload_destination"] = o.FileUploadDestination
	}
	if !IsNil(o.CalltoLinkSyntax) {
		toSerialize["callto_link_syntax"] = o.CalltoLinkSyntax
	}
	if !IsNil(o.AutofillDealExpectedCloseDate) {
		toSerialize["autofill_deal_expected_close_date"] = o.AutofillDealExpectedCloseDate
	}
	if !IsNil(o.PersonDuplicateCondition) {
		toSerialize["person_duplicate_condition"] = o.PersonDuplicateCondition
	}
	return toSerialize, nil
}

type NullableGetUserSettingsResponse200AllOfData struct {
	value *GetUserSettingsResponse200AllOfData
	isSet bool
}

func (v NullableGetUserSettingsResponse200AllOfData) Get() *GetUserSettingsResponse200AllOfData {
	return v.value
}

func (v *NullableGetUserSettingsResponse200AllOfData) Set(val *GetUserSettingsResponse200AllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserSettingsResponse200AllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserSettingsResponse200AllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserSettingsResponse200AllOfData(val *GetUserSettingsResponse200AllOfData) *NullableGetUserSettingsResponse200AllOfData {
	return &NullableGetUserSettingsResponse200AllOfData{value: val, isSet: true}
}

func (v NullableGetUserSettingsResponse200AllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserSettingsResponse200AllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


