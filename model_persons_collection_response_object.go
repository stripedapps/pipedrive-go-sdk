/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PersonsCollectionResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersonsCollectionResponseObject{}

// PersonsCollectionResponseObject struct for PersonsCollectionResponseObject
type PersonsCollectionResponseObject struct {
	// The ID of the person
	Id *int32 `json:"id,omitempty"`
	// Whether the person is active or not
	ActiveFlag *bool `json:"active_flag,omitempty"`
	// The ID of the owner related to the person
	OwnerId *int32 `json:"owner_id,omitempty"`
	// The ID of the organization related to the person
	OrgId *int32 `json:"org_id,omitempty"`
	// The name of the person
	Name *string `json:"name,omitempty"`
	// An email address as a string or an array of email objects related to the person. The structure of the array is as follows: `[{ \"value\": \"mail@example.com\", \"primary\": \"true\", \"label\": \"main\" }]`. Please note that only `value` is required.
	Email []BasicPersonRequestEmailInner `json:"email,omitempty"`
	// A phone number supplied as a string or an array of phone objects related to the person. The structure of the array is as follows: `[{ \"value\": \"12345\", \"primary\": \"true\", \"label\": \"mobile\" }]`. Please note that only `value` is required.
	Phone []PersonItemAllOfPhoneInner `json:"phone,omitempty"`
	// The last updated date and time of the person. Format: YYYY-MM-DD HH:MM:SS
	UpdateTime *string `json:"update_time,omitempty"`
	// The date and time this person was deleted. Format: YYYY-MM-DD HH:MM:SS
	DeleteTime NullableString `json:"delete_time,omitempty"`
	// The date and time when the person was added/created. Format: YYYY-MM-DD HH:MM:SS
	AddTime *string `json:"add_time,omitempty"`
	// The visibility group ID of who can see the person
	VisibleTo *string `json:"visible_to,omitempty"`
	// The ID of the picture associated with the item
	PictureId NullableInt32 `json:"picture_id,omitempty"`
	// The label assigned to the person
	Label NullableInt32 `json:"label,omitempty"`
	// The BCC email associated with the person
	CcEmail *string `json:"cc_email,omitempty"`
}

// NewPersonsCollectionResponseObject instantiates a new PersonsCollectionResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonsCollectionResponseObject() *PersonsCollectionResponseObject {
	this := PersonsCollectionResponseObject{}
	return &this
}

// NewPersonsCollectionResponseObjectWithDefaults instantiates a new PersonsCollectionResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonsCollectionResponseObjectWithDefaults() *PersonsCollectionResponseObject {
	this := PersonsCollectionResponseObject{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PersonsCollectionResponseObject) SetId(v int32) {
	o.Id = &v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetActiveFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveFlag) {
		return nil, false
	}
	return o.ActiveFlag, true
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasActiveFlag() bool {
	if o != nil && !IsNil(o.ActiveFlag) {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given bool and assigns it to the ActiveFlag field.
func (o *PersonsCollectionResponseObject) SetActiveFlag(v bool) {
	o.ActiveFlag = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetOwnerId() int32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetOwnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *PersonsCollectionResponseObject) SetOwnerId(v int32) {
	o.OwnerId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *PersonsCollectionResponseObject) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PersonsCollectionResponseObject) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetEmail() []BasicPersonRequestEmailInner {
	if o == nil || IsNil(o.Email) {
		var ret []BasicPersonRequestEmailInner
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetEmailOk() ([]BasicPersonRequestEmailInner, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given []BasicPersonRequestEmailInner and assigns it to the Email field.
func (o *PersonsCollectionResponseObject) SetEmail(v []BasicPersonRequestEmailInner) {
	o.Email = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetPhone() []PersonItemAllOfPhoneInner {
	if o == nil || IsNil(o.Phone) {
		var ret []PersonItemAllOfPhoneInner
		return ret
	}
	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetPhoneOk() ([]PersonItemAllOfPhoneInner, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given []PersonItemAllOfPhoneInner and assigns it to the Phone field.
func (o *PersonsCollectionResponseObject) SetPhone(v []PersonItemAllOfPhoneInner) {
	o.Phone = v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *PersonsCollectionResponseObject) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetDeleteTime returns the DeleteTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PersonsCollectionResponseObject) GetDeleteTime() string {
	if o == nil || IsNil(o.DeleteTime.Get()) {
		var ret string
		return ret
	}
	return *o.DeleteTime.Get()
}

// GetDeleteTimeOk returns a tuple with the DeleteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PersonsCollectionResponseObject) GetDeleteTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeleteTime.Get(), o.DeleteTime.IsSet()
}

// HasDeleteTime returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasDeleteTime() bool {
	if o != nil && o.DeleteTime.IsSet() {
		return true
	}

	return false
}

// SetDeleteTime gets a reference to the given NullableString and assigns it to the DeleteTime field.
func (o *PersonsCollectionResponseObject) SetDeleteTime(v string) {
	o.DeleteTime.Set(&v)
}
// SetDeleteTimeNil sets the value for DeleteTime to be an explicit nil
func (o *PersonsCollectionResponseObject) SetDeleteTimeNil() {
	o.DeleteTime.Set(nil)
}

// UnsetDeleteTime ensures that no value is present for DeleteTime, not even an explicit nil
func (o *PersonsCollectionResponseObject) UnsetDeleteTime() {
	o.DeleteTime.Unset()
}

// GetAddTime returns the AddTime field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetAddTime() string {
	if o == nil || IsNil(o.AddTime) {
		var ret string
		return ret
	}
	return *o.AddTime
}

// GetAddTimeOk returns a tuple with the AddTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetAddTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AddTime) {
		return nil, false
	}
	return o.AddTime, true
}

// HasAddTime returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasAddTime() bool {
	if o != nil && !IsNil(o.AddTime) {
		return true
	}

	return false
}

// SetAddTime gets a reference to the given string and assigns it to the AddTime field.
func (o *PersonsCollectionResponseObject) SetAddTime(v string) {
	o.AddTime = &v
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *PersonsCollectionResponseObject) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

// GetPictureId returns the PictureId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PersonsCollectionResponseObject) GetPictureId() int32 {
	if o == nil || IsNil(o.PictureId.Get()) {
		var ret int32
		return ret
	}
	return *o.PictureId.Get()
}

// GetPictureIdOk returns a tuple with the PictureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PersonsCollectionResponseObject) GetPictureIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PictureId.Get(), o.PictureId.IsSet()
}

// HasPictureId returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasPictureId() bool {
	if o != nil && o.PictureId.IsSet() {
		return true
	}

	return false
}

// SetPictureId gets a reference to the given NullableInt32 and assigns it to the PictureId field.
func (o *PersonsCollectionResponseObject) SetPictureId(v int32) {
	o.PictureId.Set(&v)
}
// SetPictureIdNil sets the value for PictureId to be an explicit nil
func (o *PersonsCollectionResponseObject) SetPictureIdNil() {
	o.PictureId.Set(nil)
}

// UnsetPictureId ensures that no value is present for PictureId, not even an explicit nil
func (o *PersonsCollectionResponseObject) UnsetPictureId() {
	o.PictureId.Unset()
}

// GetLabel returns the Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PersonsCollectionResponseObject) GetLabel() int32 {
	if o == nil || IsNil(o.Label.Get()) {
		var ret int32
		return ret
	}
	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PersonsCollectionResponseObject) GetLabelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// HasLabel returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasLabel() bool {
	if o != nil && o.Label.IsSet() {
		return true
	}

	return false
}

// SetLabel gets a reference to the given NullableInt32 and assigns it to the Label field.
func (o *PersonsCollectionResponseObject) SetLabel(v int32) {
	o.Label.Set(&v)
}
// SetLabelNil sets the value for Label to be an explicit nil
func (o *PersonsCollectionResponseObject) SetLabelNil() {
	o.Label.Set(nil)
}

// UnsetLabel ensures that no value is present for Label, not even an explicit nil
func (o *PersonsCollectionResponseObject) UnsetLabel() {
	o.Label.Unset()
}

// GetCcEmail returns the CcEmail field value if set, zero value otherwise.
func (o *PersonsCollectionResponseObject) GetCcEmail() string {
	if o == nil || IsNil(o.CcEmail) {
		var ret string
		return ret
	}
	return *o.CcEmail
}

// GetCcEmailOk returns a tuple with the CcEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonsCollectionResponseObject) GetCcEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CcEmail) {
		return nil, false
	}
	return o.CcEmail, true
}

// HasCcEmail returns a boolean if a field has been set.
func (o *PersonsCollectionResponseObject) HasCcEmail() bool {
	if o != nil && !IsNil(o.CcEmail) {
		return true
	}

	return false
}

// SetCcEmail gets a reference to the given string and assigns it to the CcEmail field.
func (o *PersonsCollectionResponseObject) SetCcEmail(v string) {
	o.CcEmail = &v
}

func (o PersonsCollectionResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersonsCollectionResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ActiveFlag) {
		toSerialize["active_flag"] = o.ActiveFlag
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if o.DeleteTime.IsSet() {
		toSerialize["delete_time"] = o.DeleteTime.Get()
	}
	if !IsNil(o.AddTime) {
		toSerialize["add_time"] = o.AddTime
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	if o.PictureId.IsSet() {
		toSerialize["picture_id"] = o.PictureId.Get()
	}
	if o.Label.IsSet() {
		toSerialize["label"] = o.Label.Get()
	}
	if !IsNil(o.CcEmail) {
		toSerialize["cc_email"] = o.CcEmail
	}
	return toSerialize, nil
}

type NullablePersonsCollectionResponseObject struct {
	value *PersonsCollectionResponseObject
	isSet bool
}

func (v NullablePersonsCollectionResponseObject) Get() *PersonsCollectionResponseObject {
	return v.value
}

func (v *NullablePersonsCollectionResponseObject) Set(val *PersonsCollectionResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonsCollectionResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonsCollectionResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonsCollectionResponseObject(val *PersonsCollectionResponseObject) *NullablePersonsCollectionResponseObject {
	return &NullablePersonsCollectionResponseObject{value: val, isSet: true}
}

func (v NullablePersonsCollectionResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonsCollectionResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


