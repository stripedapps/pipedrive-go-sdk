/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MergePersonsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MergePersonsRequest{}

// MergePersonsRequest struct for MergePersonsRequest
type MergePersonsRequest struct {
	// The ID of the person that will not be overwritten. This personâ€™s data will be prioritized in case of conflict with the other person.
	MergeWithId int32 `json:"merge_with_id"`
}

// NewMergePersonsRequest instantiates a new MergePersonsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergePersonsRequest(mergeWithId int32) *MergePersonsRequest {
	this := MergePersonsRequest{}
	this.MergeWithId = mergeWithId
	return &this
}

// NewMergePersonsRequestWithDefaults instantiates a new MergePersonsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergePersonsRequestWithDefaults() *MergePersonsRequest {
	this := MergePersonsRequest{}
	return &this
}

// GetMergeWithId returns the MergeWithId field value
func (o *MergePersonsRequest) GetMergeWithId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MergeWithId
}

// GetMergeWithIdOk returns a tuple with the MergeWithId field value
// and a boolean to check if the value has been set.
func (o *MergePersonsRequest) GetMergeWithIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MergeWithId, true
}

// SetMergeWithId sets field value
func (o *MergePersonsRequest) SetMergeWithId(v int32) {
	o.MergeWithId = v
}

func (o MergePersonsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergePersonsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["merge_with_id"] = o.MergeWithId
	return toSerialize, nil
}

type NullableMergePersonsRequest struct {
	value *MergePersonsRequest
	isSet bool
}

func (v NullableMergePersonsRequest) Get() *MergePersonsRequest {
	return v.value
}

func (v *NullableMergePersonsRequest) Set(val *MergePersonsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMergePersonsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMergePersonsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergePersonsRequest(val *MergePersonsRequest) *NullableMergePersonsRequest {
	return &NullableMergePersonsRequest{value: val, isSet: true}
}

func (v NullableMergePersonsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergePersonsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


