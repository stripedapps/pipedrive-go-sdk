/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddOrUpdateGoalResponse200DataGoal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOrUpdateGoalResponse200DataGoal{}

// AddOrUpdateGoalResponse200DataGoal struct for AddOrUpdateGoalResponse200DataGoal
type AddOrUpdateGoalResponse200DataGoal struct {
	// The ID of the goal
	Id *string `json:"id,omitempty"`
	// The ID of the creator of the goal
	OwnerId *int32 `json:"owner_id,omitempty"`
	// The title of the goal
	Title *string `json:"title,omitempty"`
	Type *AddOrUpdateGoalResponse200DataGoalType `json:"type,omitempty"`
	Assignee *AddOrUpdateGoalResponse200DataGoalAssignee `json:"assignee,omitempty"`
	// The interval of the goal
	Interval *string `json:"interval,omitempty"`
	Duration *AddOrUpdateGoalResponse200DataGoalDuration `json:"duration,omitempty"`
	ExpectedOutcome *AddOrUpdateGoalResponse200DataGoalExpectedOutcome `json:"expected_outcome,omitempty"`
	// Whether the goal is currently active or not
	IsActive *bool `json:"is_active,omitempty"`
	// The IDs of the reports that belong to the goal
	ReportIds []string `json:"report_ids,omitempty"`
}

// NewAddOrUpdateGoalResponse200DataGoal instantiates a new AddOrUpdateGoalResponse200DataGoal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOrUpdateGoalResponse200DataGoal() *AddOrUpdateGoalResponse200DataGoal {
	this := AddOrUpdateGoalResponse200DataGoal{}
	return &this
}

// NewAddOrUpdateGoalResponse200DataGoalWithDefaults instantiates a new AddOrUpdateGoalResponse200DataGoal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOrUpdateGoalResponse200DataGoalWithDefaults() *AddOrUpdateGoalResponse200DataGoal {
	this := AddOrUpdateGoalResponse200DataGoal{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetId(v string) {
	o.Id = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetOwnerId() int32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetOwnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetOwnerId(v int32) {
	o.OwnerId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetType() AddOrUpdateGoalResponse200DataGoalType {
	if o == nil || IsNil(o.Type) {
		var ret AddOrUpdateGoalResponse200DataGoalType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetTypeOk() (*AddOrUpdateGoalResponse200DataGoalType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AddOrUpdateGoalResponse200DataGoalType and assigns it to the Type field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetType(v AddOrUpdateGoalResponse200DataGoalType) {
	o.Type = &v
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetAssignee() AddOrUpdateGoalResponse200DataGoalAssignee {
	if o == nil || IsNil(o.Assignee) {
		var ret AddOrUpdateGoalResponse200DataGoalAssignee
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetAssigneeOk() (*AddOrUpdateGoalResponse200DataGoalAssignee, bool) {
	if o == nil || IsNil(o.Assignee) {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasAssignee() bool {
	if o != nil && !IsNil(o.Assignee) {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given AddOrUpdateGoalResponse200DataGoalAssignee and assigns it to the Assignee field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetAssignee(v AddOrUpdateGoalResponse200DataGoalAssignee) {
	o.Assignee = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetInterval() string {
	if o == nil || IsNil(o.Interval) {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetInterval(v string) {
	o.Interval = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetDuration() AddOrUpdateGoalResponse200DataGoalDuration {
	if o == nil || IsNil(o.Duration) {
		var ret AddOrUpdateGoalResponse200DataGoalDuration
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetDurationOk() (*AddOrUpdateGoalResponse200DataGoalDuration, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given AddOrUpdateGoalResponse200DataGoalDuration and assigns it to the Duration field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetDuration(v AddOrUpdateGoalResponse200DataGoalDuration) {
	o.Duration = &v
}

// GetExpectedOutcome returns the ExpectedOutcome field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetExpectedOutcome() AddOrUpdateGoalResponse200DataGoalExpectedOutcome {
	if o == nil || IsNil(o.ExpectedOutcome) {
		var ret AddOrUpdateGoalResponse200DataGoalExpectedOutcome
		return ret
	}
	return *o.ExpectedOutcome
}

// GetExpectedOutcomeOk returns a tuple with the ExpectedOutcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetExpectedOutcomeOk() (*AddOrUpdateGoalResponse200DataGoalExpectedOutcome, bool) {
	if o == nil || IsNil(o.ExpectedOutcome) {
		return nil, false
	}
	return o.ExpectedOutcome, true
}

// HasExpectedOutcome returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasExpectedOutcome() bool {
	if o != nil && !IsNil(o.ExpectedOutcome) {
		return true
	}

	return false
}

// SetExpectedOutcome gets a reference to the given AddOrUpdateGoalResponse200DataGoalExpectedOutcome and assigns it to the ExpectedOutcome field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetExpectedOutcome(v AddOrUpdateGoalResponse200DataGoalExpectedOutcome) {
	o.ExpectedOutcome = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetReportIds returns the ReportIds field value if set, zero value otherwise.
func (o *AddOrUpdateGoalResponse200DataGoal) GetReportIds() []string {
	if o == nil || IsNil(o.ReportIds) {
		var ret []string
		return ret
	}
	return o.ReportIds
}

// GetReportIdsOk returns a tuple with the ReportIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) GetReportIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ReportIds) {
		return nil, false
	}
	return o.ReportIds, true
}

// HasReportIds returns a boolean if a field has been set.
func (o *AddOrUpdateGoalResponse200DataGoal) HasReportIds() bool {
	if o != nil && !IsNil(o.ReportIds) {
		return true
	}

	return false
}

// SetReportIds gets a reference to the given []string and assigns it to the ReportIds field.
func (o *AddOrUpdateGoalResponse200DataGoal) SetReportIds(v []string) {
	o.ReportIds = v
}

func (o AddOrUpdateGoalResponse200DataGoal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOrUpdateGoalResponse200DataGoal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Assignee) {
		toSerialize["assignee"] = o.Assignee
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.ExpectedOutcome) {
		toSerialize["expected_outcome"] = o.ExpectedOutcome
	}
	if !IsNil(o.IsActive) {
		toSerialize["is_active"] = o.IsActive
	}
	if !IsNil(o.ReportIds) {
		toSerialize["report_ids"] = o.ReportIds
	}
	return toSerialize, nil
}

type NullableAddOrUpdateGoalResponse200DataGoal struct {
	value *AddOrUpdateGoalResponse200DataGoal
	isSet bool
}

func (v NullableAddOrUpdateGoalResponse200DataGoal) Get() *AddOrUpdateGoalResponse200DataGoal {
	return v.value
}

func (v *NullableAddOrUpdateGoalResponse200DataGoal) Set(val *AddOrUpdateGoalResponse200DataGoal) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOrUpdateGoalResponse200DataGoal) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOrUpdateGoalResponse200DataGoal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOrUpdateGoalResponse200DataGoal(val *AddOrUpdateGoalResponse200DataGoal) *NullableAddOrUpdateGoalResponse200DataGoal {
	return &NullableAddOrUpdateGoalResponse200DataGoal{value: val, isSet: true}
}

func (v NullableAddOrUpdateGoalResponse200DataGoal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOrUpdateGoalResponse200DataGoal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


