/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateLeadLabelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLeadLabelRequest{}

// UpdateLeadLabelRequest struct for UpdateLeadLabelRequest
type UpdateLeadLabelRequest struct {
	// The name of the lead label
	Name *string `json:"name,omitempty"`
	// The color of the label. Only a subset of colors can be used.
	Color *string `json:"color,omitempty"`
}

// NewUpdateLeadLabelRequest instantiates a new UpdateLeadLabelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLeadLabelRequest() *UpdateLeadLabelRequest {
	this := UpdateLeadLabelRequest{}
	return &this
}

// NewUpdateLeadLabelRequestWithDefaults instantiates a new UpdateLeadLabelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLeadLabelRequestWithDefaults() *UpdateLeadLabelRequest {
	this := UpdateLeadLabelRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateLeadLabelRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLeadLabelRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateLeadLabelRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateLeadLabelRequest) SetName(v string) {
	o.Name = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *UpdateLeadLabelRequest) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLeadLabelRequest) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *UpdateLeadLabelRequest) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *UpdateLeadLabelRequest) SetColor(v string) {
	o.Color = &v
}

func (o UpdateLeadLabelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLeadLabelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	return toSerialize, nil
}

type NullableUpdateLeadLabelRequest struct {
	value *UpdateLeadLabelRequest
	isSet bool
}

func (v NullableUpdateLeadLabelRequest) Get() *UpdateLeadLabelRequest {
	return v.value
}

func (v *NullableUpdateLeadLabelRequest) Set(val *UpdateLeadLabelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLeadLabelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLeadLabelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLeadLabelRequest(val *UpdateLeadLabelRequest) *NullableUpdateLeadLabelRequest {
	return &NullableUpdateLeadLabelRequest{value: val, isSet: true}
}

func (v NullableUpdateLeadLabelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLeadLabelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


