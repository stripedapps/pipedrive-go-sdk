/*
Pipedrive API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddLeadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddLeadRequest{}

// AddLeadRequest struct for AddLeadRequest
type AddLeadRequest struct {
	// The name of the lead
	Title string `json:"title"`
	// The ID of the user which will be the owner of the created lead. If not provided, the user making the request will be used.
	OwnerId *int32 `json:"owner_id,omitempty"`
	// The IDs of the lead labels which will be associated with the lead
	LabelIds []string `json:"label_ids,omitempty"`
	// The ID of a person which this lead will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `organization_id` is specified.
	PersonId *int32 `json:"person_id,omitempty"`
	// The ID of an organization which this lead will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified.
	OrganizationId *int32 `json:"organization_id,omitempty"`
	Value NullableGetLeadsResponse200DataInnerValue `json:"value,omitempty"`
	// The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.
	ExpectedCloseDate *string `json:"expected_close_date,omitempty"`
	VisibleTo *string `json:"visible_to,omitempty"`
	// A flag indicating whether the lead was seen by someone in the Pipedrive UI
	WasSeen *bool `json:"was_seen,omitempty"`
	// The optional ID to further distinguish the origin of the lead - e.g. Which API integration created this lead. If omitted, `origin_id` will be set to null.
	OriginId NullableString `json:"origin_id,omitempty"`
	// The ID of Marketing channel this lead was created from. Provided value must be one of the channels configured for your company. You can fetch allowed values with <a href=\"https://developers.pipedrive.com/docs/api/v1/DealFields#getDealField\" target=\"_blank\" rel=\"noopener noreferrer\">GET /v1/dealFields</a>. If omitted, channel will be set to null.
	Channel NullableInt32 `json:"channel,omitempty"`
	// The optional ID to further distinguish the Marketing channel. If omitted, `channel_id` will be set to null.
	ChannelId NullableString `json:"channel_id,omitempty"`
}

type _AddLeadRequest AddLeadRequest

// NewAddLeadRequest instantiates a new AddLeadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddLeadRequest(title string) *AddLeadRequest {
	this := AddLeadRequest{}
	this.Title = title
	return &this
}

// NewAddLeadRequestWithDefaults instantiates a new AddLeadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddLeadRequestWithDefaults() *AddLeadRequest {
	this := AddLeadRequest{}
	return &this
}

// GetTitle returns the Title field value
func (o *AddLeadRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AddLeadRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AddLeadRequest) SetTitle(v string) {
	o.Title = v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *AddLeadRequest) GetOwnerId() int32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddLeadRequest) GetOwnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *AddLeadRequest) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *AddLeadRequest) SetOwnerId(v int32) {
	o.OwnerId = &v
}

// GetLabelIds returns the LabelIds field value if set, zero value otherwise.
func (o *AddLeadRequest) GetLabelIds() []string {
	if o == nil || IsNil(o.LabelIds) {
		var ret []string
		return ret
	}
	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddLeadRequest) GetLabelIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.LabelIds) {
		return nil, false
	}
	return o.LabelIds, true
}

// HasLabelIds returns a boolean if a field has been set.
func (o *AddLeadRequest) HasLabelIds() bool {
	if o != nil && !IsNil(o.LabelIds) {
		return true
	}

	return false
}

// SetLabelIds gets a reference to the given []string and assigns it to the LabelIds field.
func (o *AddLeadRequest) SetLabelIds(v []string) {
	o.LabelIds = v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *AddLeadRequest) GetPersonId() int32 {
	if o == nil || IsNil(o.PersonId) {
		var ret int32
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddLeadRequest) GetPersonIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *AddLeadRequest) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given int32 and assigns it to the PersonId field.
func (o *AddLeadRequest) SetPersonId(v int32) {
	o.PersonId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *AddLeadRequest) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddLeadRequest) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *AddLeadRequest) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *AddLeadRequest) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddLeadRequest) GetValue() GetLeadsResponse200DataInnerValue {
	if o == nil || IsNil(o.Value.Get()) {
		var ret GetLeadsResponse200DataInnerValue
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddLeadRequest) GetValueOk() (*GetLeadsResponse200DataInnerValue, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *AddLeadRequest) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableGetLeadsResponse200DataInnerValue and assigns it to the Value field.
func (o *AddLeadRequest) SetValue(v GetLeadsResponse200DataInnerValue) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *AddLeadRequest) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *AddLeadRequest) UnsetValue() {
	o.Value.Unset()
}

// GetExpectedCloseDate returns the ExpectedCloseDate field value if set, zero value otherwise.
func (o *AddLeadRequest) GetExpectedCloseDate() string {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		var ret string
		return ret
	}
	return *o.ExpectedCloseDate
}

// GetExpectedCloseDateOk returns a tuple with the ExpectedCloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddLeadRequest) GetExpectedCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedCloseDate) {
		return nil, false
	}
	return o.ExpectedCloseDate, true
}

// HasExpectedCloseDate returns a boolean if a field has been set.
func (o *AddLeadRequest) HasExpectedCloseDate() bool {
	if o != nil && !IsNil(o.ExpectedCloseDate) {
		return true
	}

	return false
}

// SetExpectedCloseDate gets a reference to the given string and assigns it to the ExpectedCloseDate field.
func (o *AddLeadRequest) SetExpectedCloseDate(v string) {
	o.ExpectedCloseDate = &v
}

// GetVisibleTo returns the VisibleTo field value if set, zero value otherwise.
func (o *AddLeadRequest) GetVisibleTo() string {
	if o == nil || IsNil(o.VisibleTo) {
		var ret string
		return ret
	}
	return *o.VisibleTo
}

// GetVisibleToOk returns a tuple with the VisibleTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddLeadRequest) GetVisibleToOk() (*string, bool) {
	if o == nil || IsNil(o.VisibleTo) {
		return nil, false
	}
	return o.VisibleTo, true
}

// HasVisibleTo returns a boolean if a field has been set.
func (o *AddLeadRequest) HasVisibleTo() bool {
	if o != nil && !IsNil(o.VisibleTo) {
		return true
	}

	return false
}

// SetVisibleTo gets a reference to the given string and assigns it to the VisibleTo field.
func (o *AddLeadRequest) SetVisibleTo(v string) {
	o.VisibleTo = &v
}

// GetWasSeen returns the WasSeen field value if set, zero value otherwise.
func (o *AddLeadRequest) GetWasSeen() bool {
	if o == nil || IsNil(o.WasSeen) {
		var ret bool
		return ret
	}
	return *o.WasSeen
}

// GetWasSeenOk returns a tuple with the WasSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddLeadRequest) GetWasSeenOk() (*bool, bool) {
	if o == nil || IsNil(o.WasSeen) {
		return nil, false
	}
	return o.WasSeen, true
}

// HasWasSeen returns a boolean if a field has been set.
func (o *AddLeadRequest) HasWasSeen() bool {
	if o != nil && !IsNil(o.WasSeen) {
		return true
	}

	return false
}

// SetWasSeen gets a reference to the given bool and assigns it to the WasSeen field.
func (o *AddLeadRequest) SetWasSeen(v bool) {
	o.WasSeen = &v
}

// GetOriginId returns the OriginId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddLeadRequest) GetOriginId() string {
	if o == nil || IsNil(o.OriginId.Get()) {
		var ret string
		return ret
	}
	return *o.OriginId.Get()
}

// GetOriginIdOk returns a tuple with the OriginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddLeadRequest) GetOriginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginId.Get(), o.OriginId.IsSet()
}

// HasOriginId returns a boolean if a field has been set.
func (o *AddLeadRequest) HasOriginId() bool {
	if o != nil && o.OriginId.IsSet() {
		return true
	}

	return false
}

// SetOriginId gets a reference to the given NullableString and assigns it to the OriginId field.
func (o *AddLeadRequest) SetOriginId(v string) {
	o.OriginId.Set(&v)
}
// SetOriginIdNil sets the value for OriginId to be an explicit nil
func (o *AddLeadRequest) SetOriginIdNil() {
	o.OriginId.Set(nil)
}

// UnsetOriginId ensures that no value is present for OriginId, not even an explicit nil
func (o *AddLeadRequest) UnsetOriginId() {
	o.OriginId.Unset()
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddLeadRequest) GetChannel() int32 {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret int32
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddLeadRequest) GetChannelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *AddLeadRequest) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableInt32 and assigns it to the Channel field.
func (o *AddLeadRequest) SetChannel(v int32) {
	o.Channel.Set(&v)
}
// SetChannelNil sets the value for Channel to be an explicit nil
func (o *AddLeadRequest) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *AddLeadRequest) UnsetChannel() {
	o.Channel.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddLeadRequest) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddLeadRequest) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *AddLeadRequest) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *AddLeadRequest) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *AddLeadRequest) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *AddLeadRequest) UnsetChannelId() {
	o.ChannelId.Unset()
}

func (o AddLeadRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddLeadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.LabelIds) {
		toSerialize["label_ids"] = o.LabelIds
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if !IsNil(o.ExpectedCloseDate) {
		toSerialize["expected_close_date"] = o.ExpectedCloseDate
	}
	if !IsNil(o.VisibleTo) {
		toSerialize["visible_to"] = o.VisibleTo
	}
	if !IsNil(o.WasSeen) {
		toSerialize["was_seen"] = o.WasSeen
	}
	if o.OriginId.IsSet() {
		toSerialize["origin_id"] = o.OriginId.Get()
	}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["channel_id"] = o.ChannelId.Get()
	}
	return toSerialize, nil
}

func (o *AddLeadRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddLeadRequest := _AddLeadRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddLeadRequest)

	if err != nil {
		return err
	}

	*o = AddLeadRequest(varAddLeadRequest)

	return err
}

type NullableAddLeadRequest struct {
	value *AddLeadRequest
	isSet bool
}

func (v NullableAddLeadRequest) Get() *AddLeadRequest {
	return v.value
}

func (v *NullableAddLeadRequest) Set(val *AddLeadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddLeadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddLeadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddLeadRequest(val *AddLeadRequest) *NullableAddLeadRequest {
	return &NullableAddLeadRequest{value: val, isSet: true}
}

func (v NullableAddLeadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddLeadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


